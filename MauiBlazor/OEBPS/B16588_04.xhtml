<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>B16588_04</title>
<link href="css/style-JRserifv6.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="B16588_04" xml:lang="en-GB">
<div id="_idContainer055">
<h1 class="chapter-number" id="_idParaDest-83"><a id="_idTextAnchor087"/><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">4</span></h1>
<h1 id="_idParaDest-84"><a id="_idTextAnchor088"/><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">Exploring MVVM and Data Binding</span></h1>
<p><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">In the last chapter, we learned </span><a id="_idIndexMarker230"/><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml">how to build </span><strong class="bold"><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">user interfaces</span></strong><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">UIs</span></strong><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">) using XAML. </span><span class="koboSpan" id="kobo.8.2" xmlns="http://www.w3.org/1999/xhtml">In this chapter, we will learn how to use the </span><strong class="bold"><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">Model-View-ViewModel</span></strong><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">MVVM</span></strong><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">) pattern </span><a id="_idIndexMarker231"/><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">and data binding in .NET MAUI app development. </span><span class="koboSpan" id="kobo.13.2" xmlns="http://www.w3.org/1999/xhtml">MVVM is a UI design pattern for decoupling UI and non-UI code. </span><span class="koboSpan" id="kobo.13.3" xmlns="http://www.w3.org/1999/xhtml">data binding is the key technology that MVVM relies on. </span><span class="koboSpan" id="kobo.13.4" xmlns="http://www.w3.org/1999/xhtml">We will improve the design of our app using MVVM and data binding. </span><span class="koboSpan" id="kobo.13.5" xmlns="http://www.w3.org/1999/xhtml">We will also replace the data model using open </span><span class="No-Break"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">source libraries.</span></span></p>
<p><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml">The following topics will be covered in </span><span class="No-Break"><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">this chapter:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">Understanding MVVM </span><span class="No-Break"><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">and MVC</span></span></li>
<li><span class="No-Break"><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml">Data binding</span></span></li>
<li><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml">Improving the data model </span><span class="No-Break"><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml">and service</span></span></li>
</ul>
<h1 id="_idParaDest-85"><a id="_idTextAnchor089"/><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">Technical requirements</span></h1>
<p><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml">To test and debug the source code in this chapter, you need to have Visual Studio 2022 installed on your PC or Mac. </span><span class="koboSpan" id="kobo.23.2" xmlns="http://www.w3.org/1999/xhtml">Please refer to the </span><em class="italic"><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml">Development environment setup</span></em><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml"> section in </span><a href="B16588_01.xhtml#_idTextAnchor015"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 1</span></em></span></a><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">Getting Started with .NET MAUI</span></em><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">, for </span><span class="No-Break"><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml">the details.</span></span></p>
<p><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml">The source code of this chapter is available in the following branch at </span><span class="No-Break"><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">GitHub: </span></span><a href="https://github.com/PacktPublishing/.NET-MAUI-Cross-Platform-Application-Development/tree/main/Chapter04"><span class="No-Break"><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/PacktPublishing/.NET-MAUI-Cross-Platform-Application-Development/tree/main/Chapter04</span></span></a><span class="No-Break"><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml">The source code can be downloaded using the following </span><span class="No-Break"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">Git command:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml">
git clone -b chapter04 https://github.com/PacktPublishing/.NET-MAUI-Cross-Platform-Application-Development</span></pre>
<h1 id="_idParaDest-86"><a id="_idTextAnchor090"/><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml">Understanding MVVM and MVC</span></h1>
<p><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml">In software </span><a id="_idIndexMarker232"/><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml">design, we usually follow and reuse good practices and design patterns. </span><span class="koboSpan" id="kobo.40.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="bold"><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">Model-View-Controller</span></strong><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">MVC</span></strong><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml">) pattern is </span><a id="_idIndexMarker233"/><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml">an approach to decoupling the responsibilities of a system. </span><span class="koboSpan" id="kobo.45.2" xmlns="http://www.w3.org/1999/xhtml">It can help to separate the implementation of the UI and the business logic into </span><span class="No-Break"><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">different parts.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer045">
<span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.1: The MVC pattern" src="image/Figure_4.01_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.1: The MVC pattern</span></p>
<p><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml">The MVC pattern, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml">.1</span></em><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml">, divides the responsibilities of the system into three </span><span class="No-Break"><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">distinct parts.</span></span></p>
<p><strong class="bold"><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml">Model</span></strong><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml"> stores the application data and processes business logic. </span><span class="koboSpan" id="kobo.55.2" xmlns="http://www.w3.org/1999/xhtml">Model classes usually can be </span><a id="_idIndexMarker234"/><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml">implemented as </span><strong class="bold"><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml">Plain Old CLR Objects</span></strong><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">POCOs</span></strong><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml">) or </span><strong class="bold"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">Data Transfer Objects</span></strong><span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">DTOs</span></strong><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.64.2" xmlns="http://www.w3.org/1999/xhtml">POCO is a class that doesn’t depend on any </span><a id="_idIndexMarker235"/><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">framework-specific classes, so POCO classes can be used with LINQ or Entity Framework well. </span><span class="koboSpan" id="kobo.65.2" xmlns="http://www.w3.org/1999/xhtml">DTO is a subset of a POCO class that only contains data without logic or behavior. </span><span class="koboSpan" id="kobo.65.3" xmlns="http://www.w3.org/1999/xhtml">DTO classes can be used to pass data between layers. </span><span class="koboSpan" id="kobo.65.4" xmlns="http://www.w3.org/1999/xhtml">The model has no dependency on the view or the controller so it can be implemented and </span><span class="No-Break"><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml">tested separately.</span></span></p>
<p><strong class="bold"><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml"> presents the model information to the user and interacts with </span><span class="No-Break"><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml">the user.</span></span></p>
<p><strong class="bold"><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">Controller</span></strong><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml"> updates the model and view in response to the user’s action. </span><span class="koboSpan" id="kobo.71.2" xmlns="http://www.w3.org/1999/xhtml">Our understanding of the model and the view hasn’t changed too much over time, but there have been </span><a id="_idIndexMarker236"/><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">different understandings and implementations </span><a id="_idIndexMarker237"/><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml">of the controller since the MVC pattern </span><span class="No-Break"><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">was introduced.</span></span></p>
<p><strong class="bold"><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml">Model-View-Presenter</span></strong><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml">MVP</span></strong><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">) is one </span><a id="_idIndexMarker238"/><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml">of them. </span><span class="koboSpan" id="kobo.79.2" xmlns="http://www.w3.org/1999/xhtml">Later, Microsoft used MVVM and XAML in WPF, which is a variation of MVP. </span><span class="koboSpan" id="kobo.79.3" xmlns="http://www.w3.org/1999/xhtml">In Xamarin.Forms and .NET MAUI, XAML and the MVVM pattern are </span><span class="No-Break"><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">also used.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer046">
<span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.2: The MVVM pattern" src="image/Figure_4.02_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.2: The MVVM pattern</span></p>
<p><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">As we </span><a id="_idIndexMarker239"/><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">can see in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">.2</span></em><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml">, in MVVM, the view model is used to replace the controller. </span><span class="koboSpan" id="kobo.87.2" xmlns="http://www.w3.org/1999/xhtml">The </span><a id="_idIndexMarker240"/><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml">differences between MVVM and MVC are </span><span class="No-Break"><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml">as follows:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">Decoupling of view and model. </span><span class="koboSpan" id="kobo.90.2" xmlns="http://www.w3.org/1999/xhtml">The viewmodel is used to handle the communication between the view and the model. </span><span class="koboSpan" id="kobo.90.3" xmlns="http://www.w3.org/1999/xhtml">The view accesses the data and logic in the model via </span><span class="No-Break"><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">the viewmodel.</span></span></li>
<li><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">Data binding between the view and viewmodel. </span><span class="koboSpan" id="kobo.92.2" xmlns="http://www.w3.org/1999/xhtml">Using data binding, changes to the view or viewmodel can automatically be updated in the other one. </span><span class="koboSpan" id="kobo.92.3" xmlns="http://www.w3.org/1999/xhtml">This can help to reduce the complexity </span><span class="No-Break"><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">of implementation.</span></span></li>
<li><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml">In both MVC and MVVM, the model can be tested separately. </span><span class="koboSpan" id="kobo.94.2" xmlns="http://www.w3.org/1999/xhtml">In MVVM, it is possible to design unit tests for the viewmodel </span><span class="No-Break"><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml">as well.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml">When </span><a id="_idIndexMarker241"/><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml">the view changes, the changes will be reflected in the viewmodel via data binding. </span><span class="koboSpan" id="kobo.97.2" xmlns="http://www.w3.org/1999/xhtml">The viewmodel will process the data changes in the model. </span><span class="koboSpan" id="kobo.97.3" xmlns="http://www.w3.org/1999/xhtml">Similarly, when the </span><a id="_idIndexMarker242"/><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">data changes in the model, the viewmodel is notified to update the view. </span><span class="koboSpan" id="kobo.98.2" xmlns="http://www.w3.org/1999/xhtml">The common solution for notifications is to install event handlers to notify the changes. </span><span class="koboSpan" id="kobo.98.3" xmlns="http://www.w3.org/1999/xhtml">With data binding, the implementation is </span><span class="No-Break"><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml">simplified significantly.</span></span></p>
<h2 id="_idParaDest-87"><a id="_idTextAnchor091"/><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml">MVVM in PassXYZ.Vault</span></h2>
<p><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml">In our app, </span><strong class="source-inline"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault</span></strong><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml">, we use MVVM to handle the data exchange between the view </span><a id="_idIndexMarker243"/><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">and the viewmodel. </span><span class="koboSpan" id="kobo.104.2" xmlns="http://www.w3.org/1999/xhtml">As we can see in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">.3</span></em><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml">, we have five XAML content pages and the same number of viewmodels defined. </span><span class="koboSpan" id="kobo.107.2" xmlns="http://www.w3.org/1999/xhtml">In our data model, we have an </span><strong class="source-inline"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml"> class, which is our model class, and it can be accessed through the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">IDataStore</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml"> interface.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer047">
<span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.3: MVVM in PassXYZ.Vault" src="image/Figure_4.03_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.3: MVVM in PassXYZ.Vault</span></p>
<p><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">Data binding </span><a id="_idIndexMarker244"/><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml">is used as the communication channel between views and viewmodels. </span><span class="koboSpan" id="kobo.115.2" xmlns="http://www.w3.org/1999/xhtml">The viewmodel will update the </span><strong class="source-inline"><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml"> model via the </span><strong class="source-inline"><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml">IDataStore</span></strong><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml"> service interface. </span><span class="koboSpan" id="kobo.119.2" xmlns="http://www.w3.org/1999/xhtml">We will learn how to use data binding in the next section by analyzing the item detail page </span><span class="No-Break"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">and viewmodel.</span></span></p>
<h1 id="_idParaDest-88"><a id="_idTextAnchor092"/><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">Data binding</span></h1>
<p><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">Let’s explore </span><a id="_idIndexMarker245"/><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml">how MVVM and data binding works in our app. </span><span class="koboSpan" id="kobo.123.2" xmlns="http://www.w3.org/1999/xhtml">We can analyze </span><strong class="source-inline"><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml"> at the beginning of our journey. </span><span class="koboSpan" id="kobo.127.2" xmlns="http://www.w3.org/1999/xhtml">The following list includes the view, viewmodel, and model that we are going </span><span class="No-Break"><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml">to explore:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml">View – </span><strong class="source-inline"><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">, see </span><em class="italic"><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.4</span></em><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml"> in the </span><span class="No-Break"><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml">previous chapter</span></span></li>
<li><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">Viewmodel – </span><strong class="source-inline"><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml">, see </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.1</span></em></span></li>
<li><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml">Model – </span><strong class="source-inline"><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml"> (access through interface </span><strong class="source-inline"><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml">IDataStore</span></strong><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml">), see </span><em class="italic"><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.3</span></em><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml"> in the </span><span class="No-Break"><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">previous chapter</span></span></li>
</ul>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml"> is a view used to display the content of an instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.150.2" xmlns="http://www.w3.org/1999/xhtml">This instance is stored in the viewmodel. </span><span class="koboSpan" id="kobo.150.3" xmlns="http://www.w3.org/1999/xhtml">The UI elements presenting the content of </span><strong class="source-inline"><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml"> are connected to the instance through </span><span class="No-Break"><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml">data binding.</span></span></p>
<p><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml">Data binding is </span><a id="_idIndexMarker246"/><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">used to link the properties of target and source objects. </span><span class="koboSpan" id="kobo.155.2" xmlns="http://www.w3.org/1999/xhtml">Here is a list of involved properties of target and </span><span class="No-Break"><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml">source objects:</span></span></p>
<ul>
<li><strong class="bold"><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml">Target</span></strong><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml"> – This is the UI element involved and this UI element has to be a child of </span><strong class="source-inline"><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml">BindableObject</span></strong><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.160.2" xmlns="http://www.w3.org/1999/xhtml">The UI element used in </span><strong class="source-inline"><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml">is </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml">Target property</span></strong><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml"> – This is the property of the target object. </span><span class="koboSpan" id="kobo.166.2" xmlns="http://www.w3.org/1999/xhtml">It is a </span><strong class="source-inline"><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml">BindableProperty</span></strong><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.168.2" xmlns="http://www.w3.org/1999/xhtml">If the target is </span><strong class="source-inline"><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">, as we mentioned here, the target property can be the </span><strong class="source-inline"><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml"> property </span><span class="No-Break"><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml">Source</span></strong><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml"> – This is the source object referenced by data binding. </span><span class="koboSpan" id="kobo.177.2" xmlns="http://www.w3.org/1999/xhtml">It is </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml"> here.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml">Source object value path</span></strong><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml"> – This is the path to the value in the source object. </span><span class="koboSpan" id="kobo.181.2" xmlns="http://www.w3.org/1999/xhtml">Here, the path is a viewmodel property, such as </span><strong class="source-inline"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml">or </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">Let’s look at the following code </span><span class="No-Break"><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml">in </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;StackLayout Spacing="20" Padding="15"&gt;
        &lt;Label Text="Name:" FontSize="Medium" /&gt;
        &lt;Label Text="{Binding Name}" FontSize="Small"/&gt;   ❶
        &lt;Label Text="Description:" FontSize="Medium" /&gt;
        &lt;Label Text="{Binding Description}"
            FontSize="Small"/&gt;                            ❷
&lt;/StackLayout&gt;</span></pre>
<p><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml">In the XAML here, there are two data binding source paths, which are </span><strong class="source-inline"><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">, ❶, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">, ❷. </span><span class="koboSpan" id="kobo.195.2" xmlns="http://www.w3.org/1999/xhtml">The binding target is </span><strong class="source-inline"><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml"> and the target property is the </span><strong class="source-inline"><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml"> property of </span><strong class="source-inline"><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.201.2" xmlns="http://www.w3.org/1999/xhtml">If we review the inheritance hierarchy of </span><strong class="source-inline"><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">, it looks </span><span class="No-Break"><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">Object</span></strong><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><strong class="source-inline"><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml">BindableObject</span></strong><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><strong class="source-inline"><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml">Element</span></strong><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><strong class="source-inline"><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">NavigableElement</span></strong><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><strong class="source-inline"><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">VisualElement</span></strong><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><strong class="source-inline"><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml"> -&gt; </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span></p>
<p><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">We can see that </span><strong class="source-inline"><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml">Element</span></strong><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml">VisualElement</span></strong><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml"> are the derivatives of </span><strong class="source-inline"><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml">BindableObject</span></strong><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.226.2" xmlns="http://www.w3.org/1999/xhtml">The data binding target has to be a child </span><span class="No-Break"><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml">BindableObject</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml">The binding </span><a id="_idIndexMarker247"/><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml">source is the </span><strong class="source-inline"><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml"> viewmodel. </span><strong class="source-inline"><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">, ①, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml">, ②, are properties of the viewmodel as shown in </span><em class="italic"><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml">Listing </span></em><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml">4.1</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml"> here:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.1: ItemDetailViewModel.cs (https://epa.ms/ItemDetailViewModel4-1)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml">
using PassXYZ.Vault.Models;
namespace PassXYZ.Vault.ViewModels {
[QueryProperty(nameof(ItemId), nameof(ItemId))]
public class ItemDetailViewModel : BaseViewModel {
        private string itemId;
        private string name;
        private string description;
        public string Id { get; set; }
        public string Name {                              ①
            get =&gt; name;
            set =&gt; SetProperty(ref name, value);
        }
        public string Description…                        ②
        public string ItemId...
</span><span class="koboSpan" id="kobo.242.2" xmlns="http://www.w3.org/1999/xhtml">        public async void LoadItemId(string itemId) {     ③
            try {
                var item = await DataStore.GetItemAsync
                    (itemId);
                Id = item.Id;
                Name = item.Name;
                Description = item.Description;
            }
            catch (Exception) {
                Debug.WriteLine("Failed to Load Item");
            }
        }
}</span></pre>
<p><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">The values of </span><strong class="source-inline"><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">, ①, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">, ②, are loaded from the model in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">LoadItemId()</span></strong><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml"> method, ③. </span><span class="koboSpan" id="kobo.249.2" xmlns="http://www.w3.org/1999/xhtml">You may notice that the class is decorated by a </span><strong class="source-inline"><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml">QueryPropertyAttribute</span></strong><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml"> attribute. </span><span class="koboSpan" id="kobo.251.2" xmlns="http://www.w3.org/1999/xhtml">This is used to pass parameters during page navigation, and it will be introduced in the </span><span class="No-Break"><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">next chapter.</span></span></p>
<p><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml">Let’s use </span><a id="_idIndexMarker248"/><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml">the following, </span><em class="italic"><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml">Table 4.1</span></em><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml">, to summarize the data binding components in </span><span class="No-Break"><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">the code.</span></span></p>
<table class="No-Table-Style _idGenTablePara-1" id="table001-3">
<colgroup>
<col/>
<col/>
</colgroup>
<tbody>
<tr class="No-Table-Style">
<td class="No-Table-Style">
<p><span lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml">Data </span></span><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml">binding elements</span></span></p>
</td>
<td class="No-Table-Style">
<p><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">Example</span></span></p>
</td>
</tr>
<tr class="No-Table-Style">
<td class="No-Table-Style">
<p><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">Target</span></span></p>
</td>
<td class="No-Table-Style">
<p><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span></p>
</td>
</tr>
<tr class="No-Table-Style">
<td class="No-Table-Style">
<p><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">Target property</span></span></p>
</td>
<td class="No-Table-Style">
<p><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong></span></p>
</td>
</tr>
<tr class="No-Table-Style">
<td class="No-Table-Style">
<p><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">Source object</span></span></p>
</td>
<td class="No-Table-Style">
<p><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong></span></p>
</td>
</tr>
<tr class="No-Table-Style">
<td class="No-Table-Style">
<p><span lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">Source object </span></span><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">value path</span></span></p>
</td>
<td class="No-Table-Style">
<p><strong class="source-inline"><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span lang="en-US" xml:lang="en-US"> </span><span class="No-Break" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">or </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></span></p>
</td>
</tr>
</tbody>
</table>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml">Table 4.1: Data binding settings</span></p>
<p><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml">Having analyzed the preceding code, let us have a look at the syntax of the </span><span class="No-Break"><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml">binding expression:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;object property="{Binding bindProp1=value1[,
  bindPropN=valueN]*}" ... </span><span class="koboSpan" id="kobo.275.2" xmlns="http://www.w3.org/1999/xhtml">/&gt;</span></pre>
<p><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml">Binding properties can be set as a series of name-value pairs in the form of </span><strong class="source-inline"><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">bindProp=value</span></strong><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.278.2" xmlns="http://www.w3.org/1999/xhtml">For example, see </span><span class="No-Break"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">the following:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Label Text="{Binding Path=Description}" FontSize="Small"/&gt;</span></pre>
<p><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml">Path</span></strong><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml"> property is the default property, and it can be omitted if it is the first one in the property list as </span><span class="No-Break"><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">shown here:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Label Text="{Binding Description}" FontSize="Small"/&gt;</span></pre>
<p><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">Source</span></strong><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml"> property can be set to override </span><strong class="source-inline"><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml">BindingContext</span></strong><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml">, which we will discuss shortly. </span><span class="koboSpan" id="kobo.290.2" xmlns="http://www.w3.org/1999/xhtml">There are many binding properties, and you can find the details by referring to Microsoft </span><a id="_idIndexMarker249"/><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml">document about the </span><strong class="source-inline"><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">Binding</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml">class here:</span></span></p>
<p><a href="https://learn.microsoft.com/en-us/dotnet/api/system.windows.data.binding?view=windowsdesktop-6.0"><span class="No-Break"><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/api/system.windows.data.binding?view=windowsdesktop-6.0</span></span></a></p>
<p><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml">When we </span><a id="_idIndexMarker250"/><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml">set data binding to the target, we can use the following two members of the </span><span class="No-Break"><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml">target class:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">BindingContext</span></strong><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml"> property </span><a id="_idIndexMarker251"/><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml">gives us the </span><span class="No-Break"><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml">source object</span></span></li>
<li><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml">SetBinding</span></strong><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml"> method </span><a id="_idIndexMarker252"/><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml">specifies the target property and </span><span class="No-Break"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">source property</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">In our case, we set the </span><strong class="source-inline"><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml">BindingContext</span></strong><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml"> property to an instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">, ❶, in the C# code-behind file of </span><strong class="source-inline"><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml"> as shown in </span><em class="italic"><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.2</span></em><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml"> here. </span><span class="koboSpan" id="kobo.316.2" xmlns="http://www.w3.org/1999/xhtml">It is set at the page level, and it applies to all binding targets for </span><span class="No-Break"><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">this page:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.2: ItemDetailPage.xaml.cs (https://epa.ms/ItemDetailPage4-2)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">
using PassXYZ.Vault.ViewModels;
using System.ComponentModel;
using Microsoft.Maui;
using Microsoft.Maui.Controls;
namespace PassXYZ.Vault.Views
{
    public partial class ItemDetailPage : ContentPage
    {
        public ItemDetailPage()
        {
            InitializeComponent();
            BindingContext = new ItemDetailViewModel();   ❶
        }
    }
    void OnFieldSelected ...
</span><span class="koboSpan" id="kobo.319.2" xmlns="http://www.w3.org/1999/xhtml">}</span></pre>
<p><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml">Instead </span><a id="_idIndexMarker253"/><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">of using the </span><strong class="source-inline"><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml">Binding</span></strong><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml"> markup extension, we can also create the binding using the </span><strong class="source-inline"><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml">SetBinding</span></strong><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml"> method directly as </span><span class="No-Break"><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml">done here:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml">
    &lt;StackLayout Spacing="20" Padding="15"&gt;
        &lt;Label Text="Text:" FontSize="Medium" /&gt;
        &lt;Label x:Name="labelText" FontSize="Small"/&gt;      ❷
        &lt;Label Text="Description:" FontSize="Medium" /&gt;
        &lt;Label Text="{Binding Description}"
            FontSize="Small"/&gt;
    &lt;/StackLayout&gt;</span></pre>
<p><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml">❷ In the XAML code, we removed the </span><strong class="source-inline"><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml">Binding</span></strong><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml"> markup extension and specified the instance </span><a id="_idIndexMarker254"/><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">name as </span><strong class="source-inline"><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml">labelText</span></strong><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.333.2" xmlns="http://www.w3.org/1999/xhtml">In the C# code-behind file, we can call the </span><strong class="source-inline"><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml">SetBinding()</span></strong><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml"> method, ❸, in the constructor of </span><strong class="source-inline"><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml"> to create the data binding for the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml"> property:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml">
    public ItemDetailPage()
    {
        InitializeComponent();
        BindingContext = new ItemDetailViewModel();
        labelText.SetBinding(Label.TextProperty, "Text"); ❸
    }</span></pre>
<h2 id="_idParaDest-89"><a id="_idTextAnchor093"/><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">Binding mode</span></h2>
<p><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">In this discussion, all the UI elements are </span><strong class="source-inline"><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml"> objects, which are not editable for the user. </span><span class="koboSpan" id="kobo.344.2" xmlns="http://www.w3.org/1999/xhtml">This is </span><a id="_idIndexMarker255"/><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml">one-way binding from the source to the target. </span><span class="koboSpan" id="kobo.345.2" xmlns="http://www.w3.org/1999/xhtml">In this kind of binding setup, we do not change target objects. </span><span class="koboSpan" id="kobo.345.3" xmlns="http://www.w3.org/1999/xhtml">The changes in the source object will cause updates in the </span><span class="No-Break"><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml">target object.</span></span></p>
<p><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml">There are four binding modes supported in .NET MAUI. </span><span class="koboSpan" id="kobo.347.2" xmlns="http://www.w3.org/1999/xhtml">Let’s review them by referring to </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer048">
<span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.4: Binding mode" src="image/Figure_4.04_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.4: Binding mode</span></p>
<p><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">These binding modes are supported in .</span><span class="No-Break"><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml">NET MAUI:</span></span></p>
<ul>
<li><strong class="bold"><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml">OneWay</span></strong><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml"> binding is </span><a id="_idIndexMarker256"/><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">usually used in the case of presenting data to the user. </span><span class="koboSpan" id="kobo.357.2" xmlns="http://www.w3.org/1999/xhtml">In our app, we will retrieve a list of password entries and display this list on </span><strong class="source-inline"><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.359.2" xmlns="http://www.w3.org/1999/xhtml">When the user clicks an item in the list, the password details will show on </span><strong class="source-inline"><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">. </span><strong class="source-inline"><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml">OneWay</span></strong><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml"> is used in </span><span class="No-Break"><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">both cases.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">TwoWay</span></strong><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml"> binding </span><a id="_idIndexMarker257"/><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">causes changes to either the source property or the target property to automatically update the other. </span><span class="koboSpan" id="kobo.367.2" xmlns="http://www.w3.org/1999/xhtml">In our app, when the user edits the fields of a password entry or when the user enters a username and password on </span><strong class="source-inline"><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml">LoginPage</span></strong><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">, the target UI </span><strong class="source-inline"><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml"> component and the source view model object are set </span><span class="No-Break"><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml">with </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml">TwoWay</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml">OneWayToSource</span></strong><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml"> is the reverse of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml">OneWay</span></strong><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml"> binding mode. </span><span class="koboSpan" id="kobo.378.2" xmlns="http://www.w3.org/1999/xhtml">When the target </span><a id="_idIndexMarker258"/><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">property is changed, the source property will be updated. </span><span class="koboSpan" id="kobo.379.2" xmlns="http://www.w3.org/1999/xhtml">When we add a new password entry on </span><strong class="source-inline"><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml">NewItemPage</span></strong><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml">, we can use </span><strong class="source-inline"><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">OneWayToSource</span></strong><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml"> instead of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml">TwoWay</span></strong><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml"> binding mode to </span><span class="No-Break"><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml">improve performance.</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml">OneTime</span></strong><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml"> binding is a binding mode that is not shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.391.2" xmlns="http://www.w3.org/1999/xhtml">The target properties </span><a id="_idIndexMarker259"/><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml">are initialized from the source properties, but any further changes to the source properties won’t update the target properties. </span><span class="koboSpan" id="kobo.392.2" xmlns="http://www.w3.org/1999/xhtml">It is a simpler form of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">OneWay</span></strong><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml"> binding mode with </span><span class="No-Break"><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml">better performance.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml">If we don’t </span><a id="_idIndexMarker260"/><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml">specify the binding mode in data binding, the default binding mode is used. </span><span class="koboSpan" id="kobo.397.2" xmlns="http://www.w3.org/1999/xhtml">We can overwrite the default binding mode if it </span><span class="No-Break"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">is needed.</span></span></p>
<p><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml">In our </span><strong class="source-inline"><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml"> code, we use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml"> control to display the list of password groups and entries, so we should set the </span><strong class="source-inline"><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">IsRefreshing</span></strong><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml"> attribute to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml">OneWay</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml">binding mode:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">
IsRefreshing="{Binding IsBusy, Mode=OneWay}"</span></pre>
<p><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml">When we add a new item in </span><strong class="source-inline"><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml">NewItemPage</span></strong><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">, we use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml">Editor</span></strong><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml"> controls to edit the properties. </span><span class="koboSpan" id="kobo.415.2" xmlns="http://www.w3.org/1999/xhtml">We can use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">OneWayToSource</span></strong><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><strong class="source-inline"><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">TwoWay</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml">binding modes:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Label Text="Text" FontSize="Medium" /&gt;
&lt;Entry Text="{Binding Text, Mode=TwoWay}" FontSize="Medium"
   /&gt;
&lt;Label Text="Description" FontSize="Medium" /&gt;
&lt;Editor Text="{Binding Description, Mode=OneWayToSource}"
  AutoSize="TextChanges" FontSize="Medium" Margin="0" /&gt;</span></pre>
<h2 id="_idParaDest-90"><a id="_idTextAnchor094"/><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">Changing notifications in viewmodels</span></h2>
<p><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">In </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">, we can see the data binding target is a derived class of </span><strong class="source-inline"><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">BindableObject</span></strong><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.427.2" xmlns="http://www.w3.org/1999/xhtml">Besides this requirement, in the data binding setup, both the data binding </span><a id="_idIndexMarker261"/><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml">target and source also need to implement the </span><strong class="source-inline"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">INotifyPropertyChanged</span></strong><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml"> interface so that when the property changes, a </span><strong class="source-inline"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml"> event is raised to notify </span><span class="No-Break"><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml">the change.</span></span></p>
<p><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">In an MVVM pattern, the viewmodel is usually the data binding source and we need to implement the </span><strong class="source-inline"><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml">INotifyPropertyChanged</span></strong><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml"> interface in our viewmodels. </span><span class="koboSpan" id="kobo.436.2" xmlns="http://www.w3.org/1999/xhtml">If we do this for each viewmodel, there will be a lot of duplicated code. </span><span class="koboSpan" id="kobo.436.3" xmlns="http://www.w3.org/1999/xhtml">In a Visual Studio template, a </span><strong class="source-inline"><span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml">BaseViewModel</span></strong><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml"> class, as we can see in </span><em class="italic"><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.3</span></em><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml">, is included in the boilerplate code and we use it in our app. </span><span class="koboSpan" id="kobo.440.2" xmlns="http://www.w3.org/1999/xhtml">Other viewmodels inherit </span><span class="No-Break"><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml">this class:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.3 BaseViewModel.cs (https://epa.ms/BaseViewModel4-3)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml">
namespace PassXYZ.Vault.ViewModels;
public class BaseViewModel : InotifyPropertyChanged       ❶
{
  public IDataStore&lt;Item&gt; DataStore =&gt;
    DependencyService.Get&lt;IDataStore&lt;Item&gt;&gt;();
  bool isBusy = false;
  public bool IsBusy {
    get { return isBusy; }
    set { SetProperty(ref isBusy, value); }               ❷
  }
  string title = string.Empty;
  public string Title {
    get { return title; }
    set { SetProperty(ref title, value); }
  }
  protected bool SetProperty&lt;T&gt;(ref T backingStore,
      T value,
      [CallerMemberName] string propertyName = "",
      Action onChanged = null) {
    if (EqualityComparer&lt;T&gt;.Default.Equals
        (backingStore, value))
        return false;
    backingStore = value;
    onChanged?.Invoke();
    OnPropertyChanged(propertyName);
    return true;
  }
  #region INotifyPropertyChanged
 public event PropertyChangedEventHandler PropertyChanged;❹
  protected void OnPropertyChanged([CallerMemberName]
    string propertyName = "") {                           ❸
    var changed = PropertyChanged;
    if (changed == null)
        return;
changed.Invoke(this,
  new PropertyChangedEventArgs(propertyName));
  }
  #endregion
}</span></pre>
<p><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml">BaseViewModel</span></strong><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml"> class (</span><em class="italic"><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.3</span></em><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml">), we can see </span><span class="No-Break"><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml">the following:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml"> ❶ </span><strong class="source-inline"><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml">BaseViewModel</span></strong><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml"> implements the </span><strong class="source-inline"><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml">INotifyPropertyChanged</span></strong><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml"> interface and this interface defines a single event, </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml">, </span></span><span class="No-Break"><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">❹</span></span><span class="No-Break"><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml"> ❸ When a </span><a id="_idIndexMarker262"/><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml">property is changed in the setter, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml"> method is called. </span><span class="koboSpan" id="kobo.462.2" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml">, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml"> event is fired. </span><span class="koboSpan" id="kobo.466.2" xmlns="http://www.w3.org/1999/xhtml">A copy of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml"> event handler is stored in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">changed</span></strong><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml"> local variable, so this implementation is safe in a multi-thread environment. </span><span class="koboSpan" id="kobo.470.2" xmlns="http://www.w3.org/1999/xhtml">When the </span><strong class="source-inline"><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml"> event is fired, it needs to pass the property name as a parameter to indicate which property is changed. </span><span class="koboSpan" id="kobo.472.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">CallerMemberName</span></strong><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml"> attribute can be used to find the method name or property name of the caller, so we don’t need to hardcode the </span><span class="No-Break"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">property name.</span></span></li>
<li><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml"> ❷ When we define a property in the viewmodel, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml"> method is called in the setter – but as you can see, in our code, we call </span><strong class="source-inline"><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml">SetProperty&lt;T&gt;</span></strong><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml"> instead of </span><strong class="source-inline"><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml"> directly. </span><strong class="source-inline"><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml">SetProperty&lt;T&gt;</span></strong><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml"> will do additional work before it calls </span><strong class="source-inline"><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.486.2" xmlns="http://www.w3.org/1999/xhtml">It checks whether the value is changed. </span><span class="koboSpan" id="kobo.486.3" xmlns="http://www.w3.org/1999/xhtml">If there is no change, it will return and do nothing. </span><span class="koboSpan" id="kobo.486.4" xmlns="http://www.w3.org/1999/xhtml">If the value is changed, it will update the backing field and call </span><strong class="source-inline"><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml">OnPropertyChanged</span></strong><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml"> to fire the </span><span class="No-Break"><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">change event.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">If we recall </span><strong class="source-inline"><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><em class="italic"><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.1</span></em><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">, it inherits from the </span><strong class="source-inline"><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml">BaseViewModel</span></strong><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.496.2" xmlns="http://www.w3.org/1999/xhtml">In the setter of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml"> properties, we call </span><strong class="source-inline"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">SetProperty&lt;T&gt;</span></strong><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml"> to set the values and fire the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">PropertyChanged</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml"> event:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">
        public string Name {
            get =&gt; name;
            set =&gt; SetProperty(ref name, value);
        }
        public string Description {
            get =&gt; description;
            set =&gt; SetProperty(ref description, value);
        }</span></pre>
<p><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">In this section, we learned about data binding and the </span><strong class="source-inline"><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml">INotifyPropertyChanged</span></strong><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml"> interface. </span><span class="koboSpan" id="kobo.508.2" xmlns="http://www.w3.org/1999/xhtml">We need </span><a id="_idIndexMarker263"/><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml">to create boilerplate code to define a property with change notification support. </span><span class="koboSpan" id="kobo.509.2" xmlns="http://www.w3.org/1999/xhtml">To simplify the code and autogenerate boilerplate code behind the scenes, we can use the MVVM Toolkit. </span><span class="koboSpan" id="kobo.509.3" xmlns="http://www.w3.org/1999/xhtml">Please find more information about the MVVM Toolkit in the </span><em class="italic"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">Further </span></em><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">reading</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml"> section.</span></span></p>
<p><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">Having introduced some basic knowledge of XAML UI design, the MVVM pattern, and data binding, we can improve our app using the knowledge we </span><span class="No-Break"><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml">just learned.</span></span></p>
<h1 id="_idParaDest-91"><a id="_idTextAnchor095"/><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">Improving the data model and service</span></h1>
<p><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml">To improve </span><a id="_idIndexMarker264"/><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">our app, let us review the use cases again. </span><span class="koboSpan" id="kobo.517.2" xmlns="http://www.w3.org/1999/xhtml">We are developing a cross-platform </span><a id="_idIndexMarker265"/><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml">password manager app that is compatible </span><a id="_idIndexMarker266"/><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">with the popular </span><strong class="bold"><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml">KeePass</span></strong><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml"> database format. </span><span class="koboSpan" id="kobo.521.2" xmlns="http://www.w3.org/1999/xhtml">We have the following </span><span class="No-Break"><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml">use cases:</span></span></p>
<ul>
<li><strong class="bold"><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">Use case 1</span></strong><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml">LoginPage</span></strong><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml"> – As a password manager user, I want to log in to the </span><a id="_idIndexMarker267"/><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">password manager app so that I can access my </span><span class="No-Break"><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml">password data</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml">Use case 2</span></strong><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml"> – As a password manager user, I want to have an overview </span><a id="_idIndexMarker268"/><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml">of my database and the app that I </span><span class="No-Break"><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml">am using</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml">Use case 3</span></strong><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml"> – As a password manager user, I want to see a list of groups </span><a id="_idIndexMarker269"/><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml">and entries so that I can explore and examine my </span><span class="No-Break"><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">password data</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml">Use case 4</span></strong><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml"> – As a password manager user, I want to see the </span><a id="_idIndexMarker270"/><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml">details of a password entry after I select it in the list of </span><span class="No-Break"><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml">password entries</span></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">Use case 5</span></strong><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">NewItemPage</span></strong><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml"> – As a password manager user, I want to add a password </span><a id="_idIndexMarker271"/><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">entry or create a new group in </span><span class="No-Break"><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">my database</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml">These five use cases are inherited from the Visual Studio template, and they are sufficient for the user stories of our password manager app for the moment. </span><span class="koboSpan" id="kobo.553.2" xmlns="http://www.w3.org/1999/xhtml">We will improve our app using these user stories in </span><span class="No-Break"><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml">this chapter.</span></span></p>
<p><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml">We have </span><a id="_idIndexMarker272"/><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">explored the model, view, and viewmodel, but the model </span><a id="_idIndexMarker273"/><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml">given here is too simple and is not sufficient for use in a password </span><span class="No-Break"><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml">manager app:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml">
public class Item
{
  public string Id { get; set; }
  public string Name { get; set; }
  public string Description { get; set; }
}</span></pre>
<p><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">The major functionalities of our password manager app are encapsulated in the model layer. </span><span class="koboSpan" id="kobo.560.2" xmlns="http://www.w3.org/1999/xhtml">We will build our model using two .NET packages, </span><strong class="source-inline"><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.564.2" xmlns="http://www.w3.org/1999/xhtml">These two packages include all the password management features </span><span class="No-Break"><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml">we need.</span></span></p>
<h2 id="_idParaDest-92"><a id="_idTextAnchor096"/><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></h2>
<p><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml">The model </span><a id="_idIndexMarker274"/><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml">that we will use is a library from KeePass called </span><strong class="source-inline"><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.570.2" xmlns="http://www.w3.org/1999/xhtml">Both </span><a id="_idIndexMarker275"/><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml">KeePass and </span><strong class="source-inline"><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml"> are built for .NET Framework, so they can only be used on Windows. </span><span class="koboSpan" id="kobo.573.2" xmlns="http://www.w3.org/1999/xhtml">I ported </span><strong class="source-inline"><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml"> and rebuilt it as a .NET Standard 2.0 library packaged as KPCLib. </span><span class="koboSpan" id="kobo.575.2" xmlns="http://www.w3.org/1999/xhtml">KPCLib can be found at NuGet and </span><span class="No-Break"><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml">GitHub here:</span></span></p>
<ul>
<li><span class="No-Break"><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">NuGet: </span></span><a href="https://www.nuget.org/packages/KPCLib/"><span class="No-Break"><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/packages/KPCLib/</span></span></a></li>
<li><span class="No-Break"><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">GitHub: </span></span><a href="https://github.com/passxyz/KPCLib"><span class="No-Break"><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/passxyz/KPCLib</span></span></a></li>
</ul>
<p><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib is used </span><a id="_idIndexMarker276"/><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml">both as a package name and a namespace. </span><span class="koboSpan" id="kobo.582.2" xmlns="http://www.w3.org/1999/xhtml">The package of KPCLib includes </span><a id="_idIndexMarker277"/><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml">two namespaces, </span><strong class="source-inline"><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.587.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml"> namespace </span><a id="_idIndexMarker278"/><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">is the original one from KeePass with the </span><span class="No-Break"><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml">following changes:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml">Updated and built for .NET </span><span class="No-Break"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">Standard 2.0</span></span></li>
<li><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml">Updated </span><strong class="source-inline"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml"> to be classes derived from the </span><strong class="source-inline"><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">abstract class</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml"> namespace, an </span><strong class="source-inline"><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml"> abstract class is defined. </span><span class="koboSpan" id="kobo.605.2" xmlns="http://www.w3.org/1999/xhtml">The reason I created a new class and made it the parent class of </span><strong class="source-inline"><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml"> is due to the navigation design difference between KeePass </span><span class="No-Break"><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml">and PassXYZ.Vault.</span></span></p>
<p><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml">If we look at the UI of KeePass in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml">.5</span></em><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml">, we can see that it is a classic Windows desktop UI. </span><span class="koboSpan" id="kobo.614.2" xmlns="http://www.w3.org/1999/xhtml">The navigation is designed around a tree view like </span><span class="No-Break"><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml">Windows Explorer.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer049">
<span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.5: KeePass UI" src="image/Figure_4.5_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.5: KeePass UI</span></p>
<p><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">Two classes, </span><strong class="source-inline"><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">, behave like directories and files. </span><span class="koboSpan" id="kobo.622.2" xmlns="http://www.w3.org/1999/xhtml">A </span><strong class="source-inline"><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml"> instance </span><a id="_idIndexMarker279"/><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml">is just like a directory, and it includes a list of children – </span><strong class="source-inline"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.629.2" xmlns="http://www.w3.org/1999/xhtml">All </span><strong class="source-inline"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml"> instances display in a tree view on the right-hand panel. </span><span class="koboSpan" id="kobo.631.2" xmlns="http://www.w3.org/1999/xhtml">When a </span><strong class="source-inline"><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml"> instance is selected, the list of </span><strong class="source-inline"><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml"> in this group is shown on the right-hand panel. </span><strong class="source-inline"><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml"> includes the content of a password entry, such as a username and password. </span><span class="koboSpan" id="kobo.637.2" xmlns="http://www.w3.org/1999/xhtml">The content of </span><strong class="source-inline"><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml"> is displayed on the </span><span class="No-Break"><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">bottom panel.</span></span></p>
<p><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault</span></strong><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml"> UI design, we use a .NET MAUI Shell template. </span><span class="koboSpan" id="kobo.643.2" xmlns="http://www.w3.org/1999/xhtml">It is an implementation </span><a id="_idIndexMarker280"/><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">of a stacked Master-Detail pattern. </span><span class="koboSpan" id="kobo.644.2" xmlns="http://www.w3.org/1999/xhtml">In the stacked Master-Detail pattern, a single list is used to display items. </span><span class="koboSpan" id="kobo.644.3" xmlns="http://www.w3.org/1999/xhtml">In this case, the instances of both </span><strong class="source-inline"><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml"> can be displayed in the same list. </span><span class="koboSpan" id="kobo.648.2" xmlns="http://www.w3.org/1999/xhtml">After an item is selected, we will take an action according to the type of </span><span class="No-Break"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">the item.</span></span></p>
<h3><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">Abstraction of PwGroup and PwEntry</span></h3>
<p><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">To work </span><a id="_idIndexMarker281"/><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml">with the PassXYZ.Vault UI design better, we can abstract </span><strong class="source-inline"><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml"> as </span><strong class="source-inline"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml">  abstract </span><a id="_idIndexMarker282"/><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml">class, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">.6</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer050">
<span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.6: Class diagram of Item" src="image/Figure_4.6_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.6: Class diagram of Item</span></p>
<p><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">Referring to </span><a id="_idIndexMarker283"/><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml">this UML class diagram in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">.6</span></em><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml"> and the source </span><a id="_idIndexMarker284"/><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">code of </span><strong class="source-inline"><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml">Item.cs</span></strong><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><em class="italic"><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.4</span></em><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">, we can see the following </span><a id="_idIndexMarker285"/><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml">properties are defined in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml"> abstract class. </span><span class="koboSpan" id="kobo.677.2" xmlns="http://www.w3.org/1999/xhtml">These properties are implemented in </span><a id="_idIndexMarker286"/><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml">both </span><strong class="source-inline"><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml">and </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml"> ① </span><strong class="source-inline"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml"> – the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml"> name</span></span></li>
<li><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml"> ② </span><strong class="source-inline"><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml"> – the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml"> description</span></span></li>
<li><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml"> ③ </span><strong class="source-inline"><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml">Notes</span></strong><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml"> – </span><strong class="source-inline"><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml"> comments defined by </span><span class="No-Break"><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml">the user</span></span></li>
<li><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml"> ④ </span><strong class="source-inline"><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml">IsGroup</span></strong><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml"> –</span><strong class="source-inline"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml"> if the instance is </span><strong class="source-inline"><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><strong class="source-inline"><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml">false</span></strong><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml"> if it </span><span class="No-Break"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">is </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong></span></li>
<li><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml"> ⑤ </span><strong class="source-inline"><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml"> – ID of the instance (a unique value that is like the primary key in </span><span class="No-Break"><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml">a database)</span></span></li>
<li><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml"> ⑥ </span><strong class="source-inline"><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml">ImgSource</span></strong><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml"> – image </span><a id="_idIndexMarker287"/><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">source of the icon (both </span><strong class="source-inline"><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml"> can have </span><a id="_idIndexMarker288"/><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml">an </span><span class="No-Break"><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml">associated icon)</span></span></li>
<li><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml"> ⑦ </span><strong class="source-inline"><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml">LastModificationTime</span></strong><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml"> – the last modification time of </span><span class="No-Break"><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml">the item</span></span></li>
<li><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml"> ⑧ </span><strong class="source-inline"><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml"> implements the </span><strong class="source-inline"><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">INotifyPropertyChanged</span></strong><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml"> interface, and it can work well in the MVVM model for </span><span class="No-Break"><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml">data binding:</span></span></li>
</ul>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.4: Item.cs (https://epa.ms/Item4-4)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml">
using System.Text;
namespace KPCLib
{
  public abstract class Item : INotifyPropertyChanged     ⑧
  {
    public abstract DateTime LastModificationTime {get;
        set;};}                                           ⑦
    public abstract string Name { get; set; }             ①
    public abstract string Description { get;}            ②
    public abstract string Notes { get; set; }            ③
    public abstract bool IsGroup { get; }                 ④
    public abstract string Id { get; }                    ⑤
    virtual public Object ImgSource { get; set; }         ⑥
#region INotifyPropertyChanged ...
</span><span class="koboSpan" id="kobo.735.2" xmlns="http://www.w3.org/1999/xhtml">  }
}</span></pre>
<h2 id="_idParaDest-93"><a id="_idTextAnchor097"/><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></h2>
<p><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">To use KeePassLib in </span><strong class="source-inline"><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault</span></strong><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">, we need to use some .NET MAUI APIs to extend the </span><a id="_idIndexMarker289"/><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml">functionalities required of our app. </span><span class="koboSpan" id="kobo.740.2" xmlns="http://www.w3.org/1999/xhtml">To separate </span><a id="_idIndexMarker290"/><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">the business logic from the UI and extend the functionalities of </span><strong class="source-inline"><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml"> for .NET MAUI, a .NET MAUI class library, </span><strong class="source-inline"><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml">, is created to encapsulate the extended model in a separate library. </span><strong class="source-inline"><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml"> is both a package name and </span><span class="No-Break"><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml">a namespace.</span></span></p>
<p><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml">To add </span><strong class="source-inline"><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml"> to our project, we can add it to a </span><strong class="source-inline"><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.csproj</span></strong><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml"> project file, as </span><span class="No-Break"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">seen here:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;ItemGroup&gt;
    &lt;PackageReference Include="PassXYZLib"
              Version="2.0.2" /&gt;
  &lt;/ItemGroup&gt;</span></pre>
<p><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">We can also add a PassXYZLib package from the command line here. </span><span class="koboSpan" id="kobo.756.2" xmlns="http://www.w3.org/1999/xhtml">From the command line, go to the project folder and execute this command to add </span><span class="No-Break"><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">the package:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml">
dotnet add package PassXYZLib</span></pre>
<h2 id="_idParaDest-94"><a id="_idTextAnchor098"/><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">Updating the model</span></h2>
<p><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml">After we </span><a id="_idIndexMarker291"/><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">add a PassXYZLib package to the project, we can access the </span><strong class="source-inline"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">KeePassLib</span></strong><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml"> namespaces. </span><span class="koboSpan" id="kobo.767.2" xmlns="http://www.w3.org/1999/xhtml">To replace the current model, we need to remove the </span><strong class="source-inline"><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml">Models/Item.cs</span></strong><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml"> file from </span><span class="No-Break"><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">the project.</span></span></p>
<p><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">After that, we need to replace the </span><strong class="source-inline"><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.Models</span></strong><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml"> namespace </span><span class="No-Break"><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml">with </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer051">
<span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.7: Updating the model from PassXYZ.Vault.Models to KPCLib (https://bit.ly/3uXVl7H)" src="image/Figure_4.07_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.7: Updating the model from PassXYZ.Vault.Models to KPCLib (</span><a href="https://bit.ly/3uXVl7H"><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml">https://bit.ly/3uXVl7H</span></a><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">)</span></p>
<p><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><a id="_idIndexMarker292"/><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml">commit history, </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml">.7</span></em><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml">, we can see that there are four view models, and three views are changed. </span><span class="koboSpan" id="kobo.785.2" xmlns="http://www.w3.org/1999/xhtml">All changes are namespace changes so we don’t need to explain more </span><span class="No-Break"><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml">about them.</span></span></p>
<h2 id="_idParaDest-95"><a id="_idTextAnchor099"/><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml">Updating the service</span></h2>
<p><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">The major </span><a id="_idIndexMarker293"/><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">changes can be found in </span><strong class="source-inline"><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml">MockDataStore.cs</span></strong><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.791.2" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml">MockDataStore</span></strong><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml"> class, we changed the namespace and the mock </span><span class="No-Break"><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml">data initialization.</span></span></p>
<p><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml">To decouple the model from the rest of the system, we use an </span><strong class="source-inline"><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml">IDataStore</span></strong><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml"> interface to encapsulate the actual implementation. </span><span class="koboSpan" id="kobo.797.2" xmlns="http://www.w3.org/1999/xhtml">At this stage, we use mock data to implement the service for testing, so the </span><strong class="source-inline"><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">MockDataStore</span></strong><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml"> class is used. </span><span class="koboSpan" id="kobo.799.2" xmlns="http://www.w3.org/1999/xhtml">We will replace it with the actual implementation in </span><a href="B16588_06.xhtml#_idTextAnchor128"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 6</span></em></span></a><em class="italic"><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml">, Introducing Dependency Injection and Platform-Specific Services,</span></em><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml"> using </span><span class="No-Break"><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml">dependency injection.</span></span></p>
<p class="callout-heading"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">Dependency inversion and dependency injection</span></p>
<p class="callout"><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml">We will </span><a id="_idIndexMarker294"/><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">learn about the </span><strong class="bold"><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml">Dependency Inversion Principle (DIP)</span></strong><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">, which is one of the SOLID design principles, in </span><a href="B16588_06.xhtml#_idTextAnchor128"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 6</span></em></span></a><em class="italic"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">,</span></em> <em class="italic"><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml">Introducing Dependency Injection and Platform-Specific Services</span></em><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.812.2" xmlns="http://www.w3.org/1999/xhtml">We will learn how to use dependency injection to manage the mapping of </span><strong class="source-inline"><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml">IdataStore</span></strong><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml"> interface to the </span><span class="No-Break"><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml">actual implementation.</span></span></p>
<p><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">In the original code, we created new instances of </span><strong class="source-inline"><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.Models.Item</span></strong><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml"> to initialize </span><a id="_idIndexMarker295"/><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">mock data. </span><span class="koboSpan" id="kobo.819.2" xmlns="http://www.w3.org/1999/xhtml">After we replace the model, we cannot create </span><strong class="source-inline"><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib.Item</span></strong><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml"> directly, since it is an abstract class. </span><span class="koboSpan" id="kobo.821.2" xmlns="http://www.w3.org/1999/xhtml">Instead, we can create new instances of </span><strong class="source-inline"><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml">PxEntry</span></strong><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml"> using JSON data and assign </span><strong class="source-inline"><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml">PxEntry</span></strong><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml"> instances to the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml"> list:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">
    Static string[] jsonData =…;
    readonly List&lt;Item&gt; items;
    public MockDataStore() {
        items = new List&lt;Item&gt;() {
            new PxEntry(jsonData[0]),
            new PxEntry(jsonData[1]),
            new PxEntry(jsonData[2]),
            new PxEntry(jsonData[3]),
            new PxEntry(jsonData[4])
        };
    }</span></pre>
<p><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml">To create the instances of an abstract class, the factory pattern can be used. </span><span class="koboSpan" id="kobo.829.2" xmlns="http://www.w3.org/1999/xhtml">To make the testing code simple, we did not use it here. </span><span class="koboSpan" id="kobo.829.3" xmlns="http://www.w3.org/1999/xhtml">The factory pattern is used in the actual implementation later in </span><span class="No-Break"><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml">this book.</span></span></p>
<p><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml">We have replaced the model in the sample code with our own model now. </span><span class="koboSpan" id="kobo.831.2" xmlns="http://www.w3.org/1999/xhtml">With this change, we can improve </span><strong class="source-inline"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml"> to reflect the </span><span class="No-Break"><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml">updated model.</span></span></p>
<p><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">We will update the view and viewmodel using data binding to collections in the </span><span class="No-Break"><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml">next section.</span></span></p>
<h1 id="_idParaDest-96"><a id="_idTextAnchor100"/><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml">Binding to collections</span></h1>
<p><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml">In the previous section, we introduced some basic knowledge of data binding, and we also replaced </span><a id="_idIndexMarker296"/><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">the model using PassXYZLib. </span><span class="koboSpan" id="kobo.841.2" xmlns="http://www.w3.org/1999/xhtml">When we introduced data binding, we used </span><strong class="source-inline"><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml"> to explain how to bind the source property to the target property. </span><span class="koboSpan" id="kobo.845.2" xmlns="http://www.w3.org/1999/xhtml">For the item detail page, we created data binding from one source to one target. </span><span class="koboSpan" id="kobo.845.3" xmlns="http://www.w3.org/1999/xhtml">However, there are many cases in which we need to bind a data collection to the UI, such as </span><strong class="source-inline"><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><strong class="source-inline"><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml">CollectionView</span></strong><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml">, to display a group </span><span class="No-Break"><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">of data.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer052">
<span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.8: Binding to collections" src="image/Figure_4.08_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.8: Binding to collections</span></p>
<p><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">As we can see in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><em class="italic"><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">.8</span></em><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml">, when we create a data binding from a collection object to a collection view, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml">ItemsSource</span></strong><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml"> property is the one to use. </span><span class="koboSpan" id="kobo.858.2" xmlns="http://www.w3.org/1999/xhtml">In .NET MAUI, collection views such as </span><strong class="source-inline"><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">CollectionView</span></strong><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml"> can be used and both have an </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">ItemsSource</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml"> property.</span></span></p>
<p><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml">For the collection object, we can use any collection that implements the </span><strong class="source-inline"><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml">IEnumerable</span></strong><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml"> interface. </span><span class="koboSpan" id="kobo.867.2" xmlns="http://www.w3.org/1999/xhtml">However, the changes to the collection object may not be able to update the UI automatically. </span><span class="koboSpan" id="kobo.867.3" xmlns="http://www.w3.org/1999/xhtml">In order to update UI automatically, the source object needs to implement the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">INotifyCollectionChanged</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml"> interface.</span></span></p>
<p><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">We can implement our collection object with the </span><strong class="source-inline"><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml">INotifyCollectionChanged</span></strong><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml"> interface, but the simplest approach is to use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">ObservableCollection&lt;T&gt;</span></strong><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.874.2" xmlns="http://www.w3.org/1999/xhtml">If any item in the observable collection is changed, the bound UI view is </span><span class="No-Break"><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml">notified automatically.</span></span></p>
<p><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml">With this in mind, let’s review the class diagram of our models, viewmodels, and views as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">.9</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<ul>
<li><strong class="bold"><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml">Model</span></strong><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="source-inline"><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml">, </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml">View Model</span></strong><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml">: </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">ItemsViewModel</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml">, </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong></span></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml">: </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml">, </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong></span></li>
</ul>
<p><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml">When we display a list of items to the user, the user may take action on the selected item. </span><span class="koboSpan" id="kobo.899.2" xmlns="http://www.w3.org/1999/xhtml">If the item is a group, we will show the groups and entries in an instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.901.2" xmlns="http://www.w3.org/1999/xhtml">If the item is an entry, we will show the content of the entry on a content page, which is </span><a id="_idIndexMarker297"/><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml">an instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.904.2" xmlns="http://www.w3.org/1999/xhtml">On </span><strong class="source-inline"><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml">, we display a list of fields to the user. </span><span class="koboSpan" id="kobo.906.2" xmlns="http://www.w3.org/1999/xhtml">Each field is a key value pair and is implemented as an instance of </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml"> class.</span></span></p>
<p><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">In summary, we display two kinds of lists to the user – a list of items or a list of fields. </span><span class="koboSpan" id="kobo.909.2" xmlns="http://www.w3.org/1999/xhtml">The list of items is shown in </span><strong class="source-inline"><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml"> and the list of fields is shown </span><span class="No-Break"><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml">in </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer053">
<span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.9: Class diagram of the model, view, and viewmodel" src="image/Figure_4.9_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.9: Class diagram of the model, view, and viewmodel</span></p>
<p><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">In this class diagram, we can see both </span><strong class="source-inline"><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">PwGroup</span></strong><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml"> are derived from </span><strong class="source-inline"><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.923.2" xmlns="http://www.w3.org/1999/xhtml">There is a list of items in </span><strong class="source-inline"><span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml">ItemsViewModel</span></strong><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml"> and there is a list of fields in </span><strong class="source-inline"><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.927.2" xmlns="http://www.w3.org/1999/xhtml">In the views, </span><strong class="source-inline"><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml"> contains a reference to </span><strong class="source-inline"><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml">ItemsViewModel</span></strong><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml"> contains a reference </span><span class="No-Break"><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">to </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml">After we refine </span><a id="_idIndexMarker298"/><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml">our design, we can look at the implementation. </span><span class="koboSpan" id="kobo.938.2" xmlns="http://www.w3.org/1999/xhtml">We will review the implementation of </span><strong class="source-inline"><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml"> to verify the </span><span class="No-Break"><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml">design change:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">
[QueryProperty(nameof(ItemId), nameof(ItemId))]
public class ItemDetailViewModel : BaseViewModel {
  private string itemId;
  private string description;
  public string Id { get; set; }
  public ObservableCollection&lt;Field&gt; Fields { get; set; } ❶
  public string Description ...
</span><span class="koboSpan" id="kobo.944.2" xmlns="http://www.w3.org/1999/xhtml">  public string ItemId ...
</span><span class="koboSpan" id="kobo.944.3" xmlns="http://www.w3.org/1999/xhtml">  public ItemDetailViewModel() {
    Fields = new ObservableCollection&lt;Field&gt;();           ❷
  }
  public async void LoadItemId(string itemId) {
    try {
      var item = await DataStore.GetItemAsync(itemId);
      Id = item.Id;
      Title = item.Name;
      Description = item.Description;
      if (!item.IsGroup) {
        PwEntry dataEntry = (PwEntry)item;                ❸
        Fields.Clear();
        List&lt;Field&gt; fields = dataEntry.GetFields(GetImage:
          FieldIcons.GetImage);                           ❹
        foreach (Field field in fields) {
          Fields.Add(field);
        }
      }
    }
    catch (Exception) {
        Debug.WriteLi"e("Failed to Load I"em");
    }
  }
}</span></pre>
<p><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml">As shown </span><a id="_idIndexMarker299"/><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">in the code here, we can see the difference in </span><strong class="source-inline"><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml"> compared to </span><em class="italic"><span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.1</span></em><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml"> at the beginning of </span><span class="No-Break"><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml">this chapter:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml"> ❶ A </span><strong class="source-inline"><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml">Fields</span></strong><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml"> property is defined as the </span><strong class="source-inline"><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml">ObservableCollection&lt;Field&gt;</span></strong><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml"> type to hold the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml"> list</span></span></li>
<li><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml"> ❷ The </span><strong class="source-inline"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">Fields</span></strong><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml"> variable is initialized in the constructor </span><span class="No-Break"><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong></span></li>
<li><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml"> ❸ The </span><strong class="source-inline"><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">item</span></strong><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml"> type of variable is </span><strong class="source-inline"><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml"> here and we can cast it to a </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml">PwEntry</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml"> instance</span></span></li>
<li><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml"> ❹ We can get the list of fields by calling an extension method, </span><strong class="source-inline"><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">GetFields()</span></strong><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml">, which is defined in the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZLib</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml"> library</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml">Having reviewed </span><a id="_idIndexMarker300"/><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">the changes in </span><strong class="source-inline"><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml">, let’s review the changes in </span><strong class="source-inline"><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.5</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.5: ItemDetailPage.xaml (https://epa.ms/ItemDetailPage4-5)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;?xml versi"n="".0" encodi"g="ut"-8" ?&gt;
&lt;ContentPage xml"s="http://schemas.microsoft.com
    /dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/
                 winfx/2009/xaml"
             x:Class="PassXYZ.Vault.Views.ItemDetailPage"
             xmlns:local="clr-namespace:PassXYZ.
</span><span class="koboSpan" id="kobo.985.2" xmlns="http://www.w3.org/1999/xhtml">                 Vault.ViewModels"
             xmlns:model="clr-namespace:KPCLib;
                 assembly=KPCLib"                         ①
             x:DataType="local:ItemDetailViewModel"
             Title="{Binding Title}"&gt;
    &lt;StackLayout&gt;
        &lt;ListView x:Name="FieldsListView"
                  ItemsSource="{Binding Fields}"          ②
                  VerticalOptions="FillAndExpand"
                  HasUnevenRows="False"
                  RowHeight="84"
                  IsPullToRefreshEnabled="true"
                  IsRefreshing="{Binding IsBusy, Mode=
                      OneWay}"
                  CachingStrategy="RetainElement"
                  ItemSelected="OnFieldSelected"&gt;
            &lt;ListView.ItemTemplate...&gt;                    ③
            &lt;ListView.Footer&gt;
                &lt;StackLayout Padding="5" Orientation=
                    "Horizontal"&gt;
                    &lt;Label Text="{Binding Description}
                         ".../&gt;
                &lt;/StackLayout&gt;
            &lt;/ListView.Footer&gt;
        &lt;/ListView&gt;
    &lt;/StackLayout&gt;
&lt;/ContentPage&gt;</span></pre>
<p><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml">, we can see </span><a id="_idIndexMarker301"/><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">there are many changes compared to </span><em class="italic"><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.4</span></em><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><a href="B16588_03.xhtml#_idTextAnchor063"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 3</span></em></span></a><em class="italic"><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">,</span></em> <em class="italic"><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml">User Interface Design with XAML</span></em><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml">. </span><strong class="source-inline"><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml"> is used to display the fields in </span><span class="No-Break"><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml">an entry:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml"> ① To use </span><strong class="source-inline"><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml">, a </span><strong class="source-inline"><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml">xmlns:model</span></strong><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml"> namespace is added. </span><span class="koboSpan" id="kobo.1005.2" xmlns="http://www.w3.org/1999/xhtml">Since the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml"> class is in a different assembly, we need to specify the assembly’s name </span><span class="No-Break"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">as follows:</span></span><pre class="source-code"><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml">
         xmlns:model="clr-namespace:KPCLib;assembly=KPCLib"</span></pre></li>
<li><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml"> ② We bind the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">Fields</span></strong><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml"> property to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml">ItemsSource</span></strong><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml"> property</span><a id="_idTextAnchor101"/> <span class="No-Break"><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml"> ③ </span><strong class="source-inline"><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml"> is used to define the appearance of each item in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1022.2" xmlns="http://www.w3.org/1999/xhtml">It is collapsed in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml">Listing 4.5</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml">Let’s expand </span><a id="_idIndexMarker302"/><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">it and review the implementation of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml"> in this </span><span class="No-Break"><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml">code block:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;DataTemplate&gt;
  &lt;ViewCell&gt;
    &lt;Grid Padding="10" x:DataType="model:Field" &gt;         ➊
      &lt;Grid.RowDefinitions...&gt;
      &lt;Grid.ColumnDefinitions...&gt;
      &lt;Grid Grid.RowSpan="2" Padding="10"&gt;
        &lt;Grid.ColumnDefinitions...&gt;
        &lt;Image Grid.Column="0" Source="{Binding ImgSource}"
          HorizontalOption</span><a id="_idTextAnchor102"/><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">s="Fill"
        VerticalOptions="Fill" /&gt;                         ➋
      &lt;/Grid&gt;
      &lt;Label Text="{Binding Key}"  Grid.Column="1".../&gt;   ➌
      &lt;Label Text="{Binding Value}" Grid.Row="1"
        Grid.Column="1".../&gt;                              ➍
    &lt;/Grid&gt;
  &lt;/ViewCell&gt;
&lt;/DataTemplate&gt;</span></pre>
<p><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml">, the layout of each field is defined in a </span><strong class="source-inline"><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml"> element. </span><span class="koboSpan" id="kobo.1036.2" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml"> element, we defined a 2x2 </span><strong class="source-inline"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml"> layout. </span><span class="koboSpan" id="kobo.1040.2" xmlns="http://www.w3.org/1999/xhtml">The first column is used to display the field icon. </span><span class="koboSpan" id="kobo.1040.3" xmlns="http://www.w3.org/1999/xhtml">The key and value in the field are displayed in the second column with </span><span class="No-Break"><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">two rows:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml"> ➊ The </span><strong class="source-inline"><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">x:DataType</span></strong><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml"> attribute in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml"> layout is set to </span><strong class="source-inline"><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml"> and the following data binding in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml"> will refer to the property of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1052.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml"> class is defined in our model, which is in the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml">KPCLib</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml"> package.</span></span></li>
<li><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml"> ➋ To display the field icon, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml">Source</span></strong><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml"> property of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></strong><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml"> con</span><a id="_idTextAnchor103"/><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml">t</span><a id="_idTextAnchor104"/><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml">rol is set to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml">ImgSource</span></strong><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml"> property </span><span class="No-Break"><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml"> ➌,➍ Both the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml">Key</span></strong><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml"> property and the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">Value</span></strong><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml"> property of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml"> are assigned to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml"> property of the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml"> control.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">With this </span><a id="_idIndexMarker303"/><span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml">analysis, we learned how to create data binding for a collection. </span><span class="koboSpan" id="kobo.1081.2" xmlns="http://www.w3.org/1999/xhtml">The data binding used in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml">ItemsViewModel</span></strong><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml"> is similar to this implementation. </span><span class="koboSpan" id="kobo.1085.2" xmlns="http://www.w3.org/1999/xhtml">The difference is we use a collection of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">Field</span></strong><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml"> here and a collection of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml">  classes is used in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1091.2" xmlns="http://www.w3.org/1999/xhtml">Having completed the changes, we can see the improvement of the UI in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml">.10</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer054">
<span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 4.10: Improved ItemsPage and ItemDetailPage" src="image/Figure_4.10_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.10: Improved ItemsPage and ItemDetailPage</span></p>
<p><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml">In the improved UI, we display a list of items on </span><strong class="source-inline"><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml"> (on the left). </span><span class="koboSpan" id="kobo.1099.2" xmlns="http://www.w3.org/1999/xhtml">The items in the list </span><a id="_idIndexMarker304"/><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">can be entries (such as on Facebook, Twitter, or Amazon), or groups, which we will see in the </span><span class="No-Break"><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml">next chapter.</span></span></p>
<p><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml">When the user clicks on an item, such as </span><strong class="bold"><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml">GitHub</span></strong><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml">, we will display it on </span><strong class="source-inline"><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml"> (on the right). </span><span class="koboSpan" id="kobo.1106.2" xmlns="http://www.w3.org/1999/xhtml">On the item detail page, the information about this account (</span><strong class="bold"><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">GitHub</span></strong><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">) </span><span class="No-Break"><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml">is shown.</span></span></p>
<p><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml">Having introduced the new data model, the design hasn’t changed much. </span><span class="koboSpan" id="kobo.1110.2" xmlns="http://www.w3.org/1999/xhtml">We improved the UI to make it more meaningful, but most of the complexity is hidden in our model libraries – KPCLib and PassXYZLib. </span><span class="koboSpan" id="kobo.1110.3" xmlns="http://www.w3.org/1999/xhtml">This is the benefit that we can see by using the MVVM pattern to separate the model (business logic) from the </span><span class="No-Break"><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml">UI design.</span></span></p>
<h1 id="_idParaDest-97"><a id="_idTextAnchor105"/><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, we learned about the MVVM pattern and applied it to our app development. </span><span class="koboSpan" id="kobo.1113.2" xmlns="http://www.w3.org/1999/xhtml">One key feature of the MVVM pattern is data binding between the view and viewmodel. </span><span class="koboSpan" id="kobo.1113.3" xmlns="http://www.w3.org/1999/xhtml">We learned about data binding and used it in the implementation of </span><span class="No-Break"><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">our app.</span></span></p>
<p><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">We also improved the model in this chapter. </span><span class="koboSpan" id="kobo.1115.2" xmlns="http://www.w3.org/1999/xhtml">We improved it by introducing two packages – KPCLib and PassXYZLib. </span><span class="koboSpan" id="kobo.1115.3" xmlns="http://www.w3.org/1999/xhtml">We replaced the model in the sample code with the model in these two packages. </span><span class="koboSpan" id="kobo.1115.4" xmlns="http://www.w3.org/1999/xhtml">We updated the UIs of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml"> to reflect the changes to </span><span class="No-Break"><span class="koboSpan" id="kobo.1120.1" xmlns="http://www.w3.org/1999/xhtml">the model.</span></span></p>
<p><span class="koboSpan" id="kobo.1121.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, we will refine our user stories and continue improving the UI using our knowledge of Shell </span><span class="No-Break"><span class="koboSpan" id="kobo.1122.1" xmlns="http://www.w3.org/1999/xhtml">and navigation.</span></span></p>
<h1 id="_idParaDest-98"><a id="_idTextAnchor106"/><span class="koboSpan" id="kobo.1123.1" xmlns="http://www.w3.org/1999/xhtml">Further reading</span></h1>
<ul>
<li><em class="italic"><span class="koboSpan" id="kobo.1124.1" xmlns="http://www.w3.org/1999/xhtml">Introduction to the MVVM </span></em><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1125.1" xmlns="http://www.w3.org/1999/xhtml">Toolkit</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1126.1" xmlns="http://www.w3.org/1999/xhtml">: </span></span><a href="https://learn.microsoft.com/en-us/dotnet/communitytoolkit/mvvm/"><span class="No-Break"><span class="koboSpan" id="kobo.1127.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/communitytoolkit/mvvm/</span></span></a></li>
<li><span class="koboSpan" id="kobo.1128.1" xmlns="http://www.w3.org/1999/xhtml">KeePass is a free open source password </span><span class="No-Break"><span class="koboSpan" id="kobo.1129.1" xmlns="http://www.w3.org/1999/xhtml">manager: </span></span><a href="https://keepass.info/"><span class="No-Break"><span class="koboSpan" id="kobo.1130.1" xmlns="http://www.w3.org/1999/xhtml">https://keepass.info/</span></span></a></li>
</ul>
</div>
<div>
<div class="IMG---Figure" id="_idContainer056">
</div>
</div>
</body>
</html>
