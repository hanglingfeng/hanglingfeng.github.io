<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>B16588_03</title>
<link href="css/style-JRserifv6.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="B16588_03" xml:lang="en-GB">
<div id="_idContainer043">
<h1 class="chapter-number" id="_idParaDest-63"><a id="_idTextAnchor063"/><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">3</span></h1>
<h1 id="_idParaDest-64"><a id="_idTextAnchor064"/><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">User Interface Design with XAML</span></h1>
<p><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">We created a new .NET MAUI project called PassXYZ.Vault in the previous chapter. </span><span class="koboSpan" id="kobo.3.2" xmlns="http://www.w3.org/1999/xhtml">We will start to improve it with the capabilities that we will master throughout this book. </span><span class="koboSpan" id="kobo.3.3" xmlns="http://www.w3.org/1999/xhtml">In this chapter, we will use the master-detail pattern and XAML to design and build our app </span><span class="No-Break"><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml">user interface.</span></span></p>
<p><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">The following topics will be covered in this chapter related to user interface design </span><span class="No-Break"><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml">with XAML:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">How to create a </span><span class="No-Break"><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">XAML page</span></span></li>
<li><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">Basic </span><span class="No-Break"><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml">XAML syntax</span></span></li>
<li><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">XAML </span><span class="No-Break"><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">markup extension</span></span></li>
<li><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">How to design the user interface with the </span><span class="No-Break"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">master-detail pattern</span></span></li>
<li><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml">Localization of the .NET </span><span class="No-Break"><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">MAUI app</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="bold"><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">eXtensible Application Markup Language</span></strong><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml">XAML</span></strong><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml">) is an XML-based language that is used to define user interfaces for </span><strong class="bold"><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">Windows Presentation Foundation</span></strong><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml">WPF</span></strong><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml">), </span><strong class="bold"><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml">Universal Windows Platform</span></strong><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">UWP</span></strong><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">), Xamarin.Forms, and .NET MAUI. </span><span class="koboSpan" id="kobo.29.2" xmlns="http://www.w3.org/1999/xhtml">The XAML dialects in these platforms share the same syntax but differ in </span><span class="No-Break"><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml">their vocabularies.</span></span></p>
<p><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml">XAML allows developers to define user interfaces in XML-based markup language rather than code. </span><span class="koboSpan" id="kobo.31.2" xmlns="http://www.w3.org/1999/xhtml">It is possible to write all our user interfaces in code, but the user interface design with XAML will be more succinct and more visually coherent. </span><span class="koboSpan" id="kobo.31.3" xmlns="http://www.w3.org/1999/xhtml">XAML cannot contain code. </span><span class="koboSpan" id="kobo.31.4" xmlns="http://www.w3.org/1999/xhtml">This is a disadvantage, but it is also an advantage as it forces the developer to separate the code logic from the user interface design. </span><span class="koboSpan" id="kobo.31.5" xmlns="http://www.w3.org/1999/xhtml">XAML is well suited for the </span><strong class="bold"><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">Model-View-ViewModel</span></strong><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml">MVVM</span></strong><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml">) pattern, which we will learn about later in </span><span class="No-Break"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">this book.</span></span></p>
<h1 id="_idParaDest-65"><a id="_idTextAnchor065"/><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml">Technical requirements</span></h1>
<p><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml">To test and debug the source code in this chapter, you need to have Visual Studio 2022 installed on your PC or Mac. </span><span class="koboSpan" id="kobo.38.2" xmlns="http://www.w3.org/1999/xhtml">Please refer to the </span><em class="italic"><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml">Development environment setup</span></em><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml"> section in </span><a href="B16588_01.xhtml#_idTextAnchor015"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 1</span></em></span></a><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">Getting Started with .NET MAUI</span></em><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml">, for </span><span class="No-Break"><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml">the details.</span></span></p>
<p><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">The source code for this chapter is available in the following </span><span class="No-Break"><span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml">GitHub repository:</span></span></p>
<p><a href="https://github.com/PacktPublishing/.NET-MAUI-Cross-Platform-Application-Development/tree/main/Chapter03"><span class="No-Break"><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/PacktPublishing/.NET-MAUI-Cross-Platform-Application-Development/tree/main/Chapter03</span></span></a></p>
<h1 id="_idParaDest-66"><a id="_idTextAnchor066"/><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml">Creating a XAML page</span></h1>
<p><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">Before we learn XAML syntax, let’s learn how to</span><a id="_idIndexMarker162"/><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml"> create a XAML page in Visual Studio and via the </span><strong class="source-inline"><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">command line.</span></span></p>
<p><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml">To create a XAML page using Visual Studio, we can right-click on the project node. </span><span class="koboSpan" id="kobo.54.2" xmlns="http://www.w3.org/1999/xhtml">After, select </span><strong class="bold"><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml">Add</span></strong><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml"> &gt; </span><strong class="bold"><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml">New Item…</span></strong><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml">; we will see what’s shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml">.1</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer034">
<span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.1: Adding a XAML page" src="image/Figure_3.1_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.1: Adding a XAML page</span></p>
<p><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml">On this screen, select </span><strong class="bold"><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">Content Page</span></strong><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml"> from the templates and click </span><strong class="bold"><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">Add</span></strong><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.68.2" xmlns="http://www.w3.org/1999/xhtml">This will create a pair of files – a XAML file and a C# </span><span class="No-Break"><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml">code-behind file.</span></span></p>
<p><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">We can do the same </span><a id="_idIndexMarker163"/><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml">using the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml"> command.</span></span></p>
<p><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">To find all .NET MAUI templates, we can use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></strong><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml"> command like so in a </span><span class="No-Break"><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml">PowerShell console:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">
dotnet new --list | findstr -i maui
.NET MAUI App                       maui              [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.2" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI Blazor App                maui-blazor       [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.3" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI Class Library             mauilib           [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.4" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI ContentPage (C#)          maui-page-csharp  [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.5" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI ContentPage (XAML)        maui-page-xaml    [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.6" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI ContentView (C#)          maui-view-csharp  [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.7" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI ContentView (XAML)        maui-view-xaml    [C#]  MAUI/...
</span><span class="koboSpan" id="kobo.78.8" xmlns="http://www.w3.org/1999/xhtml">.NET MAUI ResourceDictionary (XAML) maui-dict-xaml    [C#]  MAUI/...</span></pre>
<p><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml">From the preceding output, we </span><a id="_idIndexMarker164"/><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">can see that the short name of the XAML content page is </span><strong class="source-inline"><span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml">maui-page-xaml</span></strong><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.82.2" xmlns="http://www.w3.org/1999/xhtml">We can create a XAML page using the </span><span class="No-Break"><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">following command:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">
dotnet new maui-page-xaml -n ItemsPage
The template ".NET MAUI ContentPage (XAML)" was created successfully.
</span><span class="koboSpan" id="kobo.84.2" xmlns="http://www.w3.org/1999/xhtml">Processing post-creation actions…
The post action 84c0da21-51c8-4541-9940-6ca19af04ee6 is not supported.
</span><span class="koboSpan" id="kobo.84.3" xmlns="http://www.w3.org/1999/xhtml">Description: Opens NewPage1.xaml in the editor.</span></pre>
<p><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml">Two files called </span><strong class="source-inline"><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage.xaml</span></strong><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage.xaml.cs</span></strong><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml"> will be created by the </span><span class="No-Break"><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">preceding command.</span></span></p>
<h1 id="_idParaDest-67"><a id="_idTextAnchor067"/><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">XAML syntax</span></h1>
<p><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">Since XAML is an XML-based language, we </span><a id="_idIndexMarker165"/><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">need to understand basic XML syntax. </span><span class="koboSpan" id="kobo.93.2" xmlns="http://www.w3.org/1999/xhtml">An XML or XAML file includes a hierarchy of elements. </span><span class="koboSpan" id="kobo.93.3" xmlns="http://www.w3.org/1999/xhtml">Each element may have attributes associated with it. </span><span class="koboSpan" id="kobo.93.4" xmlns="http://www.w3.org/1999/xhtml">Let’s review </span><strong class="source-inline"><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml">App.xaml</span></strong><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml"> in the project that we created in </span><a href="B16588_02.xhtml#_idTextAnchor041"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 2</span></em></span></a><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">Building Our First .NET MAUI App</span></em><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml">, as </span><span class="No-Break"><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml">an example:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.1: App.xaml (https://epa.ms/App3-1)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;?xml version = "1.0" encoding = "UTF-8" ?&gt;
&lt;Application xmlns="http://schemas.microsoft.com
    /dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/
                 winfx/2009/xaml"
             xmlns:local="clr-namespace:PassXYZ.Vault"
             x:Class="PassXYZ.Vault.App"&gt;
    &lt;Application.Resources&gt;
        &lt;ResourceDictionary...&gt;
    &lt;/Application.Resources&gt;
&lt;/Application&gt;</span></pre>
<p><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml">As shown in </span><em class="italic"><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.1</span></em><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml">, we have an element called </span><strong class="source-inline"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">Application</span></strong><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml"> and its associated attributes, </span><strong class="source-inline"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">x:Class</span></strong><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">xmlns:{prefix}</span></strong><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.111.2" xmlns="http://www.w3.org/1999/xhtml">Let’s analyze this example to understand XML elements </span><a id="_idIndexMarker166"/><span class="No-Break"><span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml">and attributes.</span></span></p>
<h2 id="_idParaDest-68"><a id="_idTextAnchor068"/><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml">Element</span></h2>
<p><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">The element syntax includes a </span><a id="_idIndexMarker167"/><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml">start and end tag, such as the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml">Application</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml"> tag:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Application&gt;&lt;/Application&gt;</span></pre>
<p><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml">For an empty element, the end tag can be omitted by adding a forward slash at the end of the start tag, </span><span class="No-Break"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Application /&gt;</span></pre>
<p><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">When we mention an XML element, we may use </span><strong class="source-inline"><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml">element</span></strong><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml">node</span></strong><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml">tag</span></strong><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml"> as terms. </span><span class="koboSpan" id="kobo.128.2" xmlns="http://www.w3.org/1999/xhtml">When we say element, we are referring to the start tag and the end tag of that element together. </span><span class="koboSpan" id="kobo.128.3" xmlns="http://www.w3.org/1999/xhtml">When we say tag, we are referring to either the start or end tag of the element. </span><span class="koboSpan" id="kobo.128.4" xmlns="http://www.w3.org/1999/xhtml">When we say node, we are referring to an element and all its inner content, including all </span><span class="No-Break"><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml">child elements.</span></span></p>
<p><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml">A XAML document is comprised of many nested elements. </span><span class="koboSpan" id="kobo.130.2" xmlns="http://www.w3.org/1999/xhtml">There is only one top element, which is called the root element. </span><span class="koboSpan" id="kobo.130.3" xmlns="http://www.w3.org/1999/xhtml">In .NET MAUI or Xamarin.Forms, the root element is usually </span><strong class="source-inline"><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">Application</span></strong><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml">ContentPage</span></strong><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">Shell</span></strong><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="No-Break"><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml">or </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">ResourceDictionary</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">For each XAML file, we usually </span><a id="_idIndexMarker168"/><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml">have a corresponding C# code-behind file. </span><span class="koboSpan" id="kobo.141.2" xmlns="http://www.w3.org/1999/xhtml">Let’s review the code-behind file in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.2</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.2: App.xaml.cs (https://epa.ms/App3-2)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml">
using PassXYZ.Vault.Services;
using PassXYZ.Vault.Views;
namespace PassXYZ.Vault;
public partial class App : Applicati</span><a id="_idTextAnchor069"/><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">on   {  ➊
  public App() {
    InitializeCompon</span><a id="_idTextAnchor070"/><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml">ent();                  ➋
    Routing.RegisterRoute(nameof(ItemDetailPage),
               typeof(ItemDetailPage));
    Routing.RegisterRoute(nameof(NewItemPage),
               typeof(NewItemPage));
    DependencyService.Register&lt;MockDataStore&gt;();
    MainPage = new AppShell();
  }
  private async void OnMenuItemClicked(System.Object
            sender, System.EventArgs e) {
    await Shell.Current.GoToAsync("//LoginPage");
  }
}</span></pre>
<p><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml">In XAML, elements usually represent actual C# classes that are instantiated to objects at runtime. </span><span class="koboSpan" id="kobo.148.2" xmlns="http://www.w3.org/1999/xhtml">Together, the XAML and code-behind files define a complete class. </span><span class="koboSpan" id="kobo.148.3" xmlns="http://www.w3.org/1999/xhtml">For example, </span><strong class="source-inline"><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">App.xaml</span></strong><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><em class="italic"><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.1</span></em><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml">) and </span><strong class="source-inline"><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml">App.xaml.cs</span></strong><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><em class="italic"><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.2</span></em><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml">) define the </span><strong class="source-inline"><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml">App</span></strong><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml"> class, which is a sub-class </span><span class="No-Break"><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml">Application</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml">➊ The </span><strong class="source-inline"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">App</span></strong><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml"> class, whose full </span><a id="_idIndexMarker169"/><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml">name is </span><strong class="source-inline"><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.App</span></strong><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml">, is the same as the one defined in the XAML file using the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml">x:Class</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml"> attribute:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">
x:Class="PassXYZ.Vault.App"</span></pre>
<p><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml">➋ In the constructor of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml">App</span></strong><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml"> class, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml">InitializeComponent()</span></strong><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml"> method is called to load the XAML and parse it. </span><span class="koboSpan" id="kobo.175.2" xmlns="http://www.w3.org/1999/xhtml">UI elements defined in the XAML file are created at this point. </span><span class="koboSpan" id="kobo.175.3" xmlns="http://www.w3.org/1999/xhtml">We can access these UI elements by the name defined with the </span><strong class="source-inline"><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml"> attribute, as we’ll </span><span class="No-Break"><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">see shortly.</span></span></p>
<h2 id="_idParaDest-69"><a id="_idTextAnchor071"/><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml">Attribute</span></h2>
<p><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml">An element can have multiple </span><a id="_idIndexMarker170"/><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml">unique attributes. </span><span class="koboSpan" id="kobo.181.2" xmlns="http://www.w3.org/1999/xhtml">An attribute provides additional information about XML elements. </span><span class="koboSpan" id="kobo.181.3" xmlns="http://www.w3.org/1999/xhtml">An XML attribute is a name-value pair attached to an element. </span><span class="koboSpan" id="kobo.181.4" xmlns="http://www.w3.org/1999/xhtml">In XAML, an element represents a C# class and attributes represent the members of </span><span class="No-Break"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">this class:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Button x:Name="loginButton" VerticalOptions="Center"   IsEnabled="True" Text="Login"/&gt;</span></pre>
<p><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">As we can see, four attributes – </span><strong class="source-inline"><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml">VerticalOptions</span></strong><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml">IsEnabled</span></strong><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml"> – are defined for the </span><strong class="source-inline"><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml"> element. </span><span class="koboSpan" id="kobo.194.2" xmlns="http://www.w3.org/1999/xhtml">To define an attribute, we need to specify the attribute’s name and value with an equal sign. </span><span class="koboSpan" id="kobo.194.3" xmlns="http://www.w3.org/1999/xhtml">We need to put the attribute value in double or single quotes. </span><span class="koboSpan" id="kobo.194.4" xmlns="http://www.w3.org/1999/xhtml">For example, </span><strong class="source-inline"><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">IsEnabled</span></strong><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml"> is the attribute name and </span><strong class="source-inline"><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml">"True"</span></strong><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml"> is the </span><span class="No-Break"><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml">attribute value.</span></span></p>
<p><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">In this example, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml"> attribute is a special one. </span><span class="koboSpan" id="kobo.202.2" xmlns="http://www.w3.org/1999/xhtml">It does not refer to a member of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml"> class, but it refers to the variable holding the instance of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.206.2" xmlns="http://www.w3.org/1999/xhtml">Without the </span><strong class="source-inline"><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml"> attribute, an anonymous instance of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml"> class will be created. </span><span class="koboSpan" id="kobo.210.2" xmlns="http://www.w3.org/1999/xhtml">With the </span><strong class="source-inline"><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml"> attribute declared, we can refer to the instance of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml"> class using the </span><strong class="source-inline"><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">loginButton</span></strong><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml"> variable in the </span><span class="No-Break"><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml">code-behind file.</span></span></p>
<h2 id="_idParaDest-70"><a id="_idTextAnchor072"/><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">XML namespaces and XAML namespaces</span></h2>
<p><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml">In XML or XAML, we can declare </span><a id="_idIndexMarker171"/><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml">namespaces just like we do in C#. </span><span class="koboSpan" id="kobo.220.2" xmlns="http://www.w3.org/1999/xhtml">Namespaces help to group </span><a id="_idIndexMarker172"/><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml">elements and attributes to avoid name conflicts when the same name is used in a different scope. </span><span class="koboSpan" id="kobo.221.2" xmlns="http://www.w3.org/1999/xhtml">Namespaces can be defined using the </span><strong class="source-inline"><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml">xmlns</span></strong><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml"> attribute with the </span><span class="No-Break"><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml">following syntax:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml">
xmlns:prefix="identifier"</span></pre>
<p><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml">The XAML namespace definition has two components: a prefix and an identifier. </span><span class="koboSpan" id="kobo.226.2" xmlns="http://www.w3.org/1999/xhtml">Both the prefix and the identifier can be any string, as allowed by the W3C namespaces in the XML 1.0 specification. </span><span class="koboSpan" id="kobo.226.3" xmlns="http://www.w3.org/1999/xhtml">If the prefix is omitted, the namespace is the default namespace. </span><span class="koboSpan" id="kobo.226.4" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="italic"><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.1</span></em><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml">, the following namespace is the </span><span class="No-Break"><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml">default one:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml">
xmlns="http://schemas.microsoft.com/dotnet/2021/maui"</span></pre>
<p><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml">This default namespace allows us to refer to .NET MAUI classes without a prefix, such as </span><strong class="source-inline"><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml">ContentPage</span></strong><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="No-Break"><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml">or </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml">Button</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml">For the namespace declaration, use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml">x</span></strong><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml"> prefix, </span><span class="No-Break"><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">
xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"</span></pre>
<p><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">xmlns:x</span></strong><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml"> namespace declaration specifies elements and attributes that are intrinsic to XAML. </span><span class="koboSpan" id="kobo.246.2" xmlns="http://www.w3.org/1999/xhtml">This namespace is one of the most important ones that we will use in the UI design with XAML. </span><span class="koboSpan" id="kobo.246.3" xmlns="http://www.w3.org/1999/xhtml">To understand how to use it, we can create a content page with the same structure using both C# </span><span class="No-Break"><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">and XAML.</span></span></p>
<p><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">To create a content page in XAML, we can use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></strong><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml"> command, as we </span><span class="No-Break"><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml">did previously:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">
dotnet new maui-page-xaml -n NewPage1
The template ".NET MAUI ContentPage (XAML)" was created successfully.
</span><span class="koboSpan" id="kobo.252.2" xmlns="http://www.w3.org/1999/xhtml">Processing post-creation actions...
</span><span class="koboSpan" id="kobo.252.3" xmlns="http://www.w3.org/1999/xhtml">The post action 84c0da21-51c8-4541-9940-6ca19af04ee6 is not supported.
</span><span class="koboSpan" id="kobo.252.4" xmlns="http://www.w3.org/1999/xhtml">Description: Opens NewPage1.xaml in the editor.</span></pre>
<p><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml">The preceding command generates a XAML file (</span><strong class="source-inline"><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.xaml</span></strong><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml">) and a C# code-behind file (</span><strong class="source-inline"><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.xaml.cs</span></strong><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.257.2" xmlns="http://www.w3.org/1999/xhtml">We can update the XAML file to the following. </span><span class="koboSpan" id="kobo.257.3" xmlns="http://www.w3.org/1999/xhtml">Since we aren’t adding any logic, we</span><a id="_idIndexMarker173"/><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml"> can ignore the code-behind</span><a id="_idIndexMarker174"/><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml"> file (</span><strong class="source-inline"><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.xaml.cs</span></strong><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">) in </span><span class="No-Break"><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">this example:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.xaml</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;ContentPage
  xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
  x:Class="MauiApp1.NewPage1"                                ❶
  Title="NewPage1"&gt;
  &lt;StackLayout x:Name="layout"&gt;                              ➋
    &lt;Label Text="Welcome to .NET MAUI!"
</span><span class="koboSpan" id="kobo.264.2" xmlns="http://www.w3.org/1999/xhtml">      VerticalOptions="Center"
      HorizontalOptions="Center" /&gt;
&lt;BoxView HeightRequest="150" WidthRequest="150"
  HorizontalOptions="Center"&gt;
      &lt;BoxView.Color&gt;
        &lt;Color x:FactoryMethod="FromRgba"&gt;                   ➌
          &lt;x:Arguments&gt;                                      ➍
            &lt;x:Int32&gt;192&lt;/x:Int32&gt;                           ❺
            &lt;x:Int32&gt;75&lt;/x:Int32&gt;
            &lt;x:Int32&gt;150&lt;/x:Int32&gt;
            &lt;x:Int32&gt;128&lt;/x:Int32&gt;
          &lt;/x:Arguments&gt;
        &lt;/Color&gt;
      &lt;/BoxView.Color&gt;
    &lt;/BoxView&gt;
  &lt;/StackLayout&gt;
&lt;/ContentPage&gt;</span></pre>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.xaml.cs</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">
namespace MauiApp1;
public partial class NewPage1 : ContentPage {
  public NewPage1() {
    InitializeComponent();
  }
}</span></pre>
<p><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">We can also generate a </span><a id="_idIndexMarker175"/><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">content page in C# code only. </span><span class="koboSpan" id="kobo.268.2" xmlns="http://www.w3.org/1999/xhtml">Let’s create a </span><a id="_idIndexMarker176"/><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml">content page using the </span><span class="No-Break"><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">following command:</span></span></p>
<pre class="console"><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml">
dotnet new maui-page-csharp -n NewPage1
The template ".NET MAUI ContentPage (C#)" was created successfully.
</span><span class="koboSpan" id="kobo.271.2" xmlns="http://www.w3.org/1999/xhtml">Processing post-creation actions...
</span><span class="koboSpan" id="kobo.271.3" xmlns="http://www.w3.org/1999/xhtml">The post action 84c0da21-51c8-4541-9940-6ca19af04ee6 is not supported.
</span><span class="koboSpan" id="kobo.271.4" xmlns="http://www.w3.org/1999/xhtml">Description: Opens NewPage1.cs in the editor.</span></pre>
<p><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml">The preceding </span><a id="_idIndexMarker177"/><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml">command generates a content page in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.cs</span></strong><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml"> C# file. </span><span class="koboSpan" id="kobo.275.2" xmlns="http://www.w3.org/1999/xhtml">We can implement the same</span><a id="_idIndexMarker178"/><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml"> logic in C# </span><span class="No-Break"><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1.cs</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">
namespace MauiApp1;
public class NewPage1 : ContentPage {                        ➀
  public NewPage1() {
    var layout = new StackLayout                             ➁
    {
      Children = {
        new Label { Text = "Welcome to .NET MAUI!" </span><span class="koboSpan" id="kobo.279.2" xmlns="http://www.w3.org/1999/xhtml">},
        new BoxView {
          HeightRequest = 150,
          WidthRequest = 150,
          HorizontalOptions = LayoutOptions.Center,
          Color = Color.FromRgba(192, 75, 150, 128)          ➂
        }
      }
    };
    Content = layout;
  }
}</span></pre>
<p><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml">Here, we have created the same content page (</span><strong class="source-inline"><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml">) twice in both XAML and C#. </span><span class="koboSpan" id="kobo.282.2" xmlns="http://www.w3.org/1999/xhtml">XAML cannot contain programming logic, but it can be used to declare user interface elements and put the logic in the C# code-behind file. </span><span class="koboSpan" id="kobo.282.3" xmlns="http://www.w3.org/1999/xhtml">Inside </span><strong class="source-inline"><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">, we created a content page that contains </span><strong class="source-inline"><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">BoxView</span></strong><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml"> elements. </span><span class="koboSpan" id="kobo.288.2" xmlns="http://www.w3.org/1999/xhtml">In the XAML version, we used attributes defined</span><a id="_idIndexMarker179"/><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml"> in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml">xmlns:x</span></strong><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml"> namespace to specify the </span><span class="No-Break"><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">UI elements:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml"> ❶ A content page called </span><strong class="source-inline"><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml"> is created in XAML. </span><span class="koboSpan" id="kobo.295.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml">x:Class</span></strong><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml"> attribute specifies the class name – that is, </span><strong class="source-inline"><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.299.2" xmlns="http://www.w3.org/1999/xhtml">In the C# code-behind file, a partial class of </span><strong class="source-inline"><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml"> is defined. </span><span class="koboSpan" id="kobo.301.2" xmlns="http://www.w3.org/1999/xhtml">In the constructor, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml">InitializeComponent()</span></strong><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml"> method</span><a id="_idIndexMarker180"/><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml"> is invoked to load the UI defined </span><span class="No-Break"><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml">in XAML.</span></span></li>
<li><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml"> ➀ We can create the same content page, </span><strong class="source-inline"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">NewPage1</span></strong><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">, using C# directly as a derived class </span><span class="No-Break"><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml">ContentPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">We defined a </span><strong class="source-inline"><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml"> in the content page and the variable name referring to it is </span><strong class="source-inline"><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml">layout</span></strong><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml"> in both the XAML and </span><span class="No-Break"><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">C# versions:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml"> ➋ In XAML, </span><strong class="source-inline"><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml"> specifies the variable name </span><span class="No-Break"><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml"> ➁ In C#, we can declare the variable </span><span class="No-Break"><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml">as </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml">layout</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
<li><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml"> ➌ </span><strong class="source-inline"><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml">x:FactoryMethod</span></strong><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml"> specifies a factory method that can be used to initialize </span><span class="No-Break"><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">an object.</span></span></li>
<li><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml"> ➂ In C# code, we can call the </span><strong class="source-inline"><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">Color.FromRgba()</span></strong><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml"> function directly, but we have to use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml">x:FactoryMethod</span></strong><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml"> attribute in XAML to do </span><span class="No-Break"><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml">the same.</span></span></li>
<li><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml"> ➍ </span><strong class="source-inline"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml">x:Arguments</span></strong><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml"> is used to specify arguments when we call </span><strong class="source-inline"><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">Color.FromRgba()</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">in XAML.</span></span></li>
<li><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml"> ❺ </span><strong class="source-inline"><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml">x:Int</span></strong><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml"> is used to specify integer arguments. </span><span class="koboSpan" id="kobo.345.2" xmlns="http://www.w3.org/1999/xhtml">For other data types, we can use </span><strong class="source-inline"><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml">x:Double</span></strong><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml">xChar</span></strong><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="No-Break"><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml">or </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml">x:Boolean</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">For more information about the </span><strong class="source-inline"><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml">xmlns:x</span></strong><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml"> namespace, please refer to the Microsoft documentation </span><span class="No-Break"><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml">at </span></span><a href="https://learn.microsoft.com/en-us/dotnet/maui/xaml/namespaces/"><span class="No-Break"><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/xaml/namespaces/</span></span></a><span class="No-Break"><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><strong class="bold"><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">Common Language Runtime</span></strong><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="bold"><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">CLR</span></strong><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml">) types can be</span><a id="_idIndexMarker181"/><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml"> referenced in XAML by declaring a XAML namespace with a prefix. </span><span class="koboSpan" id="kobo.363.2" xmlns="http://www.w3.org/1999/xhtml">As shown in </span><em class="italic"><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.1</span></em><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">, we can refer to our C# namespace, </span><strong class="source-inline"><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault</span></strong><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="No-Break"><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">
xmlns:local="clr-namespace:PassXYZ.Vault"</span></pre>
<p><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml">To declare a CLR namespace, we can use </span><strong class="source-inline"><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml">clr-namespace:</span></strong><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><strong class="source-inline"><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml">using:</span></strong><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.374.2" xmlns="http://www.w3.org/1999/xhtml">If the CLR namespace is defined in a different assembly, </span><strong class="source-inline"><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml">assembly=</span></strong><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml"> is used to specify the assembly that contains </span><a id="_idIndexMarker182"/><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml">the referenced CLR namespace. </span><span class="koboSpan" id="kobo.377.2" xmlns="http://www.w3.org/1999/xhtml">The value is the</span><a id="_idIndexMarker183"/><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml"> name of the assembly without the file extension. </span><span class="koboSpan" id="kobo.378.2" xmlns="http://www.w3.org/1999/xhtml">In our case, it has been omitted since the </span><strong class="source-inline"><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault</span></strong><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml"> namespace is within the same assembly as our </span><span class="No-Break"><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml">application code.</span></span></p>
<p><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">We will see more uses of namespaces later in </span><span class="No-Break"><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml">this chapter.</span></span></p>
<h1 id="_idParaDest-71"><a id="_idTextAnchor073"/><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml">XAML markup extensions</span></h1>
<p><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml">Even though we can initialize</span><a id="_idIndexMarker184"/><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml"> class instances using XAML elements and set class members using XAML attributes, we can only set them as predefined constants in a </span><span class="No-Break"><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml">XAML document.</span></span></p>
<p><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml">To enhance the power and flexibility of XAML by allowing element attributes to be set from a variety of sources, we can use XAML markup extensions. </span><span class="koboSpan" id="kobo.388.2" xmlns="http://www.w3.org/1999/xhtml">With XAML markup extensions, we can set an attribute to values defined somewhere else, or a result processed by code </span><span class="No-Break"><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">at runtime.</span></span></p>
<p><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml">XAML markup extensions can be specified in curly braces, as </span><span class="No-Break"><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml">shown here:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Button Margin="0,10,0,0" Text="Learn more"
        Command="{Binding OpenWebCommand}"
        BackgroundColor="{DynamicResource PrimaryColor}"
        TextColor="White" /&gt;</span></pre>
<p><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">In the preceding code, both the </span><strong class="source-inline"><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundColor</span></strong><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml">Command</span></strong><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml"> attributes have been set to markup extensions. </span><strong class="source-inline"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundColor</span></strong><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml"> has been set to </span><strong class="source-inline"><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml">DynamicResource</span></strong><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml">Command</span></strong><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml"> has been set to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">OpenWebCommand</span></strong><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml"> method defined in the </span><span class="No-Break"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml">view model.</span></span></p>
<p><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml">We will use markup extensions in the next few chapters to support data binding and ResourceDictionary. </span><span class="koboSpan" id="kobo.407.2" xmlns="http://www.w3.org/1999/xhtml">We will learn more about markup extensions when we use them later. </span><span class="koboSpan" id="kobo.407.3" xmlns="http://www.w3.org/1999/xhtml">Please refer to the following Microsoft documentation to find out more information about </span><span class="No-Break"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">it: </span></span><a href="https://learn.microsoft.com/en-us/dotnet/maui/xaml/markup-extensions/consume"><span class="No-Break"><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/xaml/markup-extensions/consume</span></span></a><span class="No-Break"><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">Now that we’ve learned</span><a id="_idIndexMarker185"/><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml"> the basics about XAML, we can use it to work on our user </span><span class="No-Break"><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml">interface design.</span></span></p>
<h1 id="_idParaDest-72"><a id="_idTextAnchor074"/><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml">Master-detail UI design</span></h1>
<p><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml">We have learned basic </span><a id="_idIndexMarker186"/><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">knowledge about XAML in the previous sections. </span><span class="koboSpan" id="kobo.416.2" xmlns="http://www.w3.org/1999/xhtml">Now, let’s spend some time exploring the application that we are going </span><span class="No-Break"><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml">to develop.</span></span></p>
<p><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">The master-detail pattern is commonly used in user interface design. </span><span class="koboSpan" id="kobo.418.2" xmlns="http://www.w3.org/1999/xhtml">Many examples can be found in frequently used apps. </span><span class="koboSpan" id="kobo.418.3" xmlns="http://www.w3.org/1999/xhtml">For example, in the Mail app of Windows, a list of emails is displayed in the master view, as well as the details of the </span><span class="No-Break"><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml">selected email:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer035">
<span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.2: Mail in Windows" src="image/Figure_3.2_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.2: Mail in Windows</span></p>
<p><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">In </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml">.2</span></em><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">, there are three panels in the design. </span><span class="koboSpan" id="kobo.425.2" xmlns="http://www.w3.org/1999/xhtml">The left panel looks like a navigation drawer. </span><span class="koboSpan" id="kobo.425.3" xmlns="http://www.w3.org/1999/xhtml">When we select a folder from the left panel, a list of emails is displayed in the middle panel. </span><span class="koboSpan" id="kobo.425.4" xmlns="http://www.w3.org/1999/xhtml">The currently </span><a id="_idIndexMarker187"/><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">selected email is displayed in the </span><span class="No-Break"><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">right panel.</span></span></p>
<p class="callout-heading"><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml">Note</span></p>
<p class="callout"><strong class="bold"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">Navigation drawers</span></strong><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml"> provide access to destinations and app functionality, such as the menu in the desktop environment. </span><span class="koboSpan" id="kobo.430.2" xmlns="http://www.w3.org/1999/xhtml">It typically slides in from the left and is triggered by tapping an icon in the top-left corner of the screen. </span><span class="koboSpan" id="kobo.430.3" xmlns="http://www.w3.org/1999/xhtml">It displays a list of choices to navigate to and is widely used in mobile and web user interface design. </span><span class="koboSpan" id="kobo.430.4" xmlns="http://www.w3.org/1999/xhtml">Xamarin.Forms or .NET MAUI Shell uses navigation drawers as their top-level </span><span class="No-Break"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">navigation methods.</span></span></p>
<p><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml">The original KeePass UI design, shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">.3</span></em><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml">, also uses three panels (left, right, and bottom) on the main page. </span><span class="koboSpan" id="kobo.435.2" xmlns="http://www.w3.org/1999/xhtml">The left panel is a classic tree view that acts like a navigation drawer. </span><span class="koboSpan" id="kobo.435.3" xmlns="http://www.w3.org/1999/xhtml">The right panel is used to display the list of password entries. </span><span class="koboSpan" id="kobo.435.4" xmlns="http://www.w3.org/1999/xhtml">The bottom panel is used to display the details of </span><span class="No-Break"><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml">an entry:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer036">
<span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.3: KeePass UI design" src="image/Figure_3.3_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.3: KeePass UI design</span></p>
<p><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">The master-detail pattern</span><a id="_idIndexMarker188"/><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml"> works well on a wide range of device types and </span><span class="No-Break"><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml">display sizes.</span></span></p>
<p><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">Considering different display sizes, two popular modes can </span><span class="No-Break"><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml">be used:</span></span></p>
<ul>
<li><span class="No-Break"><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">Side-by-side</span></span></li>
<li><span class="No-Break"><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml">Stacked</span></span></li>
</ul>
<h2 id="_idParaDest-73"><a id="_idTextAnchor075"/><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml">Side-by-side</span></h2>
<p><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml">When we have plenty of horizontal </span><a id="_idIndexMarker189"/><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml">space with a large display, the side-by-side approach is usually a good choice. </span><span class="koboSpan" id="kobo.448.2" xmlns="http://www.w3.org/1999/xhtml">The Mail app in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml">.2</span></em><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml"> and the KeePass app in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml">.3</span></em><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml"> are good examples. </span><span class="koboSpan" id="kobo.454.2" xmlns="http://www.w3.org/1999/xhtml">In this mode, we can see both the master view and the detail view at the </span><span class="No-Break"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">same time.</span></span></p>
<h2 id="_idParaDest-74"><a id="_idTextAnchor076"/><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml">Stacked</span></h2>
<p><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">When we use a mobile device, we</span><a id="_idIndexMarker190"/><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml"> usually have a smaller screen size and the vertical space is larger than the horizontal one. </span><span class="koboSpan" id="kobo.458.2" xmlns="http://www.w3.org/1999/xhtml">The stacked approach is a better choice in </span><span class="No-Break"><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml">this case.</span></span></p>
<p><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml">In stacked mode, the master view gets the full-screen space. </span><span class="koboSpan" id="kobo.460.2" xmlns="http://www.w3.org/1999/xhtml">Then, when a selection is made, the detail view gets the </span><span class="No-Break"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">full-screen space:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer037">
<span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.4: PassXYZ.Vault" src="image/Figure_3.4_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.4: PassXYZ.Vault</span></p>
<p><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml">In </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">, we can see how we can navigate our app from the user’s point of view. </span><span class="koboSpan" id="kobo.467.2" xmlns="http://www.w3.org/1999/xhtml">We have a list of flyout items that we can </span><span class="No-Break"><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml">choose from:</span></span></p>
<ul>
<li><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">About</span></strong></span></li>
<li><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml">Browse</span></strong></span></li>
<li><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">Logout</span></strong></span></li>
</ul>
<p><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml">When we choose </span><strong class="bold"><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">Browse</span></strong><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml">, we can see the list of items on the master page (</span><strong class="source-inline"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.476.2" xmlns="http://www.w3.org/1999/xhtml">On this page, if we choose an item, we will go to the item’s detail page (</span><strong class="source-inline"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.478.2" xmlns="http://www.w3.org/1999/xhtml">If we </span><a id="_idIndexMarker191"/><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml">want to choose another item, we must go back to the master page and select </span><span class="No-Break"><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml">another item.</span></span></p>
<p><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml">We will discuss flyout items in </span><a href="B16588_05.xhtml#_idTextAnchor107"><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 5</span></em></span></a><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml">Introducing Shell and Navigation</span></em><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.485.2" xmlns="http://www.w3.org/1999/xhtml">In this section, we will review the implementation of </span><strong class="source-inline"><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.489.2" xmlns="http://www.w3.org/1999/xhtml">However, before we go into the details, let’s study the layout, which is the container of user </span><span class="No-Break"><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">interface elements.</span></span></p>
<h2 id="_idParaDest-75"><a id="_idTextAnchor077"/><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml">Controls in .NET MAUI</span></h2>
<p><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml">The user interface of the .NET MAUI app is created using controls. </span><span class="koboSpan" id="kobo.492.2" xmlns="http://www.w3.org/1999/xhtml">These controls can be categorized as pages, layouts, </span><span class="No-Break"><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml">and views.</span></span></p>
<p><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">A page is the top-level</span><a id="_idIndexMarker192"/><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml"> user interface element that usually occupies all the screens or windows. </span><span class="koboSpan" id="kobo.495.2" xmlns="http://www.w3.org/1999/xhtml">We introduced how to create pages using the Visual Studio template or </span><strong class="source-inline"><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></strong><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml"> command at the beginning of this chapter. </span><span class="koboSpan" id="kobo.497.2" xmlns="http://www.w3.org/1999/xhtml">Each page typically contains at least one layout element, which is used to organize the design of controls on </span><span class="No-Break"><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml">a page.</span></span></p>
<p><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">Views are the UI objects to</span><a id="_idIndexMarker193"/><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml"> present, edit, or initiate commands in the user interface design. </span><span class="koboSpan" id="kobo.500.2" xmlns="http://www.w3.org/1999/xhtml">Please refer to the following Microsoft document about the controls in .NET </span><span class="No-Break"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">MAUI: </span></span><a href="https://learn.microsoft.com/en-us/dotnet/maui/user-interface/controls/"><span class="No-Break"><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/user-interface/controls/</span></span></a><span class="No-Break"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml">We will introduce layouts in the next section. </span><span class="koboSpan" id="kobo.504.2" xmlns="http://www.w3.org/1999/xhtml">In this section, we’ll go through some controls that will be frequently used in this book. </span><span class="koboSpan" id="kobo.504.3" xmlns="http://www.w3.org/1999/xhtml">Please refer to the preceding link for </span><span class="No-Break"><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">more details.</span></span></p>
<h3><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml"> is used to display single-line or multi-line text. </span><span class="koboSpan" id="kobo.508.2" xmlns="http://www.w3.org/1999/xhtml">It can display text with a certain format, such as color, space, text </span><a id="_idIndexMarker194"/><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml">decorations, and even HTML text. </span><span class="koboSpan" id="kobo.509.2" xmlns="http://www.w3.org/1999/xhtml">To create a </span><strong class="source-inline"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">, we can use the simplest format, </span><span class="No-Break"><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Label Text="Hello world" /&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></h3>
<p><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">In the user interface design, we usually </span><a id="_idIndexMarker195"/><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml">use icons to decorate other controls or display images as backgrounds. </span><span class="koboSpan" id="kobo.516.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></strong><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml"> control can display an image from a local file, a URI, an embedded resource, or a stream. </span><span class="koboSpan" id="kobo.518.2" xmlns="http://www.w3.org/1999/xhtml">The following code shows an example of how to create an </span><strong class="source-inline"><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></strong><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml"> control in the </span><span class="No-Break"><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml">simplest form:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Image Source="dotnet_bot.png" /&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">Editor</span></h3>
<p><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">In our app, the users need to enter or edit a single line of text or multiple lines of text. </span><span class="koboSpan" id="kobo.524.2" xmlns="http://www.w3.org/1999/xhtml">We have two controls to serve</span><a id="_idIndexMarker196"/><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml"> this purpose: </span><strong class="source-inline"><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml">Editor</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">and </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml">Editor</span></strong><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml"> can be used to enter or edit multiple lines of text. </span><span class="koboSpan" id="kobo.531.2" xmlns="http://www.w3.org/1999/xhtml">The following is an example of the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml">Editor</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml"> control:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Editor Placeholder="Enter your description here" /&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml"> can be used to enter or edit a single line of text. </span><span class="koboSpan" id="kobo.537.2" xmlns="http://www.w3.org/1999/xhtml">To design a login page, we can use </span><strong class="source-inline"><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml"> controls to enter a </span><a id="_idIndexMarker197"/><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">username and password. </span><span class="koboSpan" id="kobo.540.2" xmlns="http://www.w3.org/1999/xhtml">When users interact with an </span><strong class="source-inline"><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml">Entry</span></strong><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml">, the behavior of the keyboard can be customized through the </span><strong class="source-inline"><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml">Keyboard</span></strong><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml"> property. </span><span class="koboSpan" id="kobo.544.2" xmlns="http://www.w3.org/1999/xhtml">When users enter their passwords, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml">IsPassword</span></strong><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml"> property can be set to reflect the typical behavior on a login page. </span><span class="koboSpan" id="kobo.546.2" xmlns="http://www.w3.org/1999/xhtml">The following is an example of a </span><span class="No-Break"><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">password entry:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Entry Placeholder="Enter your password" Keyboard="Text"   IsPassword="True" /&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></h3>
<p><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml">In the user interface design, a common use case is to display a collection of data. </span><span class="koboSpan" id="kobo.550.2" xmlns="http://www.w3.org/1999/xhtml">In .NET MAUI, a few controls can be used to display a collection of data, such as </span><strong class="source-inline"><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">CollectionView</span></strong><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml">CarouselView</span></strong><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.556.2" xmlns="http://www.w3.org/1999/xhtml">In our app, we will use </span><strong class="source-inline"><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml"> to display password </span><a id="_idIndexMarker198"/><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml">entries, groups, and the content of an entry. </span><span class="koboSpan" id="kobo.559.2" xmlns="http://www.w3.org/1999/xhtml">We will introduce the usage of </span><strong class="source-inline"><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml"> when we </span><span class="No-Break"><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml">introduce </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<h2 id="_idParaDest-76"><a id="_idTextAnchor078"/><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml">Layouts in .NET MAUI</span></h2>
<p><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">To design user interface</span><a id="_idIndexMarker199"/><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml"> elements in a view or page, we usually use layout control as a </span><a id="_idIndexMarker200"/><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml">container to define the presentation format. </span><span class="koboSpan" id="kobo.568.2" xmlns="http://www.w3.org/1999/xhtml">There are a few layouts that are core to .</span><span class="No-Break"><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml">NET MAUI.</span></span></p>
<h3><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml"> organizes</span><a id="_idIndexMarker201"/><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml"> elements in a one-dimensional stack, either horizontally or vertically. </span><span class="koboSpan" id="kobo.573.2" xmlns="http://www.w3.org/1999/xhtml">It is often used as a parent layout, which contains other child layouts. </span><span class="koboSpan" id="kobo.573.3" xmlns="http://www.w3.org/1999/xhtml">The default </span><a id="_idIndexMarker202"/><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml">orientation is vertical. </span><span class="koboSpan" id="kobo.574.2" xmlns="http://www.w3.org/1999/xhtml">However, we should not use </span><strong class="source-inline"><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml"> to generate a layout similar to a table by using nested </span><strong class="source-inline"><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml"> horizontally and vertically. </span><span class="koboSpan" id="kobo.578.2" xmlns="http://www.w3.org/1999/xhtml">The following code shows an example of </span><span class="No-Break"><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">bad practice:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;StackLayout&gt;
    &lt;StackLayout Orientation="Horizontal"&gt;
        &lt;Label Text="Name:" /&gt;
        &lt;Entry Placeholder="Enter your name" /&gt;
    &lt;/StackLayout&gt;
    &lt;StackLayout Orientation="Horizontal"&gt;
        &lt;Label Text="Age:" /&gt;
        &lt;Entry Placeholder="Enter your age" /&gt;
    &lt;/StackLayout&gt;
    &lt;StackLayout Orientation="Horizontal"&gt;
        &lt;Label Text="Address:" /&gt;
        &lt;Entry Placeholder="Enter your address" /&gt;
    &lt;/StackLayout&gt;
&lt;/StackLayout&gt;</span></pre>
<p><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">In the preceding code, we used a </span><strong class="source-inline"><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml"> as the parent layout, where the default orientation is vertical. </span><span class="koboSpan" id="kobo.583.2" xmlns="http://www.w3.org/1999/xhtml">Then, we nested multiple </span><strong class="source-inline"><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml"> controls with a horizontal orientation to </span><a id="_idIndexMarker203"/><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">generate a form to fill in. </span><span class="koboSpan" id="kobo.586.2" xmlns="http://www.w3.org/1999/xhtml">We should use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml"> control to </span><span class="No-Break"><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml">do this.</span></span></p>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml"> is a frequently used</span><a id="_idIndexMarker204"/><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml"> layout control. </span><span class="koboSpan" id="kobo.592.2" xmlns="http://www.w3.org/1999/xhtml">There are two sub-types of </span><strong class="source-inline"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml"> that help us directly design the layout horizontally </span><span class="No-Break"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">or vertically.</span></span></p>
<h4><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml">HorizontalStackLayout</span></h4>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml">HorizontalStackLayout</span></strong><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml"> is a one-dimensional </span><a id="_idIndexMarker205"/><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml">horizontal stack. </span><span class="koboSpan" id="kobo.599.2" xmlns="http://www.w3.org/1999/xhtml">For example, we can generate a row </span><span class="No-Break"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">
    &lt;HorizontalStackLayout&gt;
        &lt;Label Text="Name:" /&gt;
        &lt;Entry Placeholder="Enter your name" /&gt;
    &lt;/HorizontalStackLayout&gt;</span></pre>
<h4><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml">VerticalStackLayout</span></h4>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml">VerticalStackLayout</span></strong><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml"> is a one-dimensional vertical stack. </span><span class="koboSpan" id="kobo.604.2" xmlns="http://www.w3.org/1999/xhtml">For example, we can display an error message after a</span><a id="_idIndexMarker206"/><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml"> form is submitted with an error </span><span class="No-Break"><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;VerticalStackLayout&gt;
  &lt;Label Text="The Form Is Invalid" /&gt;
  &lt;Button Text="OK"/&gt;
&lt;/VerticalStackLayout&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml"> organizes elements in</span><a id="_idIndexMarker207"/><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml"> rows and columns. </span><span class="koboSpan" id="kobo.611.2" xmlns="http://www.w3.org/1999/xhtml">We can specify rows and columns with the </span><strong class="source-inline"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">RowDefinitions</span></strong><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml">ColumnDefinitions</span></strong><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml"> properties. </span><span class="koboSpan" id="kobo.615.2" xmlns="http://www.w3.org/1999/xhtml">In the previous example, we created a form where the user can enter their name, age, and address using a nested </span><strong class="source-inline"><span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.617.2" xmlns="http://www.w3.org/1999/xhtml">We can do this in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml"> layout </span><span class="No-Break"><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml">like </span></span><span class="No-Break"><a id="_idIndexMarker208"/></span><span class="No-Break"><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml">so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;Grid&gt;
    &lt;Grid.RowDefinitions&gt;
        &lt;RowDefinition Height="50" /&gt;
        &lt;RowDefinition Height="50" /&gt;
        &lt;RowDefinition Height="50" /&gt;
    &lt;/Grid.RowDefinitions&gt;
    &lt;Grid.ColumnDefinitions&gt;
        &lt;ColumnDefinition Width="Auto" /&gt;
        &lt;ColumnDefinition /&gt;
    &lt;/Grid.ColumnDefinitions&gt;
    &lt;Label Text="Name:" /&gt;
    &lt;Entry Grid.Column="1"
           Placeholder="Enter your name" /&gt;
    &lt;Label Grid.Row="1" Text="Age:" /&gt;
    &lt;Entry Grid.Row="1" Grid.Column="1"
           Placeholder="Enter your age" /&gt;
    &lt;Label Grid.Row="2" Text="Address:" /&gt;
    &lt;Entry Grid.Row="2"
           Grid.Column="1"
           Placeholder="Enter your address" /&gt;
&lt;/Grid&gt;</span></pre>
<p><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">In the preceding example, we created a </span><strong class="source-inline"><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml"> layout with two columns and </span><span class="No-Break"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">three rows.</span></span></p>
<h3><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml">FlexLayout</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">FlexLayout</span></strong><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml"> is similar to a </span><strong class="source-inline"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml"> in that it displays child elements either horizontally or vertically</span><a id="_idIndexMarker209"/><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml"> in a stack. </span><span class="koboSpan" id="kobo.632.2" xmlns="http://www.w3.org/1999/xhtml">The difference is a </span><strong class="source-inline"><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml">FlexLayout</span></strong><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml"> can also wrap its children if there are too many to fit in a single row or column. </span><span class="koboSpan" id="kobo.634.2" xmlns="http://www.w3.org/1999/xhtml">As an example, we can create a </span><strong class="source-inline"><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml">FlexLayout</span></strong><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml"> with five labels in a row. </span><span class="koboSpan" id="kobo.636.2" xmlns="http://www.w3.org/1999/xhtml">If we specify the </span><strong class="source-inline"><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml">Direction</span></strong><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml"> property as </span><strong class="source-inline"><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml">Row</span></strong><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">, these labels will be displayed in one row. </span><span class="koboSpan" id="kobo.640.2" xmlns="http://www.w3.org/1999/xhtml">We can also specify the </span><strong class="source-inline"><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml">Wrap</span></strong><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml"> property, which can cause the items to wrap to the next row if there are too many items to fit in </span><span class="No-Break"><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml">a row:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">
        &lt;FlexLayout Direction="Row" Wrap="Wrap"&gt;
            &lt;Label Text="Item 1" Padding="10"/&gt;
            &lt;Label Text="Item 2" Padding="10"/&gt;
            &lt;Label Text="Item 3" Padding="10"/&gt;
            &lt;Label Text="Item 4" Padding="10"/&gt;
            &lt;Label Text="Item 5" Padding="10"/&gt;
        &lt;/FlexLayout&gt;</span></pre>
<h3><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">AbsoluteLayout</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml">AbsoluteLayout</span></strong><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml"> is a layout type that </span><a id="_idIndexMarker210"/><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml">we can use to position elements using X, Y, width, </span><span class="No-Break"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">and height.</span></span></p>
<p><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">The X and Y positions are relative to the top-left corner of the parent element. </span><span class="koboSpan" id="kobo.650.2" xmlns="http://www.w3.org/1999/xhtml">Width and height are concerned with the size of the </span><span class="No-Break"><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">child element.</span></span></p>
<p><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml">In the following example, we are creating a </span><strong class="source-inline"><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml">BoxView</span></strong><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml"> control in the layout at (0, 0) with both width and height equal </span><span class="No-Break"><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">to </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml">10</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;AbsoluteLayout Margin="20"&gt;
    &lt;BoxView Color="Silver"
        AbsoluteLayout.LayoutBounds="0, 0, 10, 10" /&gt;
&lt;/AbsoluteLayout&gt;</span></pre>
<h2 id="_idParaDest-77"><a id="_idTextAnchor079"/><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml">Navigation in the master-detail UI design</span></h2>
<p><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml">As shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em><span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml">, we are using a </span><a id="_idIndexMarker211"/><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">stacked master-detail pattern in our navigation. </span><span class="koboSpan" id="kobo.664.2" xmlns="http://www.w3.org/1999/xhtml">There is a flyout menu to display a list of pages. </span><span class="koboSpan" id="kobo.664.3" xmlns="http://www.w3.org/1999/xhtml">In the list of pages, a page of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml"> type is used to display a list of password entries. </span><span class="koboSpan" id="kobo.666.2" xmlns="http://www.w3.org/1999/xhtml">When users click an entry, details about the password entry are shown </span><span class="No-Break"><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml">in </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">Let’s review the implementation of </span><strong class="source-inline"><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong> <span class="No-Break"><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml">and </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<h3><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></h3>
<p><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">In our app, </span><strong class="source-inline"><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml"> is the detail page</span><a id="_idIndexMarker212"/><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml"> of the master-detail pattern, and it shows the content of an item. </span><span class="koboSpan" id="kobo.679.2" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">, we simply present the </span><strong class="source-inline"><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml"> data model. </span><span class="koboSpan" id="kobo.683.2" xmlns="http://www.w3.org/1999/xhtml">It looks very simple at the moment; we will enhance it gradually throughout </span><span class="No-Break"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">this book:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.3: Item.cs (https://epa.ms/Item3-3)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml">
using System;
namespace PassXYZ.Vault.Models {
    public class Item {
        public string Id { get; set; }
        public string Text { get; set; }
        public string Description { get; set; }
    }
}</span></pre>
<p><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml">As shown in </span><em class="italic"><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.3</span></em><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml">, the </span><strong class="source-inline"><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml"> class includes three properties called </span><strong class="source-inline"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml">ID</span></strong><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.697.2" xmlns="http://www.w3.org/1999/xhtml">The instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml"> is loaded by the </span><strong class="source-inline"><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml">LoadItemId()</span></strong><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml"> function in </span><strong class="source-inline"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailViewModel</span></strong><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml">, as shown here. </span><span class="koboSpan" id="kobo.703.2" xmlns="http://www.w3.org/1999/xhtml">We will discuss the MVVM pattern in the </span><span class="No-Break"><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">next chapter:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml">
        public async void LoadItemId(string itemId) {
            try {
                var item = await DataStore.GetItemAsync
                    (itemId);
                Id = item.Id;
                Text = item.Text;
                Description = item.Description;
            }
            catch (Exception) {
                Debug.WriteLine("Failed to Load Item");
            }
        }</span></pre>
<p><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml">Once the data has been loaded, we</span><a id="_idIndexMarker213"/><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml"> can present the data to the user in </span><strong class="source-inline"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage.xaml</span></strong><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.4</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.4: ItemDetailPage.xaml (https://epa.ms/ItemDetailPage3-4)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;ContentPage xmlns="http://schemas.microsoft.com
    /dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com
                 /winfx/2009/xaml"
             x:Class="PassXYZ.Vault.Views.ItemDetailPage"
             Title="{Binding Title}"&gt;
    &lt;StackLayout Spacing="20" Padding="15"&gt;
        &lt;Label Text="Text:" FontSize="Medium" /&gt;
        &lt;Label Text="{Binding </span><strong class="bold"><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml">}" FontSize="Small"/&gt;
        &lt;Label Text="Description:" FontSize="Medium" /&gt;
        &lt;Label Text="{Binding </span><strong class="bold"><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">}"
            FontSize="Small"/&gt;
    &lt;/StackLayout&gt;
&lt;/ContentPage&gt;</span></pre>
<p><em class="italic"><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.4</span></em><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml"> is the XAML file of </span><strong class="source-inline"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">ItemDetailPage</span></strong><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.721.2" xmlns="http://www.w3.org/1999/xhtml">The content page of the item detail includes an instance of </span><strong class="source-inline"><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml"> and four instances </span><span class="No-Break"><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml">of </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">, the default orientation is </span><strong class="source-inline"><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml">Vertical</span></strong><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">, so the </span><strong class="source-inline"><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml"> controls are organized vertically on the item detail page (see </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><em class="italic"><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.736.2" xmlns="http://www.w3.org/1999/xhtml">Both </span><strong class="source-inline"><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml"> are connected </span><a id="_idIndexMarker214"/><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">to the model data in the view model through data binding. </span><span class="koboSpan" id="kobo.741.2" xmlns="http://www.w3.org/1999/xhtml">We will introduce data binding in the </span><span class="No-Break"><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml">next chapter.</span></span></p>
<h3><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></h3>
<p><strong class="source-inline"><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml"> is the master </span><a id="_idIndexMarker215"/><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">page of the master-detail pattern in our app. </span><span class="koboSpan" id="kobo.746.2" xmlns="http://www.w3.org/1999/xhtml">It displays a list of items that we </span><span class="No-Break"><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml">can explore.</span></span></p>
<p><em class="italic"><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.5</span></em><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml"> is the implementation of </span><strong class="source-inline"><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.751.2" xmlns="http://www.w3.org/1999/xhtml">To display a list of items, a </span><strong class="source-inline"><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml"> control is used. </span><strong class="source-inline"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml"> is a control used to display a scrollable vertical list of selectable </span><span class="No-Break"><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">data items:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.5: ItemsPage.xaml (https://epa.ms/ItemsPage3-5)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;ContentPage xmlns="http://schemas.microsoft.com
    /dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com
                 /winfx/2009/xaml"
             x:Class="PassXYZ.Vault.Views.ItemsPage"       ➊
             Title="{Binding Title}"
             xmlns:local="clr-namespace:
                 PassXYZ.Vault.ViewModels"                 ❺
             xmlns:model="clr-namespace:PassXYZ.
</span><span class="koboSpan" id="kobo.758.2" xmlns="http://www.w3.org/1999/xhtml">                 Vault.Models"                             ❻
             x:DataType="local:ItemsViewModel"             ➋
             x:N</span><a id="_idTextAnchor080"/><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">ame="BrowseItemsPage"&gt;                     ➌
    &lt;ContentPage.ToolbarItems...&gt;
    &lt;StackLayout&gt;
        &lt;ListVi</span><a id="_idTextAnchor081"/><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml">ew x:Name="ItemsListView"                   ➍
                  ItemsSource="{Binding Items}"
                  VerticalOptions="FillAndExpand"
                  HasUnevenRows="False"
                  RowHeight="84"
                  RefreshCommand="{Binding LoadItems
                      Command}"
                  IsPullToRefreshEnabled="true"
                  IsRefreshing="{Binding IsBusy,
                      Mode=OneWay}"
                  CachingStrategy="RetainElement"
                  ItemSelected="OnItemSelected"&gt;
            &lt;ListView.ItemTemplate&gt;
                &lt;DataTemplate...&gt;
            &lt;/ListView.ItemTemplate&gt;
        &lt;/ListView&gt;
    &lt;/StackLayout&gt;
&lt;/ContentPage&gt;</span></pre>
<p><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">Let’s look at this code in </span><span class="No-Break"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">more detail:</span></span></p>
<p><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">➊ </span><strong class="source-inline"><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">x:Class</span></strong><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml">: This is used to define the class name of a partial class between the markup and </span><a id="_idIndexMarker216"/><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">code-behind file. </span><strong class="source-inline"><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.Views.ItemsPage</span></strong><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml"> is the class name </span><span class="No-Break"><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml">defined here.</span></span></p>
<p><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">➌ </span><strong class="source-inline"><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml">: While </span><strong class="source-inline"><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml">x:Class</span></strong><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml"> defines the class name in XAML, </span><strong class="source-inline"><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">x:Name</span></strong><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml"> defines the instance name. </span><span class="koboSpan" id="kobo.776.2" xmlns="http://www.w3.org/1999/xhtml">We can refer to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml">BrowseItemsPage</span></strong><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml"> instance name in the </span><span class="No-Break"><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml">code-behind file.</span></span></p>
<p><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">➋ </span><strong class="source-inline"><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml">x:DataType</span></strong><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml">: When we set </span><strong class="source-inline"><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml">x:DataType</span></strong><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml"> to the appropriate type defined in the view model, compiled binding can be turned on, which can improve performance significantly. </span><span class="koboSpan" id="kobo.784.2" xmlns="http://www.w3.org/1999/xhtml">The view model that we refer to here </span><span class="No-Break"><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml">is </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml">ItemsViewModel</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">Besides the standard namespace, we defined two more namespaces so that we can refer to the objects in the view model ❺ and model ❻. </span><span class="koboSpan" id="kobo.788.2" xmlns="http://www.w3.org/1999/xhtml">We will discuss the view model and model in the </span><span class="No-Break"><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">next chapter.</span></span></p>
<p><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml">➍ We define a </span><strong class="source-inline"><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml"> control to display the list of items. </span><span class="koboSpan" id="kobo.792.2" xmlns="http://www.w3.org/1999/xhtml">There are many properties in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml"> control. </span><span class="koboSpan" id="kobo.794.2" xmlns="http://www.w3.org/1999/xhtml">The following properties are the ones we have to define to use the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml"> control:</span></span></p>
<ul>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml">ItemsSource</span></strong><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">, of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml">Ienumerable</span></strong><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml"> type, specifies the collection of items to be displayed. </span><span class="koboSpan" id="kobo.800.2" xmlns="http://www.w3.org/1999/xhtml">It binds to </span><strong class="source-inline"><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml">Items</span></strong><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml">, which is defined in the </span><span class="No-Break"><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml">view model.</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">ItemTemplate</span></strong><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml">, of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml"> type, specifies the template to apply to each item in the collection of items to </span><span class="No-Break"><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">be displayed.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="italic"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.5</span></em><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml"> is collapsed. </span><span class="koboSpan" id="kobo.813.2" xmlns="http://www.w3.org/1999/xhtml">If we expand it, we will see the following code snippet. </span><span class="koboSpan" id="kobo.813.3" xmlns="http://www.w3.org/1999/xhtml">This is the default implementation from the Visual Studio template. </span><span class="koboSpan" id="kobo.813.4" xmlns="http://www.w3.org/1999/xhtml">The look and feel of this data template are not good enough, but we can </span><span class="No-Break"><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml">improve it:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;DataTemplate&gt;
    &lt;ViewCell&gt;
        &lt;StackLayout Padding="10" x:DataType="model:Item"&gt;
            &lt;Label Text="{Binding Text}"
              LineBreakMode="NoWrap"
              Style="{DynamicResource ListItemTextStyle}"
              FontSize="16" /&gt;
            &lt;Label Text="{Binding Description}"
              LineBreakMode="NoWrap"
              Style="{DynamicResource
                  ListItemDetailTextStyle}"
              FontSize="13" /&gt;
        &lt;/StackLayout&gt;
    &lt;/ViewCell&gt;
&lt;/DataTemplate&gt;</span></pre>
<p><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">This </span><strong class="source-inline"><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml"> implementation includes a </span><strong class="source-inline"><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml"> consisting of a </span><strong class="source-inline"><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml"> with two </span><strong class="source-inline"><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml"> controls. </span><span class="koboSpan" id="kobo.824.2" xmlns="http://www.w3.org/1999/xhtml">We can see the preview in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">.4</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml">DataTemplate</span></strong><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml"> implementation</span><a id="_idIndexMarker217"/><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml"> must reference a </span><strong class="source-inline"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">Cell</span></strong><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml"> class to display items. </span><span class="koboSpan" id="kobo.833.2" xmlns="http://www.w3.org/1999/xhtml">There are built-in cells that can be used, </span><span class="No-Break"><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml">as follows:</span></span></p>
<ul>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml">TextCell</span></strong><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml">, which displays primary and secondary text on </span><span class="No-Break"><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">separate lines.</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml">ImageCell</span></strong><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml">, which displays an image with primary and secondary text on </span><span class="No-Break"><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml">separate lines.</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">SwitchCell</span></strong><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">, which displays text and a switch that can be switched on </span><span class="No-Break"><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml">or off.</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml">EntryCell</span></strong><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml">, which displays a label and text </span><span class="No-Break"><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml">that’s editable.</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml">, which is a custom cell whose appearance is defined by a </span><strong class="source-inline"><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.850.2" xmlns="http://www.w3.org/1999/xhtml">This cell type should be used when you want to fully define the appearance of each item in </span><span class="No-Break"><span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml">a </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">Typically, </span><strong class="source-inline"><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">SwitchCell</span></strong><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml">EntryCell</span></strong><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml"> are only used in a </span><strong class="source-inline"><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">TableView</span></strong><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml"> and won’t be used in </span><span class="No-Break"><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">a </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml">ListView</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml">The preview of </span><strong class="source-inline"><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml"> in the </span><a id="_idIndexMarker218"/><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml">preceding code snippet doesn’t look very good. </span><span class="koboSpan" id="kobo.867.2" xmlns="http://www.w3.org/1999/xhtml">It is not easy to differentiate between </span><strong class="source-inline"><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.871.2" xmlns="http://www.w3.org/1999/xhtml">In KeePass, we usually attach an icon to the password entry. </span><span class="koboSpan" id="kobo.871.3" xmlns="http://www.w3.org/1999/xhtml">We can enhance it using the new data template, </span><span class="No-Break"><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;DataTemplate&gt;
  &lt;ViewCell&gt;
    &lt;Grid Padding="10" x:DataType="model:Item" &gt;             ①
      &lt;Grid.RowDefinitions&gt;                                  ②
        &lt;RowDefinition Height="32" /&gt;
        &lt;RowDefinition Height="32" /&gt;
      &lt;/Grid.RowDefinitions&gt;
      &lt;Grid.ColumnDefinitions&gt;
        &lt;ColumnDefinition Width="Auto" /&gt;
        &lt;ColumnDefinition Width="Auto" /&gt;
      &lt;/Grid.ColumnDefinitions&gt;
      &lt;Grid Grid.RowSpan="2" Padding="10"&gt;                   ③
        &lt;Grid.ColumnDefinitions&gt;
          &lt;ColumnDefinition Width="32" /&gt;
        &lt;/Grid.ColumnDefinitions&gt;
        &lt;Image Grid.Column="0" Source="passxyz_logo.png"
          HorizontalOptions="Fill" VerticalOptions="Fill" /&gt;
      &lt;/Grid&gt;
      &lt;Label Text="{Binding Text}" Grid.Column="1"
        LineBreakMode="NoWrap" MaxLines="1"
        Style="{DynamicResource ListItemTextStyle}"
        FontAttributes="Bold" FontSize="Small" /&gt;
      &lt;Label Text="{Binding Description}"
        Grid.Row="1" Grid.Column="1"
        LineBreakMode="TailTruncation" MaxLines="1"
        Style="{DynamicResource ListItemDetailTextStyle}"
        FontSize="Small" /&gt;
    &lt;/Grid&gt;
  &lt;/ViewCell&gt;
&lt;/DataTemplate&gt;</span></pre>
<p><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml">Let’s look at this code in </span><span class="No-Break"><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml">more </span></span><span class="No-Break"><a id="_idIndexMarker219"/></span><span class="No-Break"><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml">detail:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml"> ① To make </span><strong class="source-inline"><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">ViewCell</span></strong><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml"> look and feel better, we replaced the layout class from </span><strong class="source-inline"><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml">StackLayout</span></strong><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><strong class="source-inline"><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">. </span><strong class="source-inline"><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml"> is a layout that organizes its children into rows </span><span class="No-Break"><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml">and columns.</span></span></li>
<li><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml"> ② Since we want to display two rows with an icon at the left, we created a grid with two columns and two rows, as </span><span class="No-Break"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">shown here:</span></span></li>
</ul>
<div>
<div class="IMG---Figure" id="_idContainer038">
<span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.5: Layout of an entry or a group" src="image/Figure_3.5_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.5: Layout of an entry or a group</span></p>
<p><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">We can use different font styles for </span><strong class="source-inline"><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml">Text</span></strong><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="source-inline"><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml"> so that users can easily differentiate them with </span><span class="No-Break"><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml">visual effects.</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml"> ③ To display the icon at the center of the first two columns, we merged the two rows into a </span><strong class="source-inline"><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml"> control. </span><span class="koboSpan" id="kobo.899.2" xmlns="http://www.w3.org/1999/xhtml">We can use the attached </span><strong class="source-inline"><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">Grid.RowSpan</span></strong><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml"> property to </span><span class="No-Break"><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml">merge rows.</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">A </span><strong class="source-inline"><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml"> can be used as a parent layout that contains other child layouts. </span><span class="koboSpan" id="kobo.905.2" xmlns="http://www.w3.org/1999/xhtml">To make the icon a specific size and at the</span><a id="_idIndexMarker220"/><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml"> center of the merged cell, we can use another </span><strong class="source-inline"><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml"> as the parent of the </span><strong class="source-inline"><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></strong><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml"> control. </span><span class="koboSpan" id="kobo.910.2" xmlns="http://www.w3.org/1999/xhtml">This child </span><strong class="source-inline"><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml">Grid</span></strong><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml"> contains only one row and one column with a </span><span class="No-Break"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">specific size.</span></span></p>
<p><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml">Image</span></strong><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml"> control, we can use a default image (</span><strong class="source-inline"><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">passxyz_logo.png</span></strong><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">) from the resource. </span><span class="koboSpan" id="kobo.918.2" xmlns="http://www.w3.org/1999/xhtml">It can be customized after we introduce our model in the </span><span class="No-Break"><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml">next chapter.</span></span></p>
<p><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">We can see the improved preview in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml">.6</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer039">
<span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.﻿6: Improved ItemsPage" src="image/Figure_3.6_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.6: Improved ItemsPage</span></p>
<p><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml">With that, we’ve learned the</span><a id="_idIndexMarker221"/><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml"> basics of user interface design using XAML. </span><span class="koboSpan" id="kobo.927.2" xmlns="http://www.w3.org/1999/xhtml">One common issue in the user interface design is supporting multiple languages. </span><span class="koboSpan" id="kobo.927.3" xmlns="http://www.w3.org/1999/xhtml">In the remainder of this chapter, we will learn how to support multiple languages in XAML user </span><span class="No-Break"><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">interface design.</span></span></p>
<h1 id="_idParaDest-78"><a id="_idTextAnchor082"/><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml">Supporting multiple languages – localization</span></h1>
<p><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml">To support multiple languages, we </span><a id="_idIndexMarker222"/><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">can use the .NET built-in mechanism for localizing applications. </span><span class="koboSpan" id="kobo.931.2" xmlns="http://www.w3.org/1999/xhtml">In a XAML file, we can use the </span><strong class="source-inline"><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml">x:Static</span></strong><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml"> markup extension to use the string defined in </span><span class="No-Break"><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">resource files.</span></span></p>
<h2 id="_idParaDest-79"><a id="_idTextAnchor083"/><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml">Creating a .resx file</span></h2>
<p><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml">Resource files </span><a id="_idIndexMarker223"/><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml">are XML files with a </span><strong class="source-inline"><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml">.resx</span></strong><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml"> extension that are compiled into binary resource files during the build process. </span><span class="koboSpan" id="kobo.939.2" xmlns="http://www.w3.org/1999/xhtml">A resource file can be added by right-clicking the project node and selecting </span><strong class="bold"><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml">Add</span></strong><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml"> &gt; </span><strong class="bold"><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml">New Item...</span></strong><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml"> &gt; </span><strong class="bold"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">Resources File</span></strong><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">.7</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer040">
<span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.﻿7: Creating a Resources File" src="image/Figure_3.7_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.7: Creating a Resources File</span></p>
<p><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml">We can create the </span><strong class="source-inline"><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml">Resources.resx</span></strong><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml"> resource file in the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml"> folder.</span></span></p>
<p><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml">To support different cultures, we can add additional resource files with cultural information as part of the resource </span><span class="No-Break"><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml">file’s name:</span></span></p>
<ul>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml">Resources.resx</span></strong><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml">:  The resource file for the default culture, which we will set to </span><strong class="source-inline"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">en-US</span></strong><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml"> (US </span><span class="No-Break"><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">English) later</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml">Resources.zh-Hans.resx</span></strong><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml">: The resource file for the </span><strong class="source-inline"><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">zh-Hans</span></strong><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml"> culture, which is </span><span class="No-Break"><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml">simplified Chinese</span></span></li>
<li><strong class="source-inline"><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml">Resources.zh-Hant.resx</span></strong><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml">: The resource file for the </span><strong class="source-inline"><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml">zh-Hant</span></strong><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml"> culture, which is </span><span class="No-Break"><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">traditional Chinese</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml">Once the resource</span><a id="_idIndexMarker224"/><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml"> file has been created, the following </span><strong class="source-inline"><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml">ItemGroup</span></strong><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml"> will be added to the </span><span class="No-Break"><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">project file:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;ItemGroup&gt;
  &lt;Compile Update="Properties\Resources.Designer.cs"&gt;
    &lt;DesignTime&gt;True&lt;/DesignTime&gt;
      &lt;AutoGen&gt;True&lt;/AutoGen&gt;
      &lt;DependentUpon&gt;Resources.resx&lt;/DependentUpon&gt;
  &lt;/Compile&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;EmbeddedResource Update="Properties\Resources.resx"&gt;
    &lt;Generator&gt;ResXFileCodeGenerator&lt;/Generator&gt;
    &lt;LastGenOutput&gt;Resources.Designer.cs&lt;/LastGenOutput&gt;
  &lt;/EmbeddedResource&gt;
&lt;/ItemGroup&gt;</span></pre>
<p><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml">To edit the resource file, we can click a resource file and edit it in the resource editor, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml">.8</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer041">
<span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.﻿8: Resource editor" src="image/Figure_3.8_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.8: Resource editor</span></p>
<p><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml">The resource file includes a</span><a id="_idIndexMarker225"/><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml"> list of key-value pairs for </span><span class="No-Break"><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml">different languages:</span></span></p>
<ul>
<li><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="bold"><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml"> field is the string name that we can refer to in either XAML or </span><span class="No-Break"><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml">C# files</span></span></li>
<li><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="bold"><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">Value</span></strong><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml"> field contains the language-specific string that will be used according to the system </span><span class="No-Break"><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml">language settings</span></span></li>
<li><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="bold"><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml">Comment</span></strong><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml"> field is just used as a remark for the </span><span class="No-Break"><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml">key-value pair</span></span></li>
</ul>
<p><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">To specify the default language, we need to set the value of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml">NeutralLanguage</span></strong><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><strong class="source-inline"><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml">&lt;PropertyGroup&gt;</span></strong><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml"> in the project file, as </span><span class="No-Break"><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml">shown here:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;PropertyGroup&gt;
    …
&lt;NeutralLanguage&gt;en-US&lt;/NeutralLanguage&gt;
…
&lt;/PropertyGroup&gt;</span></pre>
<p><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml">In our project, we will use US English as the default culture, so </span><strong class="source-inline"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">NeutralLanguage</span></strong><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml"> is set </span><span class="No-Break"><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml">to </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">en-US</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<h2 id="_idParaDest-80"><a id="_idTextAnchor084"/><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml">Localizing text</span></h2>
<p><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml">Once we have set up the</span><a id="_idIndexMarker226"/><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml"> resource files, we can use localized content in our XAML file or C# files. </span><span class="koboSpan" id="kobo.1015.2" xmlns="http://www.w3.org/1999/xhtml">We have five content pages in our project now. </span><span class="koboSpan" id="kobo.1015.3" xmlns="http://www.w3.org/1999/xhtml">Let’s modify </span><strong class="source-inline"><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml"> with localization support, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6: AboutPage.xaml (https://epa.ms/AboutPage3-6)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;ContentPage xmlns="http://schemas.microsoft.com
    /dotnet/2021/maui"
  xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
  x:Class="PassXYZ.Vault.Views.AboutPage"
  xmlns:res="clr-namespace:PassXYZ.Vault.Properties"        ➊
  Title="{Binding Title}"&gt;
  &lt;ContentPage.Resources…&gt;
  &lt;ScrollView&gt;
    &lt;StackLayout Margin="20"&gt;
      &lt;Grid Padding="10"...&gt;
      &lt;StackLayout Padding="10" &gt;
        &lt;Label HorizontalOptions="Center"
          Text="{x:Static res:Resources.Appname}"           ➋
          FontAttributes="Bold" FontSize="22" /&gt;
        &lt;Label x:Name="AppVersion" HorizontalOptions
            ="Center"
          FontSize="Small" /&gt;
        &lt;Grid HorizontalOptions="Center"...&gt;
        &lt;StackLayout...&gt;
      &lt;/StackLayout&gt;
    &lt;/StackLayout&gt;
  &lt;/ScrollView&gt;
&lt;/ContentPage&gt;</span></pre>
<p><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml">Text is localized using the generated </span><strong class="source-inline"><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml">Resources</span></strong><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.1024.2" xmlns="http://www.w3.org/1999/xhtml">This class is named based on the default</span><a id="_idIndexMarker227"/><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml"> resource file name. </span><span class="koboSpan" id="kobo.1025.2" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="italic"><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6</span></em> <em class="italic"><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage.xaml</span></em><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml">, we added a new namespace ➊ for the </span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml">Resources</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml"> class:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">
xmlns:res ="</span><strong class="bold"><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">clr-namespace:PassXYZ.Vault.Properties </span></strong><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">"</span></pre>
<p><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml">Label</span></strong><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml"> control ➋, to display our application name, we can refer to the resource string using the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">x:Static</span></strong><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml"> XAML markup extension, </span><span class="No-Break"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">like so:</span></span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml">
        &lt;Label HorizontalOptions="Center"
          Text="{x:Static res:Resources.Appname}"
          FontAttributes="Bold" FontSize="22" /&gt;</span></pre>
<p><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="italic"><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6</span></em><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">, we collapsed most of the source code to be concise. </span><span class="koboSpan" id="kobo.1043.2" xmlns="http://www.w3.org/1999/xhtml">Please refer to the short URL of this book’s GitHub repository to review the full </span><span class="No-Break"><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml">source code.</span></span></p>
<p><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">We can use localized text in both XAML and C#. </span><span class="koboSpan" id="kobo.1045.2" xmlns="http://www.w3.org/1999/xhtml">To use a resource string in C#, we can look at the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml">Title</span></strong><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml"> property in </span><em class="italic"><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6</span></em><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1049.2" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="source-inline"><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml">Title</span></strong><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml"> property of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml"> is connected to the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml">Title</span></strong><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml"> property in the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml">AboutViewModel</span></strong><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.1057.2" xmlns="http://www.w3.org/1999/xhtml">Let’s see how we can use a resource string in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.7</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<p class="SC---Heading" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.7: AboutViewModel.cs (https://epa.ms/AboutViewModel3-7)</span></p>
<pre class="source-code"><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml">
using System;
using System.Windows.Input;
using Microsoft.Maui.Essentials;
using Microsoft.Maui.Controls;
</span><strong class="bold"><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml">using PassXYZ.Vault.Properties;</span></strong><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml">                       ①
namespace PassXYZ.Vault.ViewModels {
  public class AboutViewModel : BaseViewModel {
    public AboutViewModel() {
      Title = </span><strong class="bold"><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml">Properties.Resources.About</span></strong><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml">;             ②
      OpenWebCommand = new Command(async () =&gt; await
        Browser.OpenAsync(Properties.Resources.about_url));
    }
    public ICommand OpenWebCommand { get; }
    public string GetStoreName()...
</span><span class="koboSpan" id="kobo.1065.2" xmlns="http://www.w3.org/1999/xhtml">    public DateTime GetStoreModifiedTime()...
</span><span class="koboSpan" id="kobo.1065.3" xmlns="http://www.w3.org/1999/xhtml">  }
}</span></pre>
<p><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">As shown in </span><em class="italic"><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.7</span></em><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">, ① we added the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml">PassXYZ.Vault.Properties</span></strong><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml"> namespace first. </span><span class="koboSpan" id="kobo.1070.2" xmlns="http://www.w3.org/1999/xhtml">② We refer to</span><a id="_idIndexMarker228"/><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml"> the resource string </span><span class="No-Break"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">as </span></span><span class="No-Break"><strong class="source-inline"><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml">Properties.Resources.About</span></strong></span><span class="No-Break"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">.</span></span></p>
<p><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml">After we update </span><strong class="source-inline"><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml"> with localization support, we can test it in the supported languages, as shown in </span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3</span></em></span><span class="No-Break"><em class="italic"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml">.9</span></em></span><span class="No-Break"><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span></p>
<div>
<div class="IMG---Figure" id="_idContainer042">
<span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="Figure 3.﻿9: AboutPage in different languages" src="image/Figure_3.9_B16588.jpg"/></span>
</div>
</div>
<p class="IMG---Caption" lang="en-US" xml:lang="en-US"><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.9: AboutPage in different languages</span></p>
<p><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="source-inline"><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml">, many resource </span><a id="_idIndexMarker229"/><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">strings are used for localization. </span><span class="koboSpan" id="kobo.1086.2" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="italic"><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.6</span></em><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><em class="italic"><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml">Listing 3.7</span></em><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">, we collapsed most of the code; you can refer to the short URL for this book’s GitHub repository to review the source </span><span class="No-Break"><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml">code online.</span></span></p>
<h1 id="_idParaDest-81"><a id="_idTextAnchor085"/><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml">We learned about XAML syntax in this chapter. </span><span class="koboSpan" id="kobo.1093.2" xmlns="http://www.w3.org/1999/xhtml">We used the knowledge we learned to improve the look and feel of </span><strong class="source-inline"><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">ItemsPage</span></strong><span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1095.2" xmlns="http://www.w3.org/1999/xhtml">We will continue improving the user interface of other pages throughout this book. </span><span class="koboSpan" id="kobo.1095.3" xmlns="http://www.w3.org/1999/xhtml">To support multiple languages, we learned how to support localization in .NET. </span><span class="koboSpan" id="kobo.1095.4" xmlns="http://www.w3.org/1999/xhtml">We created .resx resource files for the </span><strong class="source-inline"><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">US-en</span></strong><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="source-inline"><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml">zh-Hans</span></strong><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="source-inline"><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">zh-Hant</span></strong><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml"> cultures and used a XAML markup extension to enable multi-language support. </span><span class="koboSpan" id="kobo.1101.2" xmlns="http://www.w3.org/1999/xhtml">Finally, we used </span><strong class="source-inline"><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml">AboutPage</span></strong><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml"> as an example to explain how to use localized text in both XAML </span><span class="No-Break"><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml">and C#.</span></span></p>
<p><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, we will continue improving our app by introducing MVVM and </span><span class="No-Break"><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml">data binding.</span></span></p>
<h1 id="_idParaDest-82"><a id="_idTextAnchor086"/><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">Further reading</span></h1>
<ul>
<li><strong class="bold"><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">.NET Multi-platform App </span></strong><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml">UI documentation</span></strong></span></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/maui/"><span class="No-Break"><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/</span></span></a></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml">XAML - .</span></strong><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml">NET MAUI</span></strong></span></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/maui/xaml/"><span class="No-Break"><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/xaml/</span></span></a></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">XAML </span></strong><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">markup extensions</span></strong></span></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/maui/xaml/fundamentals/markup-extensions"><span class="No-Break"><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/maui/xaml/fundamentals/markup-extensions</span></span></a></li>
<li><strong class="bold"><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml">KeePass – An open source </span></strong><span class="No-Break"><strong class="bold"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">password manager</span></strong></span></li>
<li><a href="https://keepass.info/"><span class="No-Break"><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml">https://keepass.info/</span></span></a></li>
</ul>
</div>
<div>
<div class="IMG---Figure" id="_idContainer044">
</div>
</div>
</body>
</html>
