<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="en-US" xml:lang="en-US">
  <head>
    <title>Chapter_17</title>
    <!-- kobo-style -->
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>
</head>
  <body id="Chapter_17" class="calibre">
<div class="calibre1" id="_idContainer068">
<h1 class="chapternumber"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1.1">17</span></h1>
<h1 class="chaptertitle" id="_idParaDest-268"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.2.1">Examining Source Generators</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.1">In this chapter, we will look at writing code that generates code. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.2">Even though this chapter isn’t directly related to Blazor development, it still has a connection to Blazor, as we’ll discover.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.4.1">The subject of source generators is a book on its own, but I wanted to introduce it since they are used by Blazor and, honestly, it is one of my favorite features.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.5.1">I am the kind of person that spends a day writing source code that saves me 10 minutes if I know I will need to repeat those 10 minutes over and over again. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.5.2">Repetitive tasks have never been a favorite of mine.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.6.1">In this chapter, we will cover the following:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.7.1">What a source generator is</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.8.1">How to get started with source generators</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.9.1">Community projects</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.10.1">The idea for this chapter is for you to use it as a reference so that you can implement a new project on your own.</span></p>
<h1 class="heading" id="_idParaDest-269"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.11.1">Technical requirements</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.12.1">This chapter is a reference chapter and is not connected in any way with the book’s other chapters.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.13.1">You can find the source code for this chapter’s result at </span><a href="https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter17" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.14.1">https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter17</span></span></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.15.1">.</span></p>
<h1 class="heading" id="_idParaDest-270"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.1">What a source generator is</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.17.1">In many cases, we find</span><a id="_idIndexMarker618" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.18.1"> ourselves writing the same kind of code repeatedly. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.18.2">In the past, I have used T4 templates to generate code and even written </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.19.1">stored procedures</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.20.1"> and </span><a id="_idIndexMarker619" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.21.1">applications that can help me generate code. </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.22.1">Source generators</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.23.1"> are part of the .NET compiler platform (Roslyn) SDK.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.24.1">A generator gives us access to a compilation object representing all the user code currently being compiled. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.24.2">From there, the object can be inspected, and we can, based on that, write additional code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.25.1">Okay, this sounds complicated, and I would be lying if I said it was easy to write a source generator, but it instantly saves us a lot of time. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.25.2">So, let’s break it down a bit.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.26.1">When we compile our code, the compiler does the following steps:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.27.1">The compilation runs.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.1">Source generators analyze code.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.29.1">The source generators generate new code.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.30.1">The compilation continues.</span></li>
</ol>
<p class="normal1"><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.31.1">Steps 2</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.32.1"> and </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.33.1">3</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.34.1"> are what source generators do.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.35.1">In Blazor, source generators are used all the time; it is a source generator that takes the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.36.1">.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.37.1"> files and converts them to C# code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.38.1">We can look at what Blazor generates by adding the following to our .</span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.39.1">csproj</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.40.1"> file:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.41.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.42.1">EmitCompilerGeneratedFiles</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.43.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.44.1">true</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.45.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.46.1">EmitCompilerGeneratedFiles</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.47.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.48.1">Adding this code will emit generated files into the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.49.1">obj</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.50.1"> folder for the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.51.1">razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.52.1"> component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.53.1">We can find them here: </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.54.1">\obj\Debug\net8.0\generated\Microsoft.NET.Sdk.Razor.SourceGenerators\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.55.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.56.1">We can choose where to emit the files by using:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.57.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.58.1">CompilerGeneratedFilesOutputPath</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.59.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.60.1">THEPATH</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.61.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.62.1">CompilerGeneratedFilesOutputPath</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.63.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.64.1">You can replace </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.65.1">THEPATH</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.66.1"> with a path you would like to have the files emitted to.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.67.1">In that folder, we can find a file called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.68.1">Pages_Counter_razor.g.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.69.1">, which is the C# representation of the counter component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.70.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.71.1">Microsoft.NET.Sdk.Razor.SourceGenerators-generator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.72.1"> is, of course, a very advanced source generator.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.73.1">Let’s think of a scenario: at work, we create services and interfaces for those services. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.73.2">The only use of these interfaces is for testing purposes, the same way we have built our repositories throughout the book.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.74.1">In this case, adding </span><a id="_idIndexMarker620" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.1">a method to a service means we need to add the method to the class and the interface. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.2">We tried simplifying the process by putting the interface and the class in the same file. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.3">However, we still forgot about the interface, pushed the code, and didn’t notice the mistake until everything was built and a NuGet package was generated.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.76.1">We found a source generator</span><a id="_idIndexMarker621" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.77.1"> called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.78.1">InterfaceGenerator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.79.1">; adding an attribute to our class will generate the interface for us.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.80.1">Let’s take a look at this example:</span></p>
<pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.81.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.82.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.83.1">SampleService</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.84.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.85.1">public</span></span><span> </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.86.1">double</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.87.1">Multiply</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.88.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.89.1">double</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.90.1"> x, </span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.91.1">double</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.92.1"> y</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.93.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.94.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.95.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.96.1"> x * y;
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.97.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.98.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.99.1"> NiceNumber =&gt; </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.100.1">42</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.101.1">;
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.102.1">This is a simple service class (taken from the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.103.1">InterfaceGenerator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.104.1"> GitHub page). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.104.2">Adding an attribute to the code will automatically generate an interface, and we can add a reference to that interface:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.105.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.106.1">GenerateAutoInterface</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.107.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.108.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.109.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.110.1">SampleService</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.111.1">: </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.112.1">ISampleService</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.113.1">
…
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.114.1">The generated interface will always be up to date. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.114.2">This sample is an excellent example of when source code generators will save time and remove pain points.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.1">Source generators are </span><a id="_idIndexMarker622" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.116.1">powerful; we get access to a syntax tree that we can query. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.116.2">We can iterate over all classes and find the ones with a specific attribute or that implement an interface, for example, and based on that, generate code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.117.1">There are some limitations. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.117.2">There is no way to know in what order the source generators will run, so we can’t generate code based on generated code. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.117.3">We can only add code, not modify code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.118.1">The following section will look at how we can build our source generators.</span></p>
<h1 class="heading" id="_idParaDest-271"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.119.1">How to get started with source generators</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.120.1">It’s time to look at</span><a id="_idIndexMarker623" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.121.1"> how we can build our source code generators. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.121.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.122.1">Chapter17</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.123.1"> folder is a finished example of what we discuss here. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.123.2">The instructions will not be a step-by-step guide.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.124.1">To create a source code generator, we need a class library targeting </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.125.1">.NET Standard 2.0</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.126.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.126.2">We also need to add a reference to the NuGet packages </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.127.1">Microsoft.CodeAnalysis.CSharp</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.128.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.129.1">Microsoft.CodeAnalysis.Analyzers</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.130.1"> in that library. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.130.2">We also need to make sure that our .</span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.131.1">csproj</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.132.1"> file has </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.133.1">&lt;LangVersion&gt;latest&lt;/LangVersion&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.134.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.135.1">To create a source generator, we need to create a class that has two things:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.136.1">It needs to have the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.137.1">[Generator]</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.138.1"> attribute.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.139.1">It needs to implement </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.140.1">ISourceGenerator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.141.1">.</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.142.1">The template code should look something like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.143.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.144.1"> Microsoft.CodeAnalysis;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.145.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.146.1">SourceGenerator</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.147.1">;
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.148.1">Generator</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.149.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.150.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.151.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.152.1">HelloSourceGenerator</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.153.1"> : </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.154.1">ISourceGenerator</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.155.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.156.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.157.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.158.1">Execute</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.159.1">(</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.160.1">GeneratorExecutionContext context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.161.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.162.1">
    {
        </span><span class="hljs-comment"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.163.1">// Code generation goes here</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.164.1">
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.165.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.166.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.167.1">Initialize</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.168.1">(</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.169.1">GeneratorInitializationContext context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.171.1">
    {
        </span><span class="hljs-comment"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.172.1">// No initialization required for this one</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.173.1">
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.174.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.175.1">Initialize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.176.1"> method, we add any initialization that may be needed; and in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.177.1">Execute</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.178.1"> method, we write the generated code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.179.1">The generator we are building now is, of course, a silly example, but it also shows some of the power of source generators.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.180.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.181.1">Execute</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.182.1"> method, we add the following code:</span></p>
<pre class="programlisting"><code class="hljs-code">        <span class="hljs-comment"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.183.1">// Build up the source code</span></span>
        <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.184.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.185.1"> source = </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.186.1">"""</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.187.1">namespace BlazorWebAssemblyApp;</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.188.1">public class GeneratedService</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.189.1">    {</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.190.1">        public string GetHello()</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.191.1">        {</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.192.1">            return "</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.193.1">Hello </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.194.1">from</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.195.1"> generated code</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.196.1">";</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.197.1">        }</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.198.1">    }</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.199.1">"""</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.200.1">;
        </span><span class="hljs-comment"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.201.1">// Add the source code to the compilation</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.202.1">
        context.AddSource(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.203.1">$"GeneratedService.g.cs"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.204.1">, source);
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.205.1">It will take the </span><a id="_idIndexMarker624" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.206.1">code in the source variable and save it as </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.207.1">GeneratedService.g.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.2">We also use raw string literals in this file – the feature in .NET7 I have been the most excited about. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.3">By adding three double quotes, we don’t need to escape the string; we are free to add more double quotes inside of the string. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.4">If you want to escape more than three double quotes, you can add more at the start and end.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.209.1">To add a source generator to our project, we can add the project like this:</span></p>
<pre class="programlisting"><code class="hljs-code">  <span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.210.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.211.1">ItemGroup</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.212.1">&gt;</span></span>
    <span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.213.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.214.1">ProjectReference</span></span><span> </span>
<span>        </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.215.1">Include</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.216.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.217.1">"..\SourceGenerator\SourceGenerator.csproj"</span></span><span> </span>
<span>        </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.218.1">OutputItemType</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.219.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.220.1">"Analyzer"</span></span>
<span>        </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.221.1">ReferenceOutputAssembly</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.222.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.223.1">"false"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.224.1">/&gt;</span></span>
  <span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.225.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.226.1">ItemGroup</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.227.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.228.1">When we compile our project, the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.229.1">GeneratedService</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.230.1"> will be generated, and we can use the code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.231.1">Now we can inject the service and use it inside of our components:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.232.1">@page "/"
@inject GeneratedService service
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.233.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.234.1">h1</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.235.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.236.1">@service.GetHello()</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.237.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.238.1">h1</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.239.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.240.1">Don’t forget to add it to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.241.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.242.1"> as well:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.243.1">builder.Services.AddScoped&lt;GeneratedService&gt;();
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.244.1">The example above isn’t really how you would use it in a real-world scenario, but I wanted to show that it is not that tricky to get started.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.245.1">Sometimes the</span><a id="_idIndexMarker625" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.246.1"> Visual Studio editor won’t pick up these generated files, and we will see some red squiggles in the code editor. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.246.2">This is because the order of the source generators (there is no guaranteed order) will result in these problems, especially when combining source generators with other classes that are also generated, like .</span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.247.1">razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.248.1"> files.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.249.1">In the next section, we will look at some of the source generators we can use in our projects.</span></p>
<h1 class="heading" id="_idParaDest-272"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.250.1">Community projects</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.251.1">Source generators have been around</span><a id="_idIndexMarker626" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.252.1"> since .NET5/6, and there are a lot of community/open-source projects we can use in our projects. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.252.2">Let’s explore them in the following sections.</span></p>
<h2 class="heading1" id="_idParaDest-273"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.253.1">InterfaceGenerator</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.254.1">We have already talked</span><a id="_idIndexMarker627" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.255.1"> about </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.256.1">InterfaceGenerator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.257.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.257.2">Generating interfaces </span><a id="_idIndexMarker628" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.258.1">without having to write the same thing twice will save time and help you avoid problems, especially if you use interfaces only for testing.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.259.1">We can</span><a id="_idIndexMarker629" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.260.1"> find it here:</span></p>
<p class="normal1"><a href="https://github.com/daver32/InterfaceGenerator" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.1">https://github.com/daver32/InterfaceGenerator</span></span></a></p>
<h2 class="heading1" id="_idParaDest-274"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.262.1">Blazorators</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.263.1">David Pine, with</span><a id="_idIndexMarker630" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.264.1"> many contributors, has</span><a id="_idIndexMarker631" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.265.1"> built Blazorators, which can take a TypeScript definition file and generate JavaScript interop ready to be used in any Blazor project. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.265.2">Blazorators take away a lot of the pain points when writing JavaScript interop.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.266.1">Check</span><a id="_idIndexMarker632" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.267.1"> out his project here:</span></p>
<p class="normal1"><a href="https://github.com/IEvangelist/blazorators" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.268.1">https://github.com/IEvangelist/blazorators</span></span></a></p>
<h2 class="heading1" id="_idParaDest-275"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.269.1">C# source generators</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.270.1">Amadeusz Sadowski, with many </span><a id="_idIndexMarker633" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.271.1">contributors, has made an impressive list of where to </span><a id="_idIndexMarker634" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.1">find more information on source generators and some outstanding ones. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.2">You can</span><a id="_idIndexMarker635" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.273.1"> find this fantastic resource here:</span></p>
<p class="normal1"><a href="https://github.com/amis92/csharp-source-generators" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.274.1">https://github.com/amis92/csharp-source-generators</span></span></a></p>
<h2 class="heading1" id="_idParaDest-276"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.275.1">Roslyn SDK samples</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.276.1">Microsoft</span><a id="_idIndexMarker636" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.277.1"> has added some samples to their Roslyn SDK repository. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.277.2">It’s a great start to dig a bit deeper</span><a id="_idIndexMarker637" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.278.1"> into source </span><a id="_idIndexMarker638" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.1">generators. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.2">You can find the samples here:</span></p>
<p class="normal1"><a href="https://github.com/dotnet/roslyn-sdk/tree/main/samples/CSharp/SourceGenerators" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.280.1">https://github.com/dotnet/roslyn-sdk/tree/main/samples/CSharp/SourceGenerators</span></span></a></p>
<h2 class="heading1" id="_idParaDest-277"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.281.1">Microsoft Learn</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.282.1">Microsoft Learn</span><a id="_idIndexMarker639" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.283.1"> is an excellent source for learning anything C# related, and </span><a id="_idIndexMarker640" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.284.1">source generators are no exception.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.285.1">If you think, just like me, that source generators sound like the best thing since sliced bread, I recommend </span><a id="_idIndexMarker641" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.286.1">that you dive into the documentation found at Microsoft Learn:</span></p>
<p class="normal1"><a href="https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.287.1">https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview</span></span></a></p>
<h1 class="heading" id="_idParaDest-278"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.288.1">Summary</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.289.1">In this chapter, we looked at code that writes code to save time and reduce repetitive tasks.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.290.1">Blazor uses source generators to convert razor code into C# code, so, indirectly, we are using them all the time.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.291.1">In the next chapter, we will look at Blazor Hybrid by visiting .NET MAUI.</span></p>
</div>
</body>
</html>
