<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="en-US" xml:lang="en-US">
  <head>
    <title>Chapter_06</title>
    <!-- kobo-style -->
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>
</head>
  <body id="Chapter_06" class="calibre">
<div class="calibre1" id="_idContainer046">
<h1 class="heading" id="_idParaDest-135"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.253.1">Adding validation</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.254.1">We have already touched on </span><a id="_idIndexMarker287" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.255.1">validation; there are some built-in functionalities in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.256.1">input</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.257.1"> components and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.258.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.259.1"> to handle validation.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.260.1">One way to add validation to our form is to use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.1">DataAnnotations</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.262.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.262.2">Using DataAnnotations, we don’t have to write any custom logic to ensure the data in the form is correct; instead, we can add attributes to the data model and let </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.263.1">DataAnnotationsValidator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.264.1"> take care of the rest.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.265.1">There are a bunch of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.266.1">DataAnnotations</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.267.1"> instances in .NET already that we can use; we can also build our own annotations.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.268.1">Some of the built-in data annotations are as follows:</span></p>
<ul class="calibre4">
<li class="bulletlist"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.269.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.270.1">: This makes the field required.</span></li>
<li class="bulletlist1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.271.1">Email</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.1">: This will check that the entered value is an email address.</span></li>
<li class="bulletlist1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.273.1">MinLength</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.274.1">: This will check that the number of characters is not fewer than the value specified.</span></li>
<li class="bulletlist1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.275.1">MaxLength</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.276.1">: This will check that the number of characters is not exceeded.</span></li>
<li class="bulletlist1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.277.1">Range</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.278.1">: This will check that the value is within a specific range.</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.1">There are many more annotations that can help us validate our data. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.2">To test this out, let’s add data annotations to our data classes:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.280.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.281.1">Data.Models</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.282.1"> project, open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.283.1">Models/BlogPost.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.284.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.285.1">At the top of the file, add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.286.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.287.1"> statement for System.ComponentModel.DataAnnotations:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.288.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.289.1"> System.ComponentModel.DataAnnotations;
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.290.1">Add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.291.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.292.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.293.1">MinLength</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.294.1"> attributes to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.295.1">Title</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.296.1"> property:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.297.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.298.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.299.1">]
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.300.1">MinLength(5)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.301.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.302.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.303.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.304.1"> Title { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.305.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.306.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.307.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.308.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.309.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.310.1">.Empty;
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.311.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.312.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.313.1"> attribute will ensure we can’t leave the title empty, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.314.1">MinLength</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.315.1"> will make sure it has at least </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.316.1">5</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.317.1"> characters.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="4"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.318.1">Add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.319.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.320.1"> attribute to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.321.1">Text</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.322.1"> property:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.323.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.324.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.325.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.326.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.327.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.328.1"> Text { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.329.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.330.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.331.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.332.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.333.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.334.1">.Empty;
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.335.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.336.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.337.1"> attribute will ensure the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.338.1">Text</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.339.1"> property cannot be empty, which makes sense – why would we create an empty blog post?</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="5"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.340.1">Open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.341.1">Models/Category.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.342.1">, and at the top of the file, add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.343.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.344.1"> statement for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.345.1">System.ComponentModel.DataAnnotations</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.347.1">Add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.348.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.349.1"> attribute to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.350.1">Name</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.351.1"> property:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.352.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.353.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.354.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.355.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.356.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.357.1"> Name { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.358.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.359.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.360.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.361.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.362.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.363.1">.Empty;
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.364.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.365.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.366.1"> attribute will make sure we can’t leave the name empty.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="7"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.367.1">Open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.368.1">Models/Tag.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.369.1">, and at the top of the file, add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.370.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.371.1"> statement for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.372.1">System.ComponentModel.DataAnnotations</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.373.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.374.1">Add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.375.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.376.1"> attribute to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.377.1">Name</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.378.1"> property:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.379.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.380.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.381.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.382.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.383.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.384.1"> Name { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.385.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.386.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.387.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.388.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.389.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.390.1">.Empty;
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.391.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.392.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.393.1"> attribute will make sure we can’t leave the name empty.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="9"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.394.1">Open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.395.1">Models/Comment.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.396.1">, and at the top of the file, add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.397.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.398.1"> statement for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.399.1">System.ComponentModel.DataAnnotations</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.400.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.401.1">Add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.402.1">Required</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.403.1"> attribute to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.404.1">Name</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.405.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.406.1">Text</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.407.1"> properties:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.409.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.410.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.411.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.412.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.413.1"> Text { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.414.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.415.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.416.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.417.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.418.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.419.1">.Empty;
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.420.1">Required</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.421.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.422.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.423.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.424.1"> Name { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.425.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.426.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.427.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.428.1">; } = </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.429.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.430.1">.Empty;
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.431.1">Great, now our data </span><a id="_idIndexMarker288" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.432.1">models have validation built into them. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.432.2">We need to give our users feedback on what went wrong with the validation.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.433.1">We can do that by using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.434.1">ValidationMessage</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.435.1"> or </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.436.1">ValidationSummary</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.437.1"> components.</span></p>
<h2 class="heading1" id="_idParaDest-136"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.438.1">ValidationMessage</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.439.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.440.1">ValidationMessage</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.441.1"> component can </span><a id="_idIndexMarker289" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.1">show us individual error messages for a specific property. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.2">We want to use this component to show validation errors under a form element.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.443.1">To add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.444.1">ValidationMessage</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.445.1"> component, we have to specify the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.446.1">For</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.447.1"> property with the name of the property we want to show the validation errors for:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.448.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.449.1">ValidationMessage</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.450.1">For</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.451.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.452.1">"@(() =&gt; personmodel.Name)"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.453.1">/&gt;</span></span>
</code></pre>
<h2 class="heading1" id="_idParaDest-137"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.454.1">ValidationSummary</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.455.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.456.1">ValidationSummary</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.457.1"> component</span><a id="_idIndexMarker290" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.458.1"> will show all the validation errors as a list for the entire </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.459.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.460.1">:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.461.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.462.1">ValidationSummary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.463.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.464.1">We don’t need to supply any model or property to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.465.1">ValidationSummary</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.466.1"> component since it gets access to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.467.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.468.1"> using the cascading value.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.469.1">I prefer to show the error close to the problem so the user can see where the issue is. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.469.2">However, we also have the option to show the validation errors as a list using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.470.1">ValidationSummary</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.471.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.472.1">To ensure our input controls match the Bootstrap theme (or whatever theme we might use), we can create our </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.473.1">custom validation class</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.474.1">.</span></p>
<h1 class="heading" id="_idParaDest-138"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.475.1">Custom validation class attributes</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.476.1">By </span><a id="_idIndexMarker291" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.477.1">simply using the edit form, input components, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.478.1">DataAnnotationValidator</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.479.1">, the framework will automatically add classes to the components when it is and isn’t valid.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.480.1">By default, these classes are </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.481.1">.valid</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.482.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.483.1">.invalid</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.484.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.484.2">In .NET 5, we were given a way to customize these class names ourselves.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.485.1">When using Bootstrap, the default class names are </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.486.1">.is-valid</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.487.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.488.1">.is-invalid</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.489.1"> , and the list of class names must also include </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.490.1">.form-control</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.491.1"> to get the proper styles.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.492.1">The next component we build will help us get the proper Bootstrap styling on all our form components.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.493.1">We will create </span><a id="_idIndexMarker292" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.494.1">our own </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.495.1">FieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.496.1"> to customize what classes Blazor will use:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.497.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.498.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.499.1"> project, inside the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.500.1">ResuableComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.501.1"> folder, add a new class called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.502.1">BootstrapFieldCssClassProvider.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.503.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.504.1">Open the new class and add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.505.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.506.1"> Microsoft.AspNetCore.Components.Forms;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.507.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.508.1">SharedComponents.ResuableComponents</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.509.1"> ;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.510.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.511.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.512.1">BootstrapFieldCssClassProvider</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.513.1"> : </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.514.1">FieldCssClassProvider</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.515.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.516.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.517.1">override</span></span><span> </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.518.1">string</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.519.1">GetFieldCssClass</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.520.1">(</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.521.1">EditContext editContext, </span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.522.1">in</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.523.1"> FieldIdentifier fieldIdentifier</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.524.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.525.1">
   {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.526.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.527.1"> isValid = !editContext.GetValidationMessages(fieldIdentifier).Any();
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.528.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.529.1"> isModified = editContext.IsModified(fieldIdentifier);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.530.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.531.1"> (isModified, isValid) </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.532.1">switch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.533.1">
        {
            (</span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.534.1">true</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.535.1">, </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.536.1">true</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.537.1">) =&gt; </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.538.1">"form-control modified is-valid"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.539.1">,
            (</span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.540.1">true</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.541.1">, </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.542.1">false</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.543.1">) =&gt; </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.544.1">"form-control modified is-invalid"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.545.1">,
            (</span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.546.1">false</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.547.1">, </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.548.1">true</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.549.1">) =&gt; </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.550.1">"form-control"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.551.1">,
            (</span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.552.1">false</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.553.1">, </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.554.1">false</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.555.1">) =&gt; </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.556.1">"form-control"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.557.1">
        };
    }
}
</span></code></pre>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.558.1">BootstrapFieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.559.1"> needs an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.560.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.561.1"> instance to work.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.562.1">The code will check whether the form (or </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.563.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.564.1"> to be specific) is valid and whether or not it has been modified. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.564.2">Based on that, it returns the correct CSS classes.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.565.1">It returns the form control for all elements; that way, we don’t have to add it to every element in the form. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.565.2">We could validate an untouched form as valid or invalid, but we don’t want it to show that the form is OK just because it hasn’t been changed yet.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.566.1">Without the code we are about to build, we need to get the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.567.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.568.1"> instance from our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.569.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.570.1"> and then set </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.571.1">FieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.572.1"> on </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.573.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.574.1"> as follows:</span></p>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.575.1">CurrentEditContext.SetFieldCssClassProvider(provider);</span></code></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.576.1">Next, we will do that more elegantly (in my humble opinion) with the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.577.1">CustomCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.578.1"> we will create next.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.579.1">Earlier in this chapter, I mentioned that </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.580.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.581.1"> exposes its </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.582.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.583.1"> as </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.584.1">CascadingValue</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.585.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.586.1">That means </span><a id="_idIndexMarker293" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.587.1">we will build a component that we can just put inside of our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.588.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.589.1"> and access </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.590.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.1"> that way.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.592.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.593.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.594.1"> project, in the root of the project, add a new class and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.595.1">CustomCssClassProvider.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.596.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.597.1">Open the new file and replace the content with the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.598.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.1"> Microsoft.AspNetCore.Components;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.601.1"> Microsoft.AspNetCore.Components.Forms;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.602.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.603.1">SharedComponents</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.604.1">;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.605.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.606.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.607.1">CustomCssClassProvider</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.608.1">&lt;</span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.609.1">ProviderType</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.610.1">&gt; : </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.611.1">ComponentBase</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.612.1">where</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.613.1">ProviderType</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.614.1"> : </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.615.1">FieldCssClassProvider</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.616.1">, </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.617.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.618.1">()
{
    [</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.619.1">CascadingParameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.620.1">]
    EditContext? </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.620.2">CurrentEditContext { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.621.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.622.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.623.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.624.1">; }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.625.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.626.1"> ProviderType Provider { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.627.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.628.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.629.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.630.1">; } = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.631.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.632.1">();
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.633.1">protected</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.634.1">override</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.635.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.636.1">OnInitialized</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.637.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.638.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.639.1">if</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.640.1"> (CurrentEditContext == </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.641.1">null</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.642.1">)
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.643.1">throw</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.644.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.645.1"> InvalidOperationException(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.646.1">$"</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.647.1">{</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.648.1">nameof</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.649.1">(CustomCssClassProvider &lt;ProviderType&gt;)}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.650.1"> requires a cascading parameter of type </span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.651.1">{</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.652.1">nameof</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.653.1">(EditContext)}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.654.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.654.2">For example, you can use </span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.655.1">{</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.656.1">nameof</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.657.1">(CustomCssClassProvider&lt;ProviderType&gt;)}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.658.1"> inside an EditForm."</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.659.1">);
        }
        CurrentEditContext.SetFieldCssClassProvider
         (Provider);
    }
}
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.660.1">This generic</span><a id="_idIndexMarker294" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.661.1"> component takes a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.662.1">type</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.663.1"> value, in this case, the type of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.664.1">Provider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.665.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.666.1">We specified that </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.667.1">type</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.668.1"> must inherit from </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.669.1">FieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.670.1"> and must have a constructor without parameters.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.671.1">The component inherits from </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.672.1">ComponentBase</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.673.1">, which makes it possible to place the component inside a Blazor component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.674.1">In this case, we are writing our component with C# only, but it is not rendering anything.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.675.1">We have a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.676.1">Cascading</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.677.1"> parameter that will be populated from </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.678.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.679.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.679.2">We throw an exception if </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.680.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.681.1"> is missing for some reason (for example, if we place the component outside of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.682.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.683.1">).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.684.1">Finally, we set </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.685.1">FieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.686.1"> on </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.687.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.688.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.689.1">To use the component, we have to add the following code inside of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.690.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.691.1"> (don’t worry, we will create an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.692.1">EditForm</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.693.1"> soon):</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.694.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.695.1">CustomCssClassProvider</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.696.1">ProviderType</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.697.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.698.1">"BootstrapFieldCssClassProvider"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.699.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.700.1">We provide our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.701.1">CustomCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.702.1"> component with the right </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.703.1">ProviderType</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.704.1">: </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.705.1">BootstrapFieldCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.706.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.707.1">This is one way of implementing components to help us encapsulate functionality. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.707.2">We could have written the code this way:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.708.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.709.1">EditForm</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.710.1">Model</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.711.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.712.1">"personmodel"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.713.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.714.1">ref</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.715.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.716.1">"CurrentEditForm"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.717.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.718.1">
…
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.719.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.720.1">EditForm</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.721.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.722.1">
@code {
    public EditForm CurrentEditForm { get; set; }
    protected override Task OnInitializedAsync()
    {
        CurrentEditForm.EditContext.SetFieldCssClassProvider(new BootstrapFieldCssClassProvider())
        return base.OnInitializedAsync();
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.723.1">But with the new </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.724.1">CustomCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.725.1"> component, we can write the same thing like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.726.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.727.1">EditForm</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.728.1">Model</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.729.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.730.1">"personmodel"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.731.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.732.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.733.1">CustomCssClassProvider</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.734.1">ProviderType</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.735.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.736.1">"BootstrapFieldCssClassProvider"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.737.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.738.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.739.1">EditForm</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.740.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.741.1">If we are doing </span><a id="_idIndexMarker295" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.742.1">something with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.743.1">EditContext</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.744.1">, we can always create a component like this since it is a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.745.1">cascading</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.746.1"> parameter.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.747.1">Now, we have a component that will make our form controls look like Bootstrap controls and instead of adding specific code to every component, we can now add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.748.1">CustomCssClassProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.749.1"> component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.749.2">Next, it’s time to put that into practice and create a couple of forms by building our admin interface.</span></p>
<h1 class="heading" id="_idParaDest-139"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.750.1">Looking at bindings</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.751.1">In this chapter, we are using bindings to bind data to our form controls. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.751.2">We briefly discussed bindings in </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.752.1">Chapter 5</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.753.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.754.1">Creating Advanced Blazor Components</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.755.1">, but it’s time to dig deeper into bindings.</span></p>
<h2 class="heading1" id="_idParaDest-140"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.756.1">Binding to HTML elements</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.757.1">With </span><a id="_idIndexMarker296" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.758.1">HTML elements, we can use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.759.1">@bind</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.760.1"> to bind variables to the element. </span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.761.1">So, if we are binding to a textbox, we would do it like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.762.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.763.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.764.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.765.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.766.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.767.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.768.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.769.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.770.1">"Variable"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.771.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.772.1">@bind</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.773.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.774.1">@bind-value</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.775.1"> both work and do the same thing. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.775.2">Note the lower </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.776.1">v</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.777.1"> in value. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.777.2">The input element is an HTML element that will render as a normal HTML element with no extra features (except binding). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.777.3">Compare this to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.778.1">InputText</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.779.1">, which will work in a similar way but also give you additional features like validation and styles.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.780.1">By default, the value in the variable will change when we leave the textbox. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.780.2">But we can change that behavior by adding a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.781.1">@bind:event</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.782.1"> attribute like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.783.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.784.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.785.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.786.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.787.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.788.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.789.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.790.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.791.1">"Variable"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.792.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.793.1">bind:event</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.794.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.795.1">"oninput"/</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.796.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.797.1">We can even take full control over what is happening by using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.798.1">@bind:get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.799.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.800.1">@bind:set</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.801.1"> attributes like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.802.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.803.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.804.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.805.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.806.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.807.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.808.1">bind:get</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.809.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.810.1">"SomeText"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.811.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.812.1">bind:set</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.813.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.814.1">"SetAsync"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.815.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.816.1">These are doing the same thing as </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.817.1">@bind</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.818.1">, so we can’t use them together with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.819.1">@bind</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.820.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.820.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.821.1">@bind:set</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.822.1"> attribute has another nice feature. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.822.2">We can run asynchronous methods when we set a value.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.823.1">There is also a way for us to run a method after the value is set by using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.824.1">@bind:after</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.825.1"> like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.826.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.827.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.828.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.829.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.830.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.831.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.832.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.833.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.834.1">"SomeText"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.835.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.836.1">bind:after</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.837.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.838.1">"AfterAsync"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.839.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.840.1">This gives us great flexibility when it comes to binding to HTML elements.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.841.1">On top of that, we can also set the culture using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.842.1">@bind:culture</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.843.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.843.2">Both date and number fields use invariant culture and will use the appropriate browser formatting, but if we use a text field, we can change the behavior like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.844.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.845.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.846.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.847.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.848.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.849.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.850.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.851.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.852.1">"SomeNumber"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.853.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.854.1">bind:culture</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.855.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.856.1">"GBCulture"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.857.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.858.1">Where </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.859.1">GBCulture</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.860.1">, in this </span><a id="_idIndexMarker297" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.861.1">case, is a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.862.1">CultureInfo</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.863.1"> object. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.863.2">Lastly, we can set the format using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.864.1">@bind:format</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.865.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.865.2">This is only implemented for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.866.1">DateTime</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.867.1"> at this point:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.868.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.869.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.870.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.871.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.872.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.873.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.874.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.875.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.876.1">"SomeDate"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.877.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.878.1">bind:format</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.879.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.880.1">"MM/dd/yyyy"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.881.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.882.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.883.1">input</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.884.1">type</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.885.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.886.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.887.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.888.1">bind</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.889.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.890.1">"SomeDate"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.891.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.892.1">bind:format</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.893.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.894.1">"yyyy-MM-dd"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.895.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.896.1">We now know how we can bind to HTML elements. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.896.2">Next, we will take a look at binding to components.</span></p>
<h2 class="heading1" id="_idParaDest-141"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.897.1">Binding to components</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.898.1">When binding </span><a id="_idIndexMarker298" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.899.1">to components, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.900.1">Get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.901.1">, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.902.1">Set</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.903.1">, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.904.1">After</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.905.1"> will also work. </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.906.1">Culture</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.907.1">, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.908.1">Event</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.909.1">, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.910.1">Format</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.911.1"> will work on some components.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.912.1">When binding to a component, we use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.913.1">@bind-{ParameterName}</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.914.1">, so for the parameter </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.915.1">Value</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.916.1">, it would look like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.917.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.918.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.919.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.920.1">bind-Value</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.921.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.922.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.923.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.924.1">In the background, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.925.1">@bind-Value</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.926.1"> will affect two other parameters, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.927.1">ValueExpression</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.928.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.929.1">ValueChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.930.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.930.2">This means you will not be able to set them manually if you use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.931.1">@bind-Value</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.932.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.932.2">When we change the value, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.933.1">ValueChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.934.1"> will get triggered, and we can listen to the event and make things happen when it changes.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.935.1">We can also use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.936.1">Get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.937.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.938.1">Set</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.939.1"> like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.940.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.941.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.942.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.943.1">bind-Value:get</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.944.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.945.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.946.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.947.1">bind-Value:set</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.948.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.949.1">"(value) =&gt; {text=value; }"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.950.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.951.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.952.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.953.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.954.1">bind-Value:get</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.955.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.956.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.957.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.958.1">bind-Value:set</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.959.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.960.1">"Set"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.961.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.962.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.963.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.964.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.965.1">bind-Value:get</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.966.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.967.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.968.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.969.1">bind-Value:set</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.970.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.971.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.972.1">SetAsync"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.973.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.974.1">We must always supply both </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.975.1">Get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.976.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.977.1">Set</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.978.1"> and they cannot be combined with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.979.1">@bind-Value</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.980.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.980.2">These samples use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.981.1">InputText</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.982.1">, a built-in Blazor component, but this concept works with any parameter on any component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.982.2">The same thing goes for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.983.1">After</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.984.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.984.2">It can be used with any component, like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.985.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.986.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.987.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.988.1">bind-Value</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.989.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.990.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.991.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.992.1">bind-Value:after</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.993.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.994.1">"() =&gt; { }"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.995.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.996.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.997.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.998.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.999.1">bind-Value</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1000.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1001.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1002.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1003.1">bind-Value:after</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1004.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1005.1">"After"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1006.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1007.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1008.1">InputText</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1009.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1010.1">bind-Value</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1011.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1012.1">"text"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1013.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1014.1">bind-Value:after</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1015.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1016.1">"AfterAsync"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1017.1"> /&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1018.1">We have </span><a id="_idIndexMarker299" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1019.1">access to some nice binding features, and they work when binding to components as well as HTML elements.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1020.1">Next, we will build an admin interface using bindings.</span></p>
<h1 class="heading" id="_idParaDest-142"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1021.1">Building an admin interface</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1022.1">Now, it’s time to build a simple</span><a id="_idIndexMarker300" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1023.1"> admin interface for our blog.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1024.1">We need to be able to do the following:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1025.1">List categories</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1026.1">Edit categories</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1027.1">List tags</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1028.1">Edit tags</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1029.1">List blog posts</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1030.1">Edit blog posts</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1031.1">If we look at the preceding list, we might notice that some of the things seem similar – perhaps we can build shared components for those. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1031.2">Categories and tags are very similar; they have names, and the name is the only thing we should be able to edit.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1032.1">Let’s make a</span><a id="_idIndexMarker301" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1033.1"> component for that. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1033.2">The component is going to be responsible for listing, adding, deleting, and updating the object.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1034.1">Since the object we are working with is either </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1035.1">Category</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1036.1"> or </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1037.1">Tag</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1038.1">, we need to be able to call different APIs depending on the object, so our component needs to be generic:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1039.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1040.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1041.1"> project, in the root of the project, add a new Razor component and call it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1042.1">ItemList.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1043.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1044.1">Open the newly created file and at the top of the file, add:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1045.1">@typeparam ItemType
</span></code></pre>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1046.1">@typeparam</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1047.1"> is to make the component generic, and the variable holding the generic type is called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1048.1">ItemType</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1049.1">.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1050.1">Add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1051.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1052.1"> section (if you don’t have one already), and add the following lines of code:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1053.1">@code{
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1054.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1055.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1056.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1057.1"> List&lt;ItemType&gt; Items { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1058.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1059.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1060.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1061.1">; } = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1062.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1063.1">();
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1064.1">Parameter, EditorRequired</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1065.1">]
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1066.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1067.1"> required RenderFragment&lt;ItemType&gt; ItemTemplate { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1068.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1069.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1070.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1071.1">; }
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1072.1">We need two parameters: a list where we can add all the items and an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1073.1">ItemTemplate</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1074.1"> instance that we can use to change how we want the items to be shown. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1074.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1075.1">EditorRequired</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1076.1"> attribute makes sure that we need to set this value when using the component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1076.2">Otherwise, Visual Studio will show hostile error messages until we fix it.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1077.1">In this case, we are using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1078.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1079.1">, which will give us access to the item inside the template (things will become clearer as soon as we implement it).</span></p></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="5"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1080.1">We also need a couple of events; add the following code to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1081.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1082.1"> section:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1083.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1084.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1085.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1086.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1087.1"> EventCallback&lt;ItemType&gt; DeleteEvent { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1088.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1089.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1090.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1091.1">; }
[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1092.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1093.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1094.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1095.1"> EventCallback&lt;ItemType&gt; SelectEvent { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1096.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1097.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1098.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1099.1">; }
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1100.1">We added two events; the first is when we delete a tag or a category. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1100.2">We will send an event to the parent component where we can add the code needed to delete the item.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1101.1">The second one is when we select an item so that we can edit the item.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="6"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1102.1">Now, it’s time</span><a id="_idIndexMarker302" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1103.1"> to add the UI; replace the top of the file below the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1104.1">@typeparam</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1105.1"> to the code tag with:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1106.1">@using System.Collections.Generic
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1107.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1108.1">h3</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1109.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1110.1">List</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1111.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1112.1">h3</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1113.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1114.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1115.1">table</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1116.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1117.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1118.1">Virtualize</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1119.1">Items</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1120.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1121.1">"@Items"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1122.1">Context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1123.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1124.1">"item"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1125.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1126.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1127.1">tr</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1128.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1129.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1130.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1131.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1132.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1133.1">button</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1134.1">class</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1135.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1136.1">"btn btn-primary"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1137.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1138.1">onclick</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1139.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1140.1">"@(()=&gt; {SelectEvent.InvokeAsync(item); })"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1141.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1142.1"> Select</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1143.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1144.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1145.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1146.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1147.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1148.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1149.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1150.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1151.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1152.1">@ItemTemplate(item)</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1153.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1154.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1155.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1156.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1157.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1158.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1159.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1160.1">button</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1161.1">class</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1162.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1163.1">"btn btn-danger"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1164.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1165.1">onclick</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1166.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1167.1">"@(()=&gt; {DeleteEvent.InvokeAsync(item);})"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1168.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1169.1"> Delete</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1170.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1171.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1172.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1173.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1174.1">td</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1175.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1176.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1177.1">tr</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1178.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1179.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1180.1">Virtualize</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1181.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1182.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1183.1">table</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1184.1">&gt;</span></span>
</code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1185.1">If we look back to </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1186.1">Step 3</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1187.1">, we’ll notice that we used the variable for the lists and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1188.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1189.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1190.1">Then, we use the new </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1191.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1192.1"> component to list our items; to be fair, we might not have that many categories or tags, but why not use it when we can? </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1192.2">We set the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1193.1">Items</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1194.1"> property to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1195.1">"Items"</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1196.1"> (which is the name of our list) and the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1197.1">Context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1198.1"> parameter to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1199.1">"item"</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1200.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1201.1">We can give it whatever name we want; we’re only going to use it inside of the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1202.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1203.1"> render template.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1204.1">We added two buttons that simply invoke the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1205.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1206.1"> instance we added in </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1207.1">Step 4</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1208.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1208.2">Between those buttons, we added </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1209.1">@ItemTemplate(item)</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1210.1">; we want Blazor to render the template, but</span><a id="_idIndexMarker303" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1211.1"> we also send the current item in the loop.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1212.1">That means we have access to the item’s value inside our template.</span></p>
</div>
</body>
</html>
