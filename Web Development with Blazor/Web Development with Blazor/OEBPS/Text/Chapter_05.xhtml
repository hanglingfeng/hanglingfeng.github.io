<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="en-US" xml:lang="en-US">
  <head>
    <title>Chapter_05</title>
    <!-- kobo-style -->
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>
</head>
  <body id="Chapter_05" class="calibre">
<div class="calibre1" id="_idContainer041">
<h1 class="chapternumber"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1.1">5</span></h1>
<h1 class="chaptertitle" id="_idParaDest-103"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.2.1">Creating Advanced Blazor Components</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.1">In the last chapter, we learned all the basics of creating a component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.2">This chapter will teach us how to take our components to the next level.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.4.1">This chapter will focus on some of the features that will make our components reusable, which will enable us to save time and also give us an understanding of how to use reusable components made by others.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.5.1">We will also look at some built-in components that will help you by adding additional functionality (compared to using HTML tags) when you build your Blazor app.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.6.1">In this chapter, we will cover the following topics:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.7.1">Exploring binding</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.8.1">Actions and EventCallback</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.9.1">Using RenderFragment</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.10.1">Exploring the new built-in components</span></li>
</ul>
<h1 class="heading" id="_idParaDest-104"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.11.1">Technical requirements</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.12.1">In this chapter, we will start building our components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.12.2">For this, you’ll need the code we developed in </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.13.1">Chapter 4</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.14.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.15.1">Understanding Basic Blazor Components</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.2">You are good to go if you have followed the instructions in the previous chapters. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.3">If not, then make sure you clone/download the repository. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.4">The starting point for this chapter can be found in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.17.1">chapter04</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.18.1"> folder, and the finished </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.19.1">chapter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.20.1"> is in </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.21.1">chapter05</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.22.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.23.1">You can find the source code for this chapter’s result at </span><a href="https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter05" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.24.1">https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter05</span></span></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.25.1">.</span></p>
<h1 class="heading" id="_idParaDest-105"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.26.1">Exploring binding</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.27.1">When building applications, data</span><a id="_idIndexMarker213" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.1"> is important, and we can use binding to show or change data. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.2">By using binding, you can connect variables within a component (so that it updates automatically) or by setting a component attribute. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.3">Perhaps the most fantastic thing is that by using binding, Blazor understands when it should update the UI and the variable (if the data changes in the UI).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.29.1">In Blazor, there are two different ways that we can bind values to components, as follows:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.30.1">One-way binding</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.31.1">Two-way binding</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.32.1">By using binding, we can send information between components and make sure we can update a value when we want to.</span></p>
<h2 class="heading1" id="_idParaDest-106"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.33.1">One-way binding</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.34.1">We have already discussed one-way binding</span><a id="_idIndexMarker214" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.35.1"> in </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.36.1">Chapter 4</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.37.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.38.1">Creating Basic Blazor Components</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.39.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.39.2">Let’s</span><a id="_idIndexMarker215" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.40.1"> look at the component again and continue building on it in this section.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.41.1">In this section, we will combine parameters and binding.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.42.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.43.1">Counter.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.44.1"> example looks like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.45.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.46.1">"/counter"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.47.1"> @rendermode InteractiveAuto
&lt;PageTitle&gt;Counter&lt;/PageTitle&gt;
&lt;h1&gt;Counter&lt;/h1&gt;
&lt;p role=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.48.1">"status"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.49.1">&gt;Current count: @currentCount&lt;/p&gt;
&lt;button </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.50.1">class</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.51.1">=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.52.1">"btn btn-primary"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.53.1"> @onclick=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.54.1">"IncrementCount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.55.1">&gt;Click me&lt;/button&gt;
@code {
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.56.1">private</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.57.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.58.1"> currentCount = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.59.1">0</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.60.1">;
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.61.1">private</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.62.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.63.1">IncrementCount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.64.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.65.1">
    {
        currentCount++;
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.66.1">The component will show the current count and a button that will increment the current count. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.66.2">This is one-way binding. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.66.3">Even though the button can change the value of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.67.1">currentCount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.68.1">, it only flows in one direction to the screen.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.69.1">Since this part is designed to demonstrate the functionality and theory and is not part of the finished project we are building, you don’t have to write or run this code. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.69.2">The source code for these components is available on GitHub.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.70.1">We can add a parameter to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.71.1">Counter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.72.1"> component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.72.2">The code will then look like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.73.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.74.1">"/counterwithparameter"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.1">
@rendermode InteractiveAuto
&lt;h1&gt;Counter&lt;/h1&gt;
&lt;p&gt;Current count: @CurrentCount&lt;/p&gt;
&lt;button </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.76.1">class</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.77.1">=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.78.1">"btn btn-primary"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.79.1"> @onclick=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.80.1">"IncrementCount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.81.1">&gt;Click me&lt;/button&gt;
@code {
    [</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.82.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.83.1">]
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.84.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.85.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.86.1"> IncrementAmount { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.87.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.88.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.89.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.90.1">; } = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.91.1">1</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.92.1">;
    [</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.93.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.94.1">]
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.95.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.96.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.97.1"> CurrentCount { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.98.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.99.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.100.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.101.1">; } = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.102.1">0</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.103.1">;
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.104.1">private</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.105.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.106.1">IncrementCount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.107.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.108.1">
    {
        CurrentCount+=IncrementAmount;
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.109.1">The code sample has </span><a id="_idIndexMarker216" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.110.1">two parameters, one for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.111.1">CurrentCount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.112.1"> and one for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.113.1">IncrementAmount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.114.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.114.2">By adding parameters to the components, we can change their </span><a id="_idIndexMarker217" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.1">behavior. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.2">This sample is, of course, a bit silly. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.3">The chances are that you won’t have any use for a component like this that just counts up when pressing a button. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.4">But it illustrates the idea very well.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.116.1">We can now take the component and add it to another component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.116.2">This is how we can create a reusable component and change its behavior by changing the value of the parameters.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.117.1">We change its behavior like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.118.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.119.1">"/parentcounter"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.120.1">
@rendermode InteractiveAuto
&lt;CounterWithParameter IncrementAmount=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.121.1">"@incrementamount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.122.1"> CurrentCount=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.123.1">"@</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.124.1">currentcount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.125.1">/&gt;
The current count </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.126.1">is</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.127.1">: @currentcount
@code {
    </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.128.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.129.1"> incrementamount = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.130.1">10</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.131.1">;
    </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.132.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.133.1"> currentcount = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.134.1">0</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.135.1">;
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.136.1">In this sample, we have two variables, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.137.1">incrementamount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.138.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.139.1">currentcount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.140.1">, that we pass into our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.141.1">CounterWithParameter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.142.1"> component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.143.1">If we were to</span><a id="_idIndexMarker218" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.144.1"> run this, we would see a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.145.1">Counter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.146.1"> component that </span><a id="_idIndexMarker219" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.147.1">counts in increments of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.148.1">10</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.149.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.149.2">However, the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.150.1">currentcount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.151.1"> variable will not be updated since it is only a one-way binding (one direction).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.152.1">To help us with that, we can implement two-way binding so that our parent component will be notified of any changes.</span></p>
<h2 class="heading1" id="_idParaDest-107"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.153.1">Two-way binding</span></h2>
<p class="normal"><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.154.1">Two-way binding</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.155.1"> binds values in</span><a id="_idIndexMarker220" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.156.1"> both directions, and our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.157.1">Counter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.158.1"> component will be able </span><a id="_idIndexMarker221" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.159.1">to notify our parent component of any changes. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.159.2">In the next chapter, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.160.1">Chapter 6</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.161.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.162.1">Building Forms with Validation</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.163.1">, we will talk even more about two-way binding.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.164.1">To make our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.165.1">CounterWithParameter</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.166.1"> component bind in two directions, we need to add an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.167.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.168.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.168.2">The name must consist of the parameter’s name followed by </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.169.1">Changed</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.2">This way, Blazor will update the value if it changes. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.3">In our case, we would need to name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.171.1">CurrentCountChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.172.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.172.2">The code would then look like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.173.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.174.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.175.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.176.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.177.1"> EventCallback&lt;</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.178.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.179.1">&gt; CurrentCountChanged { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.180.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.181.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.182.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.183.1">; }
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.184.1">private</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.185.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.186.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.187.1">IncrementCount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.188.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.189.1">
{
    CurrentCount += IncrementAmount;
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.190.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.191.1"> CurrentCountChanged.InvokeAsync(CurrentCount);
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.192.1">By merely using that naming convention, Blazor knows that </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.193.1">CurrentCountChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.194.1"> is the event that will get triggered when a change to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.195.1">CurrentCount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.196.1"> occurs.</span></p>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.197.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.198.1"> cannot be </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.199.1">null</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.200.1">, so there is no reason to do a null check (more on that in the next section).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.201.1">We also need to change how we listen for changes:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.202.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.203.1">CounterWithParameterAndEvent</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.204.1">IncrementAmount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.205.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.206.1">"@incrementamount"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.207.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.1">bind-CurrentCount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.209.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.210.1">"currentcount"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.211.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.212.1">We need to add </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.213.1">@bind-</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.214.1"> before the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.215.1">CurrentCount</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.216.1"> binding. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.216.2">You can also use the following syntax to set the name of the event:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.217.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.218.1">CounterWithParameterAndEvent</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.219.1">IncrementAmount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.220.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.221.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.222.1">@incrementamount"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.223.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.224.1">bind-CurrentCount</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.225.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.226.1">"currentcount"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.227.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.228.1">bind-CurrentCount:event</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.229.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.230.1">"CurrentCountChanged"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.231.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.232.1">By using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.233.1">:event</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.234.1">, we can tell Blazor</span><a id="_idIndexMarker222" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.235.1"> exactly what event we want to use; in this </span><a id="_idIndexMarker223" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.236.1">case, the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.237.1">CurrentCountChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.238.1"> event.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.239.1">In the next chapter, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.240.1">Chapter 6</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.241.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.242.1">Building Forms with Validation</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.243.1">, we will continue to look at binding with input/form components.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.244.1">We can, of course, also create events using </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.245.1">EventCallback</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.246.1">.</span></p>
<h1 class="heading" id="_idParaDest-108"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.247.1">Actions and EventCallback</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.248.1">To communicate changes, we can use </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.249.1">EventCallback</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.250.1">, as shown in the </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.251.1">Two-way binding</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.252.1"> section. </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.253.1">EventCallback&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.254.1"> differs a bit from </span><a id="_idIndexMarker224" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.255.1">what we might be used to in .NET. </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.256.1">EventCallback&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.257.1"> is a class that is specially made for Blazor to be able to have the event callback exposed as a parameter for the component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.258.1">In .NET, in general, you can add multiple listeners to an event (multi-cast), but with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.259.1">EventCallback&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.260.1">, you will only be able to add one listener (single-cast).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.1">It is worth mentioning that you can use events the way you are used to from .NET in Blazor. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.2">However, you probably want to use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.262.1">EventCallback&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.263.1"> because there are many upsides to using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.264.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.265.1"> over traditional .NET events, as follows:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.266.1">.NET events use classes, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.267.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.268.1"> uses structs. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.268.2">This means that in Blazor, we don’t have to perform a null check before calling </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.269.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.270.1"> because a struct cannot be null.</span></li>
<li class="bulletlist1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.271.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.1"> is asynchronous and can be awaited. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.2">When </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.273.1">EventCallback</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.274.1"> has been called, Blazor will automatically execute </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.275.1">StateHasChanged</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.276.1"> on the consuming component to ensure the component updates (if it needs to be updated).</span></li>
</ul>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.277.1">So, if you require multiple listeners, you can use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.278.1">Action&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.2">Otherwise, it would be best if you used </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.280.1">EventCallback&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.281.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.282.1">Some event types have event arguments that we can access. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.282.2">They are optional, so you don’t need to add them in most cases.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.283.1">You can add them by specifying them in a method, or you can use a lambda expression like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.284.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.285.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.286.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.287.1">onclick</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.288.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.289.1">"@((e)=&gt;message=$"</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.290.1">x:</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.291.1">{</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.292.1">e.ClientX</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.293.1">} </span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.294.1">y:</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.295.1">{</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.296.1">e.ClientY</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.297.1">}")"&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.298.1">Click me</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.299.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.300.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.301.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.302.1">When the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.303.1">button</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.304.1"> is clicked, it will set a variable called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.305.1">message</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.306.1"> to a string containing the mouse coordinates. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.306.2">The lambda has one parameter, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.307.1">e</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.308.1">, of the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.309.1">MouseArgs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.310.1"> type. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.310.2">However, you don’t have to specify the type, and the compiler understands what type the parameter is.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.311.1">Now that we have added actions and </span><a id="_idIndexMarker225" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.312.1">used </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.313.1">EventCallback</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.314.1"> to communicate changes, we will see how we can execute </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.315.1">RenderFragment</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.316.1"> in the next section.</span></p>
<h1 class="heading" id="_idParaDest-109"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.317.1">Using RenderFragment</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.318.1">To make our components </span><a id="_idIndexMarker226" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.319.1">even more reusable, we can supply them with a piece of Razor syntax. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.319.2">In Blazor, you can specify </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.320.1">RenderFragment</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.321.1">, which is a fragment of Razor syntax that you can execute and show.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.322.1">There are two types of render elements, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.323.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.324.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.325.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.326.1">.</span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.327.1"> RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.328.1"> is simply a Razor fragment without any input parameters, and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.329.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.330.1"> has an input parameter that you can use inside the Razor fragment code by using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.331.1">context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.332.1"> keyword. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.332.2">We won’t go into depth about how to use this now, but later in this chapter, we will talk about a component (</span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.333.1">Virtualize</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.334.1">) that uses </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.335.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.336.1">, and in the next chapter, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.337.1">Chapter 6</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.338.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.339.1">Building Forms with Validation</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.340.1">, we will implement a component using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.341.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.342.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.343.1">We can make </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.344.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.345.1"> the default content inside of the component tags as well as giving it a default value. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.345.2">We will explore this next and build a component using these features.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.1">When using components in a list, it can add some overhead. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.2">It needs to execute the whole lifetime cycle for each component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.3">Here is where render fragments come to the rescue. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.4">We can create a method that returns a render fragment without the overhead of a component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.5">Take this example:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.347.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.348.1">"/RenderFragmentTest"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.349.1">
@for (</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.350.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.351.1"> i = </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.352.1">0</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.353.1">; i &lt; </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.354.1">10</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.355.1">; i++)
{
    @Render(i)
}
@code
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.356.1">private</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.357.1"> RenderFragment </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.358.1">Render</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.359.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.360.1">int</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.361.1"> number</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.362.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.363.1"> 
    {
         </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.364.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.365.1"> @&lt;p&gt;This </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.366.1">is</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.367.1"> a render fragment @number&lt;/p&gt;;
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.368.1">We have a component with a method that returns a render fragment. </span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.369.1">The method could </span><a id="_idIndexMarker227" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.370.1">be static if we needed to use it in other components as well. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.370.2">When doing a loop like this, it will boost performance and will have a lower impact on memory consumption compared to having a component reference.</span></p>
<div class="note">
<p class="normal1"><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.371.1">GRID COMPONENT</span></strong></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.372.1">If you want to dig deeper into render fragments, please check out </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.373.1">Blazm.Components</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.374.1">, which have a grid component that heavily uses </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.375.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.376.1">. </span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.377.1">You can find it on GitHub here: </span><a href="https://github.com/EngstromJimmy/Blazm.Components" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.378.1">https://github.com/EngstromJimmy/Blazm.Components</span></span></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.379.1">.</span></p>
</div>
<h2 class="heading1" id="_idParaDest-110"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.380.1">ChildContent</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.381.1">By naming the </span><a id="_idIndexMarker228" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.382.1">render fragment </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.383.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.384.1">, Blazor will automatically use whatever is between the component tags as content. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.384.2">This only works, however, if you are using a single render fragment; if you are using more than one, you will have to specify the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.385.1">ChildComponent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.386.1"> tag as well. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.386.2">We will build a component </span><a id="_idIndexMarker229" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.387.1">using a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.388.1">childcontent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.389.1"> render fragment in the next section.</span></p>
<h2 class="heading1" id="_idParaDest-111"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.390.1">Default value</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.391.1">We can supply </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.392.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.393.1"> with a </span><a id="_idIndexMarker230" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.394.1">default value or set it in code by using an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.395.1">@</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.396.1"> symbol:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.397.1">@</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.398.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.399.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.400.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.401.1">This is a default value</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.402.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.403.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.404.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.405.1">;
</span></code></pre>
<h2 class="heading1" id="_idParaDest-112"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.406.1">Building an alert component</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.407.1">To better understand how to use </span><a id="_idIndexMarker231" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.1">render fragments, let’s build an alert component that will use render fragments. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.2">The built-in templates use Bootstrap, so we will do the same for this component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.3">Bootstrap has many components that are easy to import to Blazor. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.4">When working on big projects with multiple developers, building components is an easy way to ensure that everyone in a team is writing code the same way.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.409.1">Let’s build a simple alert component based on Bootstrap:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.410.1">Create a folder by right-clicking on </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.411.1">SharedComponents project</span></code><strong class="screentext"> </strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.412.1">| </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.413.1">Add </span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.414.1">| </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.415.1">New folder</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.416.1"> and name the folder </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.417.1">ReusableComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.418.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.419.1">Create a new Razor component and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.420.1">Alert.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.421.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.422.1">Replace the content with the following code in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.423.1">Alert.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.424.1"> file:
        </span><pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.425.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.426.1">div</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.427.1">class</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.428.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.429.1">"alert alert-primary"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.430.1">role</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.431.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.432.1">"alert"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.433.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.434.1">
    A simple primary alert—check it out!
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.435.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.436.1">div</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.437.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.438.1">The code is taken from Bootstrap’s web page, </span><a href="http://getbootstrap.com" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.439.1">http://getbootstrap.com</span></span></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.440.1">, and it shows an alert that looks like this:</span></p>
<figure class="mediaobject1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.441.1"><img alt="Figure 5.1 – The default look of a Bootstrap alert component " src="../Images/B21849_05_01.png" class="calibre5"/></span></figure>
<p class="packt_figref"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.1">Figure 5.1: The default look of a Bootstrap alert component</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.443.1">There are two ways in which we could customize this </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.444.1">alert</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.445.1"> component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.445.2">We could add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.446.1">string</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.447.1"> parameter for the message.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.448.1">However, since this is a section on render fragments, we will explore the second option – yes, you guessed it, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.449.1">render fragments</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.450.1">.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="4"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.451.1">Add a code section with a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.452.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.453.1"> property called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.454.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.455.1"> and replace the alert text with the new property:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.456.1">&lt;div </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.457.1">class</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.458.1">=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.459.1">"alert alert-primary"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.460.1"> role=</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.461.1">"alert"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.462.1">&gt;
    @ChildContent
&lt;/div&gt;
@code{
    [</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.463.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.464.1">]
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.465.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.466.1"> RenderFragment ChildContent { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.467.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.468.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.469.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.470.1">; } =@&lt;b&gt;This </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.471.1">is</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.472.1"> a </span><span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.473.1">default</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.474.1">value</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.475.1">&lt;/b&gt;;
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.476.1">Now we have a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.477.1">RenderFragment</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.478.1"> and set a default value, displaying the fragment between </span><a id="_idIndexMarker232" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.479.1">the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.480.1">div</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.481.1"> tags. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.481.2">We also want to add an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.482.1">enum</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.483.1"> for the different ways you can style the alert box.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="5"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.484.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.485.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.486.1"> section, add an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.487.1">enum</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.488.1"> containing the different styles available:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.489.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.490.1">enum</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.491.1"> AlertStyle
{
    Primary,
    Secondary,
    Success,
    Danger,
    Warning,
    Info,
    Light,
    Dark
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.492.1">Add a parameter/property for the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.493.1">enum</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.494.1"> style:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.495.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.496.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.497.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.498.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.499.1"> AlertStyle Style { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.500.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.501.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.502.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.503.1">; }
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.504.1">The final step is to update the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.505.1">class</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.506.1"> attribute for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.507.1">div</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.508.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.508.2">Change the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.509.1">class</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.510.1"> attribute to look like this:
        </span><pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.511.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.512.1">div</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.513.1">class</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.514.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.515.1">"@($"</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.516.1">alert</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.517.1">alert-</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.518.1">{</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.519.1">Style.ToString</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.520.1">()</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.521.1">.ToLower</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.522.1">()}")" </span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.523.1">role</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.524.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.525.1">"alert"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.526.1">&gt;</span></span>
</code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.527.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.528.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.529.1"> project, in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.530.1">Pages</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.531.1"> folder, create a new razor component and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.532.1">AlertTest.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.533.1">.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.534.1">Replace the code with the following snippet:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.535.1">@page "/alerttest"
@using SharedComponents.ReusableComponents
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.536.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.537.1">Alert</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.538.1">Style</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.539.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.540.1">"Alert.AlertStyle.Danger"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.541.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.542.1">
    This is a test
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.543.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.544.1">Alert</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.545.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.546.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.547.1">Alert</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.548.1">Style</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.549.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.550.1">"Alert.AlertStyle.Success"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.551.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.552.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.553.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.554.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.555.1">
        This is another test
    </span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.556.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.557.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.558.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.559.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.560.1">Alert</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.561.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.562.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.563.1">Alert</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.564.1">Style</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.565.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.566.1">"Alert.AlertStyle.Success"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.567.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.568.1">The page shows three alert components:</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.569.1">The first one has the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.570.1">Danger</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.571.1"> style, and we are not specifying what property to set for the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.572.1">This is a test</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.573.1"> text, but by convention, it will use the property called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.574.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.575.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.576.1">In the </span><a id="_idIndexMarker233" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.577.1">second one, we have specified the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.578.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.579.1"> property. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.579.2">If you use more render fragments in your component, you must set them like this, with full names.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.580.1">In the last one, we didn’t specify anything that will give the property the default render fragment we specified in the component.</span></p></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="9"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.581.1">Run the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.582.1">BlazorServer</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.583.1"> project and navigate to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.584.1">/AlertTest</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.585.1"> to see the test page:</span></li>
</ol>
<figure class="mediaobject"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.586.1"><img alt="A screenshot of a computer  Description automatically generated" src="../Images/B21849_05_02.png" class="calibre5"/></span></figure>
<p class="packt_figref"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.587.1">Figure 5.2: Screenshot of the test page</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.588.1">We have </span><a id="_idIndexMarker234" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.589.1">finished our first reusable component!</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.590.1">Creating reusable components is how I prefer to make my Blazor sites because I don’t have to write the same code twice. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.590.2">This becomes even more apparent if you are working in a larger team. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.590.3">It makes it easier for all developers to produce the same code and end result, and with that, they can get a higher code quality and require fewer tests.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.1">When we upgraded to the latest Bootstrap version, a few CSS classes were deprecated and replaced by others. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.2">Thankfully, we followed this approach by making reusable components, so we only had to change a handful of places. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.3">There were a couple of places where we still had some old code base (not using components), and it became very apparent that creating components was worth the effort.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.592.1">Blazor has a bunch of built-in components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.592.2">In the next section, we will dig deeper into what they are and how to use them.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.593.1">When it comes to reusable components, we really invest some time in that. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.593.2">If you find yourself writing the same code twice, you might want to add that into a component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.593.3">At my old job, we started using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.594.1">Radzen</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.595.1">, an open-source component library (among other things). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.595.2">At my current job, we use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.596.1">MudBlazor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.597.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.597.2">We use </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.598.1">Progress Telerik</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.1"> on our stream. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.2">Using third-party components can speed up the development, but often, these components are built for many different users. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.3">They can do a lot of things. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.4">This means that every single developer on our team now has access to all that power. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.5">With great power comes great responsibility.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.1">In one of my presentations, I had that quote with a picture of Batman and text saying “Superman.” </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.2">I didn’t get a single reaction. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.3">I have never failed with a joke like that. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.4">But joking aside, this means that all developers need to keep in mind how to use the components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.5">Otherwise, the UI might look different depending on which developer uses the components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.6">I put a lot of time into designing reusable components that help the team to be productive. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.7">Hiding the parameters we don’t use, giving the components reasonable default values. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.8">So, even if you use third-party components, try to figure out what you are using and perhaps create an abstraction on top of the third-party components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.9">If you don’t know, the quote is from Spiderman, or Uncle Ben, to be precise. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.10">But it did remind me of one of my favorite puns. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.11">Do you know why Spiderman always has such witty comebacks? </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.12">Because with great power comes great response-ability. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.13">I will show myself out.</span></p>
<h1 class="heading" id="_idParaDest-113"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.601.1">Exploring the new built-in components</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.602.1">When Blazor first came out, there</span><a id="_idIndexMarker235" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.603.1"> were a couple of things that were hard to do, and, in some cases, we needed to involve JavaScript to solve the challenge. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.603.2">In this section, we will look at some of the new components we got in .NET 5, all the way to .NET 8.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.604.1">We will take a look at the following new components or functions:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.605.1">Setting the focus of the UI</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.606.1">Influencing the HTML head</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.607.1">Component virtualization</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.608.1">Error boundaries</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.609.1">Sections</span></li>
</ul>
<h2 class="heading1" id="_idParaDest-114"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.610.1">Setting the focus of the UI</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.611.1">One of my first </span><a id="_idIndexMarker236" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.612.1">Blazor blog posts was about how to set the focus on a</span><a id="_idIndexMarker237" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.613.1"> UI element, but now this is built into the framework. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.613.2">The previous solution involved JavaScript calls to change the focus on a UI element.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.614.1">By using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.615.1">ElementReference</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.616.1">, you can now set the focus on the element.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.617.1">Let’s build a component to test the behavior of this new feature:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.618.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.619.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.620.1"> project, in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.621.1">Pages</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.622.1"> folder, add a new Razor component, and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.623.1">SetFocus.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.624.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.625.1">Open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.626.1">SetFocus.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.627.1"> and add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.628.1">page</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.629.1"> directive:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.630.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.631.1">"/setfocus"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.632.1"> @rendermode InteractiveAuto
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.633.1">Add an element reference:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.634.1">@code {
    ElementReference textInput;
}
</span></code></pre>
<p class="normal1"><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.635.1">ElementReference</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.636.1"> is precisely what it sounds like, a reference to an element. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.636.2">In this case, it is an input textbox.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.637.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.638.1">_Imports</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.639.1"> file, add the following line:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.640.1">@using </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.641.1">static</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.642.1"> Microsoft.AspNetCore.Components.Web.RenderMode
</span></code></pre>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="4"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.643.1">Add the textbox and a button:
        </span><pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.644.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.645.1">input</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.646.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.647.1">ref</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.648.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.649.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.650.1">textInput"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.651.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.652.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.653.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.654.1"> @</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.655.1">onclick</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.656.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.657.1">"() =&gt; textInput.FocusAsync()"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.658.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.659.1">Set focus</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.660.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.661.1">button</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.662.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.663.1">Using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.664.1">@ref</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.665.1">, we specify</span><a id="_idIndexMarker238" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.666.1"> a reference to any type</span><a id="_idIndexMarker239" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.667.1"> of component or tag that we can use to access the input box. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.667.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.668.1">button onclick</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.669.1"> method will execute the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.670.1">FocusAsync()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.671.1"> method and set the focus on the textbox.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="5"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.672.1">Press </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.673.1">F5</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.674.1"> to run the project and then navigate to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.675.1">/setfocus</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.676.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.677.1">Press the </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.678.1">Set focus</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.679.1"> button and notice how the textbox gets its focus.</span></li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.680.1">It could seem like a silly example since this only sets the focus, but it is a handy feature, and the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.681.1">autofocus</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.682.1"> HTML attribute won’t work for Blazor. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.682.2">It would make more sense to call </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.683.1">FocusAsync</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.684.1"> in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.685.1">OnAfterRender</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.686.1"> method to get the focus change when we load the page, but that wouldn’t make it as cool a demo.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.687.1">In my blog post, I had another approach. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.687.2">My goal was to set the focus of an element without having to use code. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.687.3">In the upcoming chapter, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.688.1">Chapter 6</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.689.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.690.1">Building Forms with Validation</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.691.1">, we will implement the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.692.1">autofocus</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.693.1"> feature from my blog post but use the new .NET features instead.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.694.1">The release of .NET 5 solves many things we previously had to write with JavaScript; setting the focus is one example. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.694.2">In .NET 6, we have a way to influence the HTML head.</span></p>
<h2 class="heading1" id="_idParaDest-115"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.695.1">Influencing the HTML head</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.696.1">Sometimes, we want </span><a id="_idIndexMarker240" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.697.1">to set our page’s title or change the social network</span><a id="_idIndexMarker241" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.698.1"> meta tags. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.698.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.699.1">head</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.700.1"> tag is located in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.701.1">App</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.702.1"> component, and that part of the page isn’t reloaded/rerendered (only the components within the routes component are rerendered). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.702.2">In previous versions of Blazor, you had to write code for that yourself using JavaScript.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.703.1">But .NET has a new component called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.704.1">HeadOutlet</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.705.1"> that can solve that.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.706.1">To use these components, we will create a page to view one of our blog posts. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.706.2">And we will use many of the techniques we have learned:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.707.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.708.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.709.1"> project, open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.710.1">Home.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.711.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.712.1">Change the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.713.1">foreach</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.714.1"> loop to look like this:
        </span><pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.715.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.716.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.717.1">&gt;&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.718.1">a</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.719.1">href</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.720.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.721.1">"/Post/@p.Id"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.722.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.723.1">@p.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.724.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.725.1">a</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.726.1">&gt;&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.727.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.728.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.729.1">We added a link to the title to look at one blog post. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.729.2">Notice how we can use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.730.1">@</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.731.1"> symbol inside the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.732.1">href</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.733.1"> attribute to get the ID of the post.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.734.1">In the Pages folder, add a Razor component, and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.735.1">Post.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.736.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.737.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.738.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.739.1"> section, add a parameter that will hold the ID of the post:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.740.1">[</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.741.1">Parameter</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.742.1">]
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.743.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.744.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.745.1"> BlogPostId { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.746.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.747.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.748.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.749.1">; }
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.750.1">This will hold the ID of the blog post that comes from the URL.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="5"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.751.1">Add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.752.1">page</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.753.1"> directive to get the set, the URL, and the ID:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.754.1">@page </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.755.1">"/post/{BlogPostId}"</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.756.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.757.1">page</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.758.1"> directive will set the URL for our blog post to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.759.1">/post/</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.760.1">, followed by the ID of the post. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.760.2">We don’t have to add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.761.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.762.1"> statement to all our components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.762.2">Instead, open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.763.1">_Imports.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.764.1"> and add the following namespaces:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.765.1">@using Data.Models.Interfaces
@using Data.Models
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.766.1">This will ensure that all our components will have these namespaces by default.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="6"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.767.1">Open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.768.1">Post.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.769.1"> again and, just beneath the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.770.1">page</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.771.1"> directive, inject the API (the namespace is now supplied from </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.772.1">_Imports.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.773.1">):
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.774.1">@inject IBlogApi _api
@inject NavigationManager _navman
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.775.1">Our API will now be injected into the component, and we can retrieve our blog post. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.775.2">We also have access to a navigation manager.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="7"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.776.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.777.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.778.1"> section, add a property for our blog post:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.779.1">public</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.780.1"> BlogPost? </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.780.2">BlogPost { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.781.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.782.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.783.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.784.1">; }
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.785.1">This will contain the blog post we want to show on the page.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="8"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.786.1">To load the blog </span><a id="_idIndexMarker242" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.787.1">post, add the following </span><a id="_idIndexMarker243" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.788.1">code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.789.1">protected</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.790.1">async</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.791.1">override</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.792.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.793.1">OnParametersSetAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.794.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.795.1">
{
    BlogPost=</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.796.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.797.1"> _api.GetBlogPostAsync(BlogPostId);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.798.1">await</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.799.1">base</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.800.1">.OnParametersSetAsync();
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.801.1">In this case, we are using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.802.1">OnParametersSetAsync()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.803.1"> method. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.803.2">This is to make sure that the parameter is set when we get data from the database and that the content updates when the parameter changes.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="9"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.804.1">We must also show the post and add the necessary </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.805.1">meta</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.806.1"> tags. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.806.2">To do that, add the following code just above the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.807.1">code</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.808.1"> section:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.809.1">@if (BlogPost != null)
{
    </span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.810.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.811.1">PageTitle</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.812.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.813.1">@BlogPost.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.814.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.815.1">PageTitle</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.816.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.817.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.818.1">HeadContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.819.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.820.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.821.1">meta</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.822.1">property</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.823.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.824.1">"og:title"</span></span>
<span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.825.1">content</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.826.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.827.1">"@BlogPost.Title"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.828.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.829.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.830.1">meta</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.831.1">property</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.832.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.833.1">"og:description"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.834.1">content</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.835.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.836.1">"@(new</span></span>
<span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.837.1">      string(BlogPost.Text.Take(100).ToArray()))"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.838.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.839.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.840.1">meta</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.841.1">property</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.842.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.843.1">"og:image"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.844.1">content</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.845.1">=</span></span>
<span> </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.846.1">"@($"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.847.1">{</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.848.1">_navman.BaseUri</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.849.1">}/</span></span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.850.1">pathtoanimage.png</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.851.1">")" /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.852.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.853.1">meta</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.854.1">property</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.855.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.856.1">"og:url"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.857.1">content</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.858.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.859.1">"@_navman.Uri"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.860.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.861.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.862.1">meta</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.863.1">name</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.864.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.865.1">"twitter:card"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.866.1">content</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.867.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.868.1">"@(new string(BlogPost.Text.Take(100).ToArray()))"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.869.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.870.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.871.1">HeadContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.872.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.873.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.874.1">h2</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.875.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.876.1">@BlogPost.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.877.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.878.1">h2</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.879.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.880.1">
    @((MarkupString)BlogPost.Text)
    
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.881.1">When the</span><a id="_idIndexMarker244" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.882.1"> page is first loaded, the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.883.1">BlogPost</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.884.1"> parameter can be null, so we first need to check whether we should show the content at all.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.885.1">By adding the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.886.1">Title</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.887.1"> component, Blazor will set the title of our site to, in this instance, the title of our blog post.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.888.1">According to the</span><a id="_idIndexMarker245" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.889.1"> information I </span><a id="_idIndexMarker246" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.890.1">gathered on </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.891.1">Search Engine Optimization</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.892.1"> (</span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.893.1">SEO</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.894.1">), the meta tags we have added are the bare minimum to use with Facebook and X (formerly known as Twitter). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.894.2">We don’t have an image for each blog post, but we can have one that is site-wide (for all blog posts) if we would like. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.894.3">Just change </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.895.1">Pathtoanimage.png</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.896.1"> to the name of the image and put the image in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.897.1">wwwroot</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.898.1"> folder.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.899.1">If the blog post is loaded, then show an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.900.1">H3</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.901.1"> tag with the title and the text beneath that. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.901.2">You might remember </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.902.1">MarkupString</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.903.1"> from </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.904.1">Chapter 4</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.905.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.906.1">Understanding Basic Blazor Components</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.907.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.907.2">This will output the string from our blog post without changing the HTML (not escaping the HTML).</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="10"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.908.1">Run the project by pressing </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.909.1">F5</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.910.1"> and navigate to a blog post to see the title change:</span></li>
</ol>
<figure class="mediaobject"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.911.1"><img alt="A screenshot of a computer  Description automatically generated" src="../Images/B21849_05_03.png" class="calibre5"/></span></figure>
<p class="packt_figref"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.912.1">Figure 5.3: Blog post screenshot</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.913.1">Our blog is </span><a id="_idIndexMarker247" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.914.1">starting to take form. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.914.2">We have a list of blog posts, and </span><a id="_idIndexMarker248" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.915.1">can view a single post; we are far from done but we’re well on our way.</span></p>
<h2 class="heading1" id="_idParaDest-116"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.916.1">Component virtualization</span></h2>
<p class="normal"><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.917.1">Virtualize</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.918.1"> is a </span><a id="_idIndexMarker249" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.919.1">component in Blazor that will make sure that it only renders the </span><a id="_idIndexMarker250" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.920.1">components or rows that can fit the screen. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.920.2">If you have a large list of items, rendering all of them will have a big impact on memory.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.921.1">Many third-party component vendors offer grid components with the same virtualization function. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.921.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.922.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.923.1"> component was, in my opinion, the most exciting thing in the .NET 5 release.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.924.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.925.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.926.1"> component will calculate how many items can fit on the screen (based on the size of the window and the height of an item). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.926.2">Blazor will add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.927.1">div</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.928.1"> tag before and after the content list if you scroll the page, ensuring that the scrollbar is showing the correct position and scale (even though there are no items rendered).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.929.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.930.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.931.1"> component works just like a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.932.1">foreach</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.933.1"> loop.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.934.1">The following is the code we currently have in our </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.935.1">Home.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.936.1"> file:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.937.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.938.1">ul</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.939.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.940.1">
    @foreach (var p in posts)
    {
        </span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.941.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.942.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.943.1">&gt;&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.944.1">a</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.945.1">href</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.946.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.947.1">"/Post/@p.Id"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.948.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.949.1">@p.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.950.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.951.1">a</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.952.1">&gt;&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.953.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.954.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.955.1">
    }
</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.956.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.957.1">ul</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.958.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.959.1">Right now, it will show all our blog posts in our database in a long list. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.959.2">Granted, we only have a few right now, but we might have many posts one day.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.960.1">We can change the code (don’t change the code just yet) to use the new </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.961.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.962.1"> component by changing it to the following:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.963.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.964.1">Virtualize</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.965.1">Items</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.966.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.967.1">"posts"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.968.1">Context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.969.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.970.1">"p"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.971.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.972.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.973.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.974.1">&gt;&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.975.1">a</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.976.1">href</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.977.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.978.1">"/Post/@p.Id"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.979.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.980.1">@p.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.981.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.982.1">a</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.983.1">&gt;&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.984.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.985.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.986.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.987.1">Virtualize</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.988.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.989.1">Instead of the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.990.1">foreach</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.991.1"> loop, we use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.992.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.993.1"> component and add a render fragment that shows how each item should be rendered. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.993.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.994.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.995.1"> component uses </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.996.1">RenderFragment&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.997.1">, which, by default, will send in an item of type </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.998.1">T</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.999.1"> to the render fragment. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.999.2">In the case of the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1000.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1001.1"> component, the object will be one blog post (since items are </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1002.1">List&lt;T&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1003.1"> of blog posts). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1003.2">We access each post with the variable named </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1004.1">context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1005.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1005.2">However, we can use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1006.1">Context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1007.1"> property on the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1008.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1009.1"> component to specify another name, so instead of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1010.1">context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1011.1">, we are now using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1012.1">p</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1013.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1014.1">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1015.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1016.1"> component is</span><a id="_idIndexMarker251" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1017.1"> even more powerful than this, as we will</span><a id="_idIndexMarker252" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1018.1"> see in the next feature that we implement:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1019.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1020.1">SharedComponents</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1021.1"> project, open </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1022.1">Home.razor</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1023.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1024.1">Delete the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1025.1">OnInitializedAsync</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1026.1"> method and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1027.1">protected List&lt;BlogPost&gt; posts = new List&lt;BlogPost&gt;()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1028.1">; we don’t need them anymore.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1029.1">Change the loading of the post to </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1030.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1031.1">:
        </span><pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1032.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1033.1">ul</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1034.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1035.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1036.1">Virtualize</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1037.1">ItemsProvider</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1038.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1039.1">"LoadPosts"</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1040.1">Context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1041.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1042.1">"p"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1043.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1044.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1045.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1046.1">&gt;&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1047.1">a</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1048.1">href</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1049.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1050.1">"/Post/@p.Id"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1051.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1052.1">@p.Title</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1053.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1054.1">a</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1055.1">&gt;&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1056.1">li</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1057.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1058.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1059.1">Virtualize</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1060.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1061.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1062.1">ul</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1063.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1064.1">In this case, we are using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1065.1">ItemsProvider</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1066.1"> delegate, which will take care of getting posts from our API.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1067.1">We pass in a method called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1068.1">LoadPosts</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1069.1">, which we also need to add to the file.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="4"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1070.1">Now, let’s add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1071.1">LoadPosts</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1072.1"> method by adding the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1073.1">public</span></span> <span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1074.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1075.1"> totalBlogposts { </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1076.1">get</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1077.1">; </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1078.1">set</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1079.1">; }
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1080.1">private</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1081.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1082.1"> ValueTask&lt;ItemsProviderResult&lt;BlogPost&gt;&gt; LoadPosts(ItemsProviderRequest request)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1083.1">if</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1084.1"> (totalBlogposts == </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1085.1">0</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1086.1">)
    {
        totalBlogposts = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1087.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1088.1"> _api.GetBlogPostCountAsync();
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1089.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1090.1"> numblogposts = Math.Min(request.Count, totalBlogposts - request.StartIndex);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1091.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1092.1"> blogposts= </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1093.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1094.1"> _api.GetBlogPostsAsync(numblogposts,request.StartIndex);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1095.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1096.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1097.1"> ItemsProviderResult&lt;BlogPost&gt;(blogposts, totalBlogposts);
}
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1098.1">We will add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1099.1">totalBlogposts</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1100.1"> property </span><a id="_idIndexMarker253" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1101.1">where we store how many posts we currently have</span><a id="_idIndexMarker254" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1102.1"> in our database. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1102.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1103.1">LoadPost</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1104.1"> method returns </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1105.1">ValueTask</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1106.1"> with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1107.1">ItemsProviderResult&lt;Blogpost&gt;</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1108.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1108.2">The method has </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1109.1">ItemsProviderRequest</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1110.1"> as a parameter, which contains the number of posts the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1111.1">Virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1112.1"> component wants and how many it wants to skip.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1113.1">If we don’t know how many total posts we have, we need to retrieve that information from our API by calling the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1114.1">GetBlogPostCountAsync</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1115.1"> method. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1115.2">Then, we need to figure out how many posts we should get; either we get as many posts as we need, or we get all the remaining posts (whatever value is the smallest).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1116.1">Then, we call our API to get the actual posts by calling </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1117.1">GetBlogPostsAsync</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1118.1"> and returning </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1119.1">ItemsProviderResult</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1120.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1121.1">We have implemented a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1122.1">Virtualize</span></code><strong class="screentext"> </strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1123.1">component that will load and render only the number of blog posts needed to fill the screen. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1123.2">But this is an interactive component that needs interactivity to work. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1123.3">If you try to run the project now, you will notice that the screen is blank. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1123.4">If we add </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1124.1">@rendermode InteractiveServer</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1125.1"> to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1126.1">Home</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1127.1"> component, it starts to work again. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1127.2">Right now, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1128.1">InteractiveServer</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1129.1"> is the only thing we can use. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1129.2">This is the only scenario we have everything set up for when it comes to DI.</span></p>
<h2 class="heading1" id="_idParaDest-117"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1130.1">Error boundaries</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1131.1">In .NET 6, we have a very handy component to handle errors called </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1132.1">ErrorBoundary</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1133.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1134.1">We can surround the component </span><a id="_idIndexMarker255" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1135.1">with an </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1136.1">ErrorBoundary</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1137.1"> component; if an </span><a id="_idIndexMarker256" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1138.1">error occurs, it will show an error message instead of the whole page failing:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1139.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1140.1">ErrorBoundary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1141.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1142.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1143.1">ComponentWithError</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1144.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1145.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1146.1">ErrorBoundary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1147.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1148.1">This component takes two render fragments. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1148.2">By specifying it as in the previous example, we only set the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1149.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1150.1"> render fragment. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1150.2">This is the default.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1151.1">We can also supply a custom error message like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1152.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1153.1">ErrorBoundary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1154.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1155.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1156.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1157.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1158.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1159.1">ComponentWithError</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1160.1"> /&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1161.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1162.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1163.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1164.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1165.1">ErrorContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1166.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1167.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1168.1">h1</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1169.1">style</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1170.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1171.1">"color:</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1172.1">red</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1173.1">;"&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1174.1">Oops… something broke</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1175.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1176.1">h1</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1177.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1178.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1179.1">ErrorContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1180.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1181.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1182.1">ErrorBoundary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1183.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1184.1">In this sample, we specify </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1185.1">ChildContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1186.1">, which makes it possible for us to specify more than one property, as is the case with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1187.1">ErrorContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1188.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1188.2">This is a great component to extend and create your own functionality. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1188.3">You can get access to the exception by using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1189.1">context</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1190.1"> parameter (as we did with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1191.1">virtualize</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1192.1">):</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1193.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1194.1">ErrorBoundary</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1195.1">Context</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1196.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1197.1">"ex"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1198.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1199.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1200.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1201.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1202.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1203.1">p</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1204.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1205.1">@(1/zero)</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1206.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1207.1">p</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1208.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1209.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1210.1">ChildContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1211.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1212.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1213.1">ErrorContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1214.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1215.1">
       An error occurred
       @ex.Message
    </span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1216.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1217.1">ErrorContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1218.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1219.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1220.1">ErrorBoundary</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1221.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1222.1">
@code {
    int zero = 0;
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1223.1">This is a great way to handle errors in the UI.</span></p>
<h2 class="heading1" id="_idParaDest-118"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1224.1">Sections</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1225.1">.NET 8 gives us the ability to add sections. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1225.2">You might remember a similar feature of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1226.1">WebForms</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1227.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1228.1">We can use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1229.1">SectionOutlet</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1230.1"> component </span><a id="_idIndexMarker257" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1231.1">to define an area in a layout component where </span><a id="_idIndexMarker258" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1232.1">we want to insert content. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1232.2">Then, inside our components, we can add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1233.1">SectionContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1234.1"> where we add the content we want to appear in the outlet.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1235.1">If we have more than one </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1236.1">SectionContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1237.1"> referencing the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1238.1">SectionOutlet</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1239.1">, it will render the latest </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1240.1">SectionContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1241.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1241.2">We can refer to a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1242.1">SectionOutlet</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1243.1"> by using a section name or a section ID. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1243.2">A section name is simply a string that we can use. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1243.3">The ID is an object, so we can get a nicer syntax to keep track of our sections.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1244.1">We can add a section to the layout file and add content to that section from our components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1244.2">It’s a layout thing. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1244.3">Let’s say we want to add contextual menus. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1244.4">For example, that way, we could change a menu that is in a completely different component.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1245.1">Let’s look at some code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1246.1">First, we might need to add this namespace:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1247.1">Microsoft.AspNetCore.Components.Sections;
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1248.1">Preferably in the _imports.razor file (since this is one of the build-in components.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1249.1">In a layout component, we add an outlet like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1250.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1251.1">SectionOutlet</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1252.1">SectionName</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1253.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1254.1">"top-header"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1255.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1256.1">Then, in our component, we can add a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1257.1">SectionContent</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1258.1"> like this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1259.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1260.1">SectionContent</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1261.1">SectionName</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1262.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1263.1">"top-header"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1264.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1265.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1266.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1267.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1268.1">Test</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1269.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1270.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1271.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1272.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1273.1">SectionContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1274.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1275.1">If we instead want to use the section ID, we can do it like this: In the layout file, let’s assume it is called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1276.1">MainLayout</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1277.1">.</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1278.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1279.1">SectionOutlet</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1280.1">SectionId</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1281.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1282.1">"MainLayout.TopHeader"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1283.1">/&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1284.1">In the code section of </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1285.1">MainLayout</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1286.1">:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1287.1">@code
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1288.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1289.1">static</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1290.1"> SectionOutlet TopHeader = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1291.1">new</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1292.1">()
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1293.1">Then, inside the </span><a id="_idIndexMarker259" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1294.1">component, we</span><a id="_idIndexMarker260" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1295.1"> change it to this:</span></p>
<pre class="programlisting"><code class="hljs-code"><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1296.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1297.1">SectionContent</span></span><span> </span><span class="hljs-number"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1298.1">SectionId</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1299.1">=</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1300.1">"Layout.MainLayout.TopHeader"</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1301.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1302.1">&lt;</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1303.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1304.1">&gt;</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1305.1">Using SectionId</span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1306.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1307.1">b</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1308.1">&gt;</span></span>
<span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1309.1">&lt;/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1310.1">SectionContent</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1311.1">&gt;</span></span>
</code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1312.1">This is a great way to change the layout files. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1312.2">By doing this, we can create more advanced layouts that work with every page/component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1312.3">We can move more of the layout to the layout file instead of putting it in each component. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1312.4">I love this feature. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1312.5">This will clean up so much code.</span></p>
<h1 class="heading" id="_idParaDest-119"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1313.1">Summary</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1314.1">In this chapter, we looked at more advanced scenarios for building components. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1314.2">Building components is what Blazor is all about. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1314.3">Components also make it easy to make changes along the way because there is only one point where you must implement the change. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1314.4">We also implemented our first reusable component, which will help maintain the same standard across the team and reduce duplicated code.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1315.1">We also used some Blazor features to load and display data.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1316.1">In the next chapter, we will look at forms and validation to start building the administration part of our blog.</span></p>
<h1 class="heading" id="_idParaDest-120"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1317.1">Join our community on Discord </span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1318.1">Join our community’s Discord space for discussions with the author and other readers: </span></p>
<p class="normal1"><a href="https://packt.link/WebDevBlazor3e" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1319.1">https://packt.link/WebDevBlazor3e</span></span></a></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1320.1"><img alt="" role="presentation" src="../Images/QR_Code2668029180838459906.png" class="calibre5"/></span></p>
</div>
</body>
</html>
