<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" lang="en-US" xml:lang="en-US">
  <head>
    <title>Chapter_07</title>
    <!-- kobo-style -->
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" type="text/css" href="../../stylesheet.css"/>
<link rel="stylesheet" type="text/css" href="../../page_styles.css"/>
</head>
  <body id="Chapter_07" class="calibre">
<div class="calibre1" id="_idContainer047">
<h1 class="chapternumber"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.1.1">7</span></h1>
<h1 class="chaptertitle" id="_idParaDest-150"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.2.1">Creating an API</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.1">When running Blazor using WebAssembly (InteractiveWebAssembly or InteractiveAuto) we need to be able to retrieve data and also change our data. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.2">For that to work, we need an API to access the data. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.3.3">In this chapter, we will create a web API using </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.4.1">Minimal API</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.5.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.6.1">When using Blazor Server, the API will be secured by the page (if we add an </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.7.1">Authorize</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.8.1"> attribute), so we get that for free. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.8.2">But with WebAssembly, everything will be executed in the browser, so we need something that WebAssembly can communicate with to update the data on the server.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.9.1">To do this, we will need to cover the following topics:</span></p>
<ul class="calibre4">
<li class="bulletlist"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.10.1">Creating the service</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.11.1">Creating the client</span></li>
</ul>
<h1 class="heading" id="_idParaDest-151"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.12.1">Technical requirements</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.13.1">Make sure you have read the previous chapters or use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.14.1">Chapter06</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.15.1"> folder as a starting point.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.16.1">You can find the source code for this chapter’s end result at </span><a href="https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter07" class="calibre3"><span class="calibre3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.17.1">https://github.com/PacktPublishing/Web-Development-with-Blazor-Third-Edition/tree/main/Chapter07</span></span></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.18.1">.</span></p>
<h1 class="heading" id="_idParaDest-152"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.19.1">Creating the service</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.20.1">There are </span><a id="_idIndexMarker340" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.21.1">many ways to create a service, such as via REST.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.22.1">For those who haven’t worked with</span><a id="_idIndexMarker341" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.23.1"> REST before, </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.24.1">REST</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.25.1"> stands for </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.26.1">representational state transfer</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.27.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.27.2">Simply put, it is a way for machines to talk to other devices using HTTP.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.1">With REST, we use different HTTP verbs for different operations. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.28.2">They could look something like this:</span></p>
<table class="table-container" id="table001-2">
<tbody class="calibre14">
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><strong class="keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.29.1">URI</span></strong></p>
</td>
<td class="table-cell">
<p class="normal1"><strong class="keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.30.1">Verb</span></strong></p>
</td>
<td class="table-cell">
<p class="normal1"><strong class="keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.31.1">Action</span></strong></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.32.1">/BlogPosts</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.33.1">Get</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.34.1">Gets a list of blog posts</span></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.35.1">/BlogPosts</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.36.1">Post</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.37.1">Creates a new blog post</span></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.38.1">/BlogPosts/{id}</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.39.1">Get</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.40.1">Gets a blog post with a specific ID</span></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.41.1">/BlogPosts/{id}</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.42.1">Put</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.43.1">Replaces a blog post</span></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.44.1">/BlogPosts/{id}</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.45.1">Patch</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.46.1">Updates a blog post</span></p>
</td>
</tr>
<tr class="calibre15">
<td class="table-cell">
<p class="normal1"><code class="inlinecode1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.47.1">/BlogPosts/{id}</span></code></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.48.1">Delete</span></p>
</td>
<td class="table-cell">
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan2" id="kobo.49.1">Deletes a blog post</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.50.1">Table 7.1: Rest calls</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.51.1">We will implement </span><a id="_idIndexMarker342" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.52.1">an API for </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.53.1">Tags</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.54.1">, </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.55.1">Categories</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.56.1">, and </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.57.1">blog posts</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.58.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.59.1">Since the API takes care of whether the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.60.1">Post</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.61.1"> should be created, we’ll cheat and only implement </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.62.1">Put</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.63.1"> (replace) because we don’t know whether we are creating or updating the data.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.64.1">We will implement the API in the </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.65.1">BlazorWebApp</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.66.1"> project. </span></p>
<h2 class="heading1" id="_idParaDest-153"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.67.1">Learning about Minimal APIs</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.68.1">Before </span><a id="_idIndexMarker343" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.69.1">we jump into implementing the Minimal API, let’s take a moment to learn about it. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.69.2">Back in November 2019, one of the members of the </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.70.1">Distributed Application Runtime </span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.71.1">(</span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.72.1">Dapr</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.73.1">) team wrote a couple of tutorials on how to build a distributed calculator using different languages.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.74.1">They had</span><a id="_idIndexMarker344" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.1"> examples using Go, Python, Node.js, and .NET Core. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.75.2">The code showed how much harder it was to write a distributed calculator in C# than in other languages.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.76.1">Microsoft asked various non-.NET developers what their perception was of C#. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.76.2">Their response wasn’t great. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.76.3">Then, Microsoft asked them to complete a tutorial using an early version of Minimal APIs.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.77.1">After the tutorial, they were asked about their perception, and their response had shifted and was now more positive; it felt like home.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.78.1">The goal of</span><a id="_idIndexMarker345" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.79.1"> Minimal APIs was to reduce complexity and ceremony and embrace minimalism. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.79.2">I thought that “minimal” meant that I wouldn’t be able to do everything, but digging deeper into the code, I soon realized that was not the case.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.80.1">From my point of view, Minimal APIs are a much nicer way to code APIs. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.80.2">The idea is that if we need to, we can grow our API, and as soon as we feel like it, we can move our code into a controller to get more structure. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.80.3">At my workplace, we switched to Minimal APIs because we think the syntax is much nicer.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.81.1">A very simple sample of adding a Minimal API would be just adding this line in </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.82.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.83.1">:</span></p>
<pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.84.1">app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.85.1">"/api/helloworld"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.86.1">, () =&gt; </span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.87.1">"Hello world!"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.88.1">);
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.89.1">We say that if we navigate to a URL without specifying any route, just </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.90.1">"/"</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.91.1">, we return a string with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.92.1">"Hello World"</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.93.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.94.1">This is, of course, the simplest example possible, but it is possible to implement more complex things as well, as we will see in the next section.</span></p>
<h2 class="heading1" id="_idParaDest-154"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.95.1">Adding the API controllers</span></h2>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.96.1">We have</span><a id="_idIndexMarker346" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.97.1"> three data models: blog posts, Tags, and Categories.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.98.1">Let’s create three different files, one for each data model, to demonstrate that there are friendly ways to add more complex APIs using Minimal APIs. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.98.2">For a small project, it would probably make more sense to add everything in </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.99.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.100.1">.</span></p>
<h3 class="heading2" id="_idParaDest-155"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.101.1">Adding APIs for handling blog posts</span></h3>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.102.1">Let’s start </span><a id="_idIndexMarker347" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.103.1">by adding the API methods for handling </span><a id="_idIndexMarker348" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.104.1">blog posts.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.105.1">Execute the following steps to create the API:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.106.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.107.1">BlazorWebApp</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.108.1"> project, add a new folder called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.109.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.110.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.111.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.112.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.113.1"> folder, create a class called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.114.1">BlogPostEndpoints.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.115.2">The idea is to create an extension method we can use later in </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.116.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.117.1">.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.118.1">Add these </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.119.1">using</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.120.1"> statements at the top of the file:</span></p>
<pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.121.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.122.1"> Data.Models;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.123.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.124.1"> Data.Models.Interfaces;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.125.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.126.1"> Microsoft.AspNetCore.Authorization;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.127.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.128.1"> Microsoft.AspNetCore.Mvc;
</span></code></pre></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="3"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.129.1">Replace</span><a id="_idIndexMarker349" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.130.1"> the class with the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.131.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.132.1">static</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.133.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.134.1">BlogPostEndpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.135.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.136.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.137.1">static</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.138.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.139.1">MapBlogPostApi</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.140.1">(</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.141.1">this</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.142.1"> WebApplication app</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.143.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.144.1">
    {
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.145.1">"/api/BlogPosts"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.146.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.147.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.148.1"> (IBlogApi api, [FromQuery] </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.149.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.150.1"> numberofposts, [FromQuery] </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.151.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.152.1"> startindex) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.153.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.154.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.155.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.156.1"> api.GetBlogPostsAsync(numberofposts, startindex));
        });
       }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.157.1">As we </span><a id="_idIndexMarker350" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.158.1">are creating an extension method, we must ensure the class is static. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.158.2">The </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.159.1">MapBlogPostApi</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.160.1"> method uses the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.161.1">this</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.162.1"> keyword, which makes the method available on any </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.163.1">WebApplication</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.164.1"> class.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.165.1">We set up the Minimal API by using </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.166.1">MapGet</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.167.1"> and a path, which means that the method will run if we access that path with the correct parameters using a </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.168.1">Get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.169.1"> verb.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.1">The method takes a couple of parameters. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.170.2">The first is of the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.171.1">IBlogApi</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.172.1"> type, which will use dependency injection to get an instance of the class we need, in this case, </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.173.1">BlogApiJsonDirectAccess</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.174.1">, which will access the JSON files we have stored.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.175.1">The other parameters will use the query string (since we are using the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.176.1">query</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.177.1"> attribute); in most cases, a Minimal API will figure these things out, but it’s never wrong to nudge it in the right direction.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.178.1">We have created a method that returns the data directly from the database (the same API the Blazor Server project is using).</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.179.1">We also need to make sure to call it from </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.180.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.181.1">.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="4"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.182.1">In </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.183.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.184.1">, add the following namespace:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.185.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.186.1"> BlazorWebApp.Endpoints;
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.187.1">Also, add</span><a id="_idIndexMarker351" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.188.1"> the following code just above </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.189.1">app.Run();</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.190.1">:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.191.1">app.MapBlogPostApi();
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.192.1">It’s time to</span><a id="_idIndexMarker352" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.193.1"> test the API; make sure to start the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.194.1">BlazorWebApp</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.195.1"> project. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.195.2">In .NET 6, the port numbers are random, so replace </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.196.1">{REPLACEWITHYOURPORTNUMBER}</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.197.1"> with the port number for your project.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.198.1">Go to the following URL: </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.199.1">https://localhost:{REPLACEWITHYOURPORTNUMBER}/Api/BlogPosts?numberofposts=10&amp;startindex=0</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.200.1"> (the port number might be something else). </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.200.2">We will get some JSON back with a list of our blog posts.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.201.1">We are off to a good start! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.201.2">Now, we need to implement the rest of the API as well.</span></p></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="7"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.202.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.203.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.204.1">/</span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.205.1">BlogPostEndpoint.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.206.1"> file, in the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.207.1">MapBlogPostApi</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.208.1"> method, let’s add the code to get the blog post count:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.209.1">app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.210.1">"/api/BlogPostCount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.211.1">,
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.212.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.213.1"> (IBlogApi api) =&gt;
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.214.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.215.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.216.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.217.1"> api.GetBlogPostCountAsync());
});
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.218.1">We use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.219.1">Get</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.220.1"> verb but with another route.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="8"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.221.1">We also need to be able to get one blog post. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.221.2">Add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.222.1">app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.223.1">"/api/BlogPosts/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.224.1">,
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.225.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.226.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.227.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.228.1"> id) =&gt;
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.229.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.230.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.231.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.232.1"> api.GetBlogPostAsync(id));
});
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.233.1">In this case, we are using the </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.234.1">Get</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.235.1"> verb but with another URL, containing the ID for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.236.1">Post</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.237.1"> that we want to get.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.238.1">We are</span><a id="_idIndexMarker353" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.239.1"> using a string as an ID and some databases, like RavenDB, for example, use an ID that looks like this: </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.240.1">CollectionName/IdOfThePost</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.241.1">; we also make sure to add </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.242.1">*</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.243.1"> to the parameter. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.243.2">This way, it will use anything that comes after as an ID, otherwise it would interpret the slash as part of the routing and not find the endpoint.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.244.1">Next, we need an API that is protected, typically the one that updates or deletes things.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="9"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.245.1">Let’s add </span><a id="_idIndexMarker354" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.246.1">an API that saves a blog post. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.246.2">Add the following code under the code we just added:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.247.1">app.MapPut(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.248.1">"/api/BlogPosts"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.249.1">,
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.250.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.251.1"> (IBlogApi api, [FromBody] BlogPost item) =&gt;
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.252.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.253.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.254.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.255.1"> api.SaveBlogPostAsync(item));
}).RequireAuthorization();
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.256.1">As I mentioned earlier in this chapter, we will only add one API for creating and updating blog posts, and we will use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.257.1">Put</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.258.1"> verb (replace) to do that. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.258.2">We have added the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.259.1">RequireAuthorization</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.260.1"> method at the end, which will ensure that the user needs to be authenticated to call the method.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="10"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.1">Next up, we add a code for deleting blog posts. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.261.2">To do this, add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.262.1">app.MapDelete(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.263.1">"/api/BlogPosts/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.264.1">,
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.265.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.266.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.267.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.268.1"> id) =&gt;
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.269.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.270.1"> api.DeleteBlogPostAsync(id);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.271.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.272.1"> Results.Ok();
}).RequireAuthorization();
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.273.1">In this case, we use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.274.1">Delete</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.275.1"> verb, and just as with saving, we add the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.276.1">RequireAuthorization</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.277.1"> method at the end.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.278.1">Next, we need to do this for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.279.1">Categories</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.280.1"> and </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.281.1">Tags</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.282.1"> as well.</span></p>
<h3 class="heading2" id="_idParaDest-156"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.283.1">Adding APIs for handling Categories</span></h3>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.284.1">Let’s </span><a id="_idIndexMarker355" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.285.1">start</span><a id="_idIndexMarker356" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.286.1"> with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.287.1">Categories</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.288.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.288.2">Follow these steps:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.289.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.290.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.291.1"> folder, add a new class called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.292.1">CategoryEndpoints.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.293.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.293.2">Replace the code with the following:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.294.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.295.1"> Data.Models;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.296.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.297.1"> Data.Models.Interfaces;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.298.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.299.1"> Microsoft.AspNetCore.Mvc;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.300.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.301.1">BlazorWebApp.Endpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.302.1">;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.303.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.304.1">static</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.305.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.306.1">CategoryEndpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.307.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.308.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.309.1">static</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.310.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.311.1">MapCategoryApi</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.312.1">(</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.313.1">this</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.314.1"> WebApplication app</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.315.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.316.1">
    {
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.317.1">"/api/Categories"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.318.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.319.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.320.1"> (IBlogApi api) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.321.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.322.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.323.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.324.1"> api.GetCategoriesAsync());
        });
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.325.1">"/api/Categories/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.326.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.327.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.328.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.329.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.330.1"> id) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.331.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.332.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.333.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.334.1"> api.GetCategoryAsync(id));
        });
        app.MapPut(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.335.1">"/api/Categories"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.336.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.337.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.338.1"> (IBlogApi api, [FromBody] Category item) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.339.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.340.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.341.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.342.1"> api.SaveCategoryAsync(item));
        }).RequireAuthorization();
        app.MapDelete(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.343.1">"/api/Categories/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.344.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.345.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.346.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.347.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.348.1"> id) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.349.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.350.1"> api.DeleteCategoryAsync(id);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.351.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.352.1"> Results.Ok();
        }).RequireAuthorization();
    }
} 
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.353.1">In </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.354.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.355.1">, add the following code just above </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.356.1">app.Run()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.357.1">:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.358.1">app.MapCategoryApi();
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.359.1">These are </span><a id="_idIndexMarker357" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.360.1">all the</span><a id="_idIndexMarker358" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.361.1"> methods needed to handle </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.362.1">Categories</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.363.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.364.1">Next, let’s do the same thing with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.365.1">Tags</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.366.1">.</span></p>
<h3 class="heading2" id="_idParaDest-157"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.367.1">Adding APIs for handling Tags</span></h3>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.368.1">Let’s do</span><a id="_idIndexMarker359" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.369.1"> the</span><a id="_idIndexMarker360" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.370.1"> same things for Tags by following these steps:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.371.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.372.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.373.1"> folder, add a new class called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.374.1">TagEndpoints.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.375.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.375.2">Add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.376.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.377.1"> Data.Models;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.378.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.379.1"> Data.Models.Interfaces;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.380.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.381.1"> Microsoft.AspNetCore.Mvc;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.382.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.383.1">BlazorWebApp.Endpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.384.1">;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.385.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.386.1">static</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.387.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.388.1">TagEndpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.389.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.390.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.391.1">static</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.392.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.393.1">MapTagApi</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.394.1">(</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.395.1">this</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.396.1"> WebApplication app</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.397.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.398.1">
    {
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.399.1">"/api/Tags"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.400.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.401.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.402.1"> (IBlogApi api) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.403.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.404.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.405.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.406.1"> api.GetTagsAsync());
        });
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.407.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.408.1">/api/Tags/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.409.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.410.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.411.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.412.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.413.1"> id) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.414.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.415.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.416.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.417.1"> api.GetTagAsync(id));
        });
        app.MapPut(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.418.1">"/api/Tags"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.419.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.420.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.421.1"> (IBlogApi api, [FromBody] Tag item) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.422.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.423.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.424.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.425.1"> api.SaveTagAsync(item));
        }).RequireAuthorization();          app.MapDelete(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.426.1">"/api/Tags/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.427.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.428.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.429.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.430.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.431.1"> id) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.432.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.433.1"> api.DeleteTagAsync(id);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.434.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.435.1"> Results.Ok();
        }).RequireAuthorization();
    }
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.436.1">In </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.437.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.438.1">, add the following code just above </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.439.1">app.Run()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.440.1">:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.441.1">app.MapTagApi();
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.1">But wait! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.2">What about comments? </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.442.3">The way we have implemented comments means that the </span><a id="_idIndexMarker361" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.443.1">component </span><a id="_idIndexMarker362" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.444.1">will never run as WebAssembly, so we don’t really need to implement it in the API. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.444.2">But we are not going to leave the comments hanging – let’s implement those as well!</span></p>
<h3 class="heading2" id="_idParaDest-158"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.445.1">Adding APIs for handling comments</span></h3>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.446.1">Let’s do the </span><a id="_idIndexMarker363" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.447.1">same things for comments by following these </span><a id="_idIndexMarker364" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.448.1">steps:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.449.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.450.1">Endpoints</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.451.1"> folder, add a new class called </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.452.1">CommentEndpoints.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.453.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.453.2">Add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.454.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.455.1"> Data.Models;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.456.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.457.1"> Data.Models.Interfaces;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.458.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.459.1"> Microsoft.AspNetCore.Mvc;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.460.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.461.1">BlazorWebApp.Endpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.462.1">;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.463.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.464.1">static</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.465.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.466.1">CommentEndpoints</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.467.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.468.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.469.1">static</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.470.1">void</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.471.1">MapCommentApi</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.472.1">(</span></span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.473.1">this</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.474.1"> WebApplication app</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.475.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.476.1">
    {
        app.MapGet(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.477.1">"/api/Comments/{*blogPostid}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.478.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.479.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.480.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.481.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.482.1"> blogPostid) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.483.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.484.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.485.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.486.1"> api.GetCommentsAsync(blogPostid));
        });
        }).RequireAuthorization();
        app.MapPut(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.487.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.488.1">/api/Comments"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.489.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.490.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.491.1"> (IBlogApi api, [FromBody] Comment item) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.492.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.493.1"> Results.Ok(</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.494.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.495.1"> api.SaveCommentAsync(item));
        }).RequireAuthorization();
        app.MapDelete(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.496.1">"/api/Comments/{*id}"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.497.1">,
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.498.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.499.1"> (IBlogApi api, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.500.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.501.1"> id) =&gt;
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.502.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.503.1"> api.DeleteCommentAsync(id);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.504.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.505.1"> Results.Ok();
    }
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.506.1">In </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.507.1">Program.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.508.1">, add the following code just above </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.509.1">app.Run()</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.510.1">:
        </span><pre class="programlisting"><code class="hljs-code"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.511.1">app.MapCommentApi();
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.512.1">Great! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.512.2">We </span><a id="_idIndexMarker365" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.513.1">have an API! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.513.2">Now, it’s time to create the</span><a id="_idIndexMarker366" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.514.1"> client that will access that API.</span></p>
<h1 class="heading" id="_idParaDest-159"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.515.1">Creating the client</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.516.1">To access</span><a id="_idIndexMarker367" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.517.1"> the API, we need to create a client. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.517.2">There are many ways of doing this, but we will do it in the simplest way possible by writing the code ourselves.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.518.1">The client will implement the same </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.519.1">IBlogApi</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.520.1"> interface. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.520.2">This way, we have the same code regardless of which implementation we are using, and direct JSON access with </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.521.1">BlogApiJsonDirectAccess </span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.522.1">or </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.523.1">BlogApiWebClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.524.1">, which we are going to create next:</span></p>
<ol class="numberedlist">
<li class="bulletlist1" value="1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.525.1">Right-click on the </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.526.1">Dependencies</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.527.1"> node under </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.528.1">BlazorWebApp.Client</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.529.1"> and select </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.530.1">Manage NuGet Packages</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.531.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.532.1">Search for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.533.1">Microsoft.AspNetCore.Components.WebAssembly.Authentication</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.534.1"> and click </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.535.1">Install</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.536.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.537.1">Also, search for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.538.1">Microsoft.Extensions.Http</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.539.1"> and click </span><strong class="screentext"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.540.1">Install</span></strong><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.541.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.542.1">In the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.543.1">BlazorWebApp.Client</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.544.1"> project, in the root of the project, add a new class and name it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.545.1">BlogApiWebClient.cs</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.546.1">.</span></li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.547.1">Open the newly created file and add the following namespaces:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.548.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.549.1"> Data.Models;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.550.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.551.1"> Data.Models.Interfaces;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.552.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.553.1"> Microsoft.AspNetCore.Components.WebAssembly.Authentication;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.554.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.555.1"> System.Net.Http.Json;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.556.1">using</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.557.1"> System.Text.Json;
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.558.1">Add </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.559.1">IBlogApi</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.560.1"> to the class and make it public like this:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.561.1">namespace</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.562.1">BlazorWebApp.Client</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.563.1">;
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.564.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.565.1">class</span></span> <span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.566.1">BlogApiWebClient</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.567.1"> : </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.568.1">IBlogApi</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.569.1">
{
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.570.1">Some API</span><a id="_idIndexMarker368" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.571.1"> calls will be public (do not require authentication), but </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.572.1">HttpClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.573.1"> will be configured to require a token.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.574.1">The handling of tokens is handled automatically by Blazor, so we only need one client, and, in this case, we call it </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.575.1">Api</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.576.1">.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.577.1">To be able to call the API, we need to inject </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.578.1">HttpClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.579.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.579.2">Add the following code to the class:</span></p>
<pre class="programlisting"><code class="hljs-code">    <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.580.1">private</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.581.1">readonly</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.582.1"> IHttpClientFactory _factory;
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.583.1">public</span></span><span> </span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.584.1">BlogApiWebClient</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.585.1">(</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.586.1">IHttpClientFactory factory</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.587.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.588.1">
    {
        _factory = factory;
    }
</span></code></pre></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="8"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.589.1">Now, it’s time to implement calls to the API. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.589.2">Let’s begin with the </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.590.1">Get</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.1"> calls for blog posts. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.591.2">Add the following code:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.592.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.593.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.594.1"> Task&lt;BlogPost?&gt; GetBlogPostAsync(</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.595.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.596.1"> id)
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.597.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.598.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.599.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.600.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.601.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.602.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.603.1"> httpclient.GetFromJsonAsync&lt;BlogPost&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.604.1">$"api/BlogPosts/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.605.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.606.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.607.1">);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.608.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.609.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.610.1"> Task&lt;</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.611.1">int</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.612.1">&gt; </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.613.1">GetBlogPostCountAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.614.1">()</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.615.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.616.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.617.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.618.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.619.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.620.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.621.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.622.1"> httpclient.GetFromJsonAsync&lt;</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.623.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.624.1">&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.625.1">"/api/BlogPostCount"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.626.1">);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.627.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.628.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.629.1"> Task&lt;List&lt;BlogPost&gt;?&gt; GetBlogPostsAsync(</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.630.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.631.1"> numberofposts, </span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.632.1">int</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.633.1"> startindex)
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.634.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.635.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.636.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.637.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.638.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.639.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.640.1"> httpclient.GetFromJsonAsync&lt;List&lt;BlogPost&gt;&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.641.1">$"/api/BlogPosts?numberofposts=</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.642.1">{numberofposts}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.643.1">&amp;startindex=</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.644.1">{startindex}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.645.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.646.1">);
    }
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.647.1">We use the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.648.1">HttpClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.649.1"> we injected and then call </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.650.1">GetFromJsonAsync</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.651.1">, which will automatically download the JSON and convert it into the class we supply to the generic method.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.652.1">Now, it </span><a id="_idIndexMarker369" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.653.1">gets a little trickier: we need to handle authentication. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.653.2">Luckily, this is built into </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.654.1">HttpClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.655.1"> so we only need to handle </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.656.1">AccessTokenNotAvailableException</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.657.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.657.2">If a token is missing, it will automatically try and renew it, but if there is a problem (for example, the user is not logged in), we can redirect to the login page.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.658.1">We will come back to tokens and how authentication works in </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.659.1">Chapter 8</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.660.1">, </span><em class="italic"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.661.1">Authentication and Authorization</span></em><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.662.1">.</span></p>
</li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="9"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.663.1">Next, we add the API calls that need authentication, such as saving or deleting a blog post.
    </span><p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.664.1">Add the following code under the code we just added:</span></p>
<pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.665.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.666.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.667.1"> Task&lt;BlogPost?&gt; SaveBlogPostAsync(BlogPost item)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.668.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.669.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.670.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.671.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.672.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.673.1">Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.674.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.675.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.676.1"> response = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.677.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.678.1"> httpclient.PutAsJsonAsync&lt;BlogPost&gt;
           (</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.679.1">"api/BlogPosts"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.680.1">, item);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.681.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.682.1"> json = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.683.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.684.1"> response.Content.ReadAsStringAsync();
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.685.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.686.1"> JsonSerializer.Deserialize&lt;BlogPost&gt;(json);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.687.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.688.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.689.1">return</span></span> <span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.690.1">null</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.691.1">;
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.692.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.693.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.694.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.695.1">DeleteBlogPostAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.696.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.697.1">string</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.698.1"> id</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.699.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.700.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.701.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.702.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.703.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.704.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.705.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.706.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.707.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.708.1"> httpclient.DeleteAsync(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.709.1">$"api/BlogPosts/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.710.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.711.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.712.1">);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.713.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.714.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
}
</span></code></pre>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.715.1">If the call throws </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.716.1">AccessTokenNotAvailableException</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.717.1">, that means </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.718.1">HttpClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.719.1"> couldn’t get or renew a token automatically, and the user needs to log in.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.720.1">This state</span><a id="_idIndexMarker370" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.721.1"> should probably never happen because we will ensure that when the user navigates to that page, they will need to be logged in, but it’s better to be safe than sorry.</span></p></li>
</ol>
<ol class="numberedlist">
<li class="bulletlist1" value="10"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.722.1">Now, we need to do the same for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.723.1">Categories</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.724.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.724.2">Add the following code to the </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.725.1">BlogApiWebClient</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.726.1"> class:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.727.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.728.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.729.1"> Task&lt;List&lt;Category&gt;?&gt; GetCategoriesAsync()
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.730.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.731.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.732.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.733.1">Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.734.1">);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.735.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.736.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.737.1"> httpclient.GetFromJsonAsync&lt;List&lt;Category&gt;&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.738.1">$"api/Categories"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.739.1">);
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.740.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.741.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.742.1"> Task&lt;Category?&gt; GetCategoryAsync(</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.743.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.744.1"> id)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.745.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.746.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.747.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.748.1">);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.749.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.750.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.751.1"> httpclient.GetFromJsonAsync&lt;Category&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.752.1">$"api/Categories/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.753.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.754.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.755.1">);
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.756.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.757.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.758.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.759.1">DeleteCategoryAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.760.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.761.1">string</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.762.1"> id</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.763.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.764.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.765.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.766.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.767.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.768.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.769.1">"</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.770.1">Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.771.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.772.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.773.1"> httpclient.DeleteAsync(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.774.1">$"api/Categories/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.775.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.776.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.777.1">);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.778.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.779.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.780.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.781.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.782.1"> Task&lt;Category?&gt; SaveCategoryAsync(Category item)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.783.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.784.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.785.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.786.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.787.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.788.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.789.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.790.1"> response = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.791.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.792.1"> httpclient.PutAsJsonAsync&lt;Category&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.793.1">"api/Categories"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.794.1">, item);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.795.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.796.1"> json = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.797.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.798.1"> response.Content.ReadAsStringAsync();
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.799.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.800.1"> JsonSerializer.Deserialize&lt;Category&gt;(json);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.801.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.802.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.803.1">return</span></span> <span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.804.1">null</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.805.1">;
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.806.1">Next up, we</span><a id="_idIndexMarker371" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.807.1"> will do the same for </span><code class="inlinecode"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.808.1">Tags</span></code><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.809.1">. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.809.2">Add the following code just under the code we just added:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.810.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.811.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.812.1"> Task&lt;Tag?&gt; GetTagAsync(</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.813.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.814.1"> id)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.815.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.816.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.817.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.818.1">);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.819.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.820.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.821.1"> httpclient.GetFromJsonAsync&lt;Tag&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.822.1">$"api/Tags/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.823.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.824.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.825.1">);
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.826.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.827.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.828.1"> Task&lt;List&lt;Tag&gt;?&gt; GetTagsAsync()
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.829.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.830.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.831.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.832.1">);
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.833.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.834.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.835.1"> httpclient.GetFromJsonAsync&lt;List&lt;Tag&gt;&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.836.1">$"api/Tags"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.837.1">);
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.838.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.839.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.840.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.841.1">DeleteTagAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.842.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.843.1">string</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.844.1"> id</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.845.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.846.1">
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.847.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.848.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.849.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.850.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.851.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.852.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.853.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.854.1"> httpclient.DeleteAsync(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.855.1">$"api/Tags/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.856.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.857.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.858.1">);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.859.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.860.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
}
</span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.861.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.862.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.863.1"> Task&lt;Tag?&gt; SaveTagAsync(Tag item)
{
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.864.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.865.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.866.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.867.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.868.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.869.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.870.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.871.1"> response = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.872.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.873.1"> httpclient.PutAsJsonAsync&lt;Tag&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.874.1">"api/Tags"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.875.1">, item);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.876.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.877.1"> json = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.878.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.879.1"> response.Content.ReadAsStringAsync();
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.880.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.881.1"> JsonSerializer.Deserialize&lt;Tag&gt;(json);
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.882.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.883.1"> (AccessTokenNotAvailableException exception)
    {
        exception.Redirect();
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.884.1">return</span></span> <span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.885.1">null</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.886.1">;
}
</span></code></pre>
</li>
<li class="bulletlist1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.887.1">Let’s not forget </span><a id="_idIndexMarker372" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.888.1">about our comments! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.888.2">Add the following code just under the code we just added:
        </span><pre class="programlisting"><code class="hljs-code"><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.889.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.890.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.891.1"> Task&lt;List&lt;Comment&gt;&gt; GetCommentsAsync(</span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.892.1">string</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.893.1"> blogpostid)
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.894.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.895.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.896.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.897.1">);
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.898.1">return</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.899.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.900.1"> httpclient.GetFromJsonAsync&lt;List&lt;Comment&gt;&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.901.1">$"api/Comments/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.902.1">{blogpostid}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.903.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.904.1">);
    }
    
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.905.1">public</span></span><span> </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.906.1">async</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.907.1"> Task </span></span><span class="hljs-title"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.908.1">DeleteCommentAsync</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.909.1">(</span></span><span class="hljs-built_in"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.910.1">string</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.911.1"> id</span></span><span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.912.1">)</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.913.1">
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.914.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.915.1">
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.916.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.917.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.918.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.919.1">);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.920.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.921.1"> httpclient.DeleteAsync(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.922.1">$"api/Comments/</span></span><span class="hljs-name"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.923.1">{id}</span></span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.924.1">"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.925.1">);
        }
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.926.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.927.1"> (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.928.1">public</span></span> <span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.929.1">async</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.930.1"> Task&lt;Comment?&gt; SaveCommentAsync(Comment item)
    {
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.931.1">try</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.932.1">
        {
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.933.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.934.1"> httpclient = _factory.CreateClient(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.935.1">"Api"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.936.1">);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.937.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.938.1"> response = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.939.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.940.1"> httpclient.PutAsJsonAsync&lt;Comment&gt;(</span><span class="hljs-string"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.941.1">"api/Comments"</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.942.1">, item);
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.943.1">var</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.944.1"> json = </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.945.1">await</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.946.1"> response.Content.ReadAsStringAsync();
            </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.947.1">return</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.948.1"> JsonSerializer.Deserialize&lt;Comment&gt;(json);
        }
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.949.1">catch</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.950.1"> (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        </span><span class="hljs-keyword"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.951.1">return</span></span> <span class="hljs-literal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.952.1">null</span></span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.953.1">;
    }
</span></code></pre>
</li>
</ol>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.954.1">Great job! </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.954.2">Our API client</span><a id="_idIndexMarker373" class="calibre3"></a><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.955.1"> is now done!</span></p>
<h1 class="heading" id="_idParaDest-160"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.956.1">Summary</span></h1>
<p class="normal"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.957.1">In this chapter, we learned how to create an API using Minimal APIs and an API client, which is an important part of most applications. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.957.2">This way, we can get blog posts from our database and show them when we are running on WebAssembly. </span><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.957.3">It is worth mentioning that we can always run our applications using a web API; this is just to show that we can use different ways to access our data depending on what hosting model we are currently using.</span></p>
<p class="normal1"><span xmlns="http://www.w3.org/1999/xhtml" class="kobospan" id="kobo.958.1">In the next chapter, we will add the login functionality to our sites and call our API for the first time.</span></p>
</div>
</body>
</html>
