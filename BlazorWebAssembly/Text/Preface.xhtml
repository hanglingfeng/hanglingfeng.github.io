<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
  <title>Preface</title>
  <link href="../Styles/syntax-highlighting.css" rel="stylesheet" type="text/css"/>
  <link href="../Styles/epub.css" rel="stylesheet" type="text/css"/>
</head>

<body id="Preface" lang="en-US" xml:lang="en-US">
  <div id="_idContainer007">
    <h1 id="_idParaDest-6" class="mainHeading">Preface</h1>
    <p class="normal">Blazor WebAssembly is a framework that enables you to build single-page web applications that use C# on the client instead of JavaScript. It is built on the popular and robust ASP.NET framework. Blazor WebAssembly does not rely on plugins or add-ons for you to use C# in the browser. It only requires that the browser support WebAssembly, which <em class="italic">all</em> modern browsers do.</p>
    <p class="normal">In this book, you will complete practical projects that will teach you the fundamentals of the Blazor WebAssembly framework. Each chapter includes a stand-alone project with detailed step-by-step instructions. Each project is designed to highlight one or more important concepts concerning Blazor WebAssembly.</p>
    <p class="normal">By the end of the book, you will have experience with building both simple stand-alone web applications and hosted web applications with SQL Server backends.</p>
    <p class="normal">This is the second edition of this book. In this edition, we have added chapters on debugging, deploying to Microsoft Azure, and securing your application using Microsoft Azure Active Directory. Also, all the projects in the book have been updated to use the latest version of the Blazor WebAssembly framework.</p>
    <h1 id="_idParaDest-7" class="heading-1">Who this book is for</h1>
    <p class="normal">This book is for experienced web developers who are tired of the constant parade of new JavaScript frameworks and want to leverage their experience with .NET and C# to build web applications that can run anywhere. </p>
    <p class="normal">This book is for anyone who wants to learn Blazor WebAssembly quickly by emphasizing the practical over the theoretical. It uses complete, step-by-step sample projects that are easy to follow to teach you the concepts required to develop web apps using the Blazor WebAssembly framework.</p>
    <p class="normal">You do not need to be a professional developer to benefit from the projects in this book, but you do need some experience with C# and HTML.</p>
    <h1 id="_idParaDest-8" class="heading-1">What this book covers</h1>
    <p class="normal"><em class="chapterRef">Chapter 1</em>, <em class="italic">Introduction to Blazor WebAssembly</em>, introduces the Blazor WebAssembly framework. It explains the benefits of using the Blazor framework and describes the differences between the three hosting models: Blazor Server, Blazor Hybrid, and Blazor WebAssembly. After highlighting the advantages of using the Blazor WebAssembly framework, the goals and support options for WebAssembly are discussed. Finally, it guides you through the process of setting up your computer to complete the projects in this book. By the end of this chapter, you will be able to proceed to any of the other chapters in this book.</p>
    <p class="normal"><em class="chapterRef">Chapter 2</em>, <em class="italic">Building Your First Blazor WebAssembly Application</em>, introduces Razor components through the creation of a simple project. This chapter is divided into two sections. The first section explains Razor components, routing, Razor syntax, and how to use <code class="inlineCode">Hot Reload</code> while developing an application. The second section walks you step by step through the process of creating your first Blazor WebAssembly application by using the Blazor WebAssembly App project template provided by Microsoft. By the end of this chapter, you will be able to create a demo Blazor WebAssembly project.</p>
    <p class="normal"><em class="chapterRef">Chapter 3</em>, <em class="italic">Debugging and Deploying a Blazor WebAssembly App</em>, teaches you how to debug and deploy a Blazor WebAssembly app through the creation of a simple project. This chapter is divided into two sections. The first section explains debugging, logging, handling exceptions, using <strong class="keyWord">ahead-of-time</strong> (<strong class="keyWord">AOT</strong>) compilation, and deploying an app to Microsoft Azure. The second section walks you step by step through the process of debugging and deploying a Blazor WebAssembly application. By the end of this chapter, you will be able to debug a simple Blazor WebAssembly app and deploy it to Microsoft Azure.</p>
    <p class="normal"><em class="chapterRef">Chapter 4</em>, <em class="italic">Building a Modal Dialog Using Templated Components</em>, provides you with an introduction to templated components through the creation of a modal dialog component. This chapter is divided into two sections. The first section explains <code class="inlineCode">RenderFragment</code> parameters, <code class="inlineCode">EventCallback</code> parameters, and CSS isolation. The second section walks you step by step through the process of creating a modal dialog component and moving it to your own custom Razor class library. By the end of this chapter, you will be able to create a modal dialog component and share it with multiple projects through a Razor class library.</p>
    <p class="normal"><em class="chapterRef">Chapter 5</em>, <em class="italic">Building a Local Storage Service Using JavaScript Interoperability (JS Interop)</em>, teaches you how to use JavaScript with Blazor WebAssembly through the creation of a local storage service. This chapter is divided into two sections. The first section explains the reasons that you still need to occasionally use JavaScript and how to invoke a JavaScript function from .NET. For completeness, it also covers how to invoke a .NET method from JavaScript. Finally, it introduces the Web Storage API that is used by the project. In the second section, it walks you step by step through the process of creating and testing a service that writes and reads to the local storage of the browser. By the end of this chapter, you will be able to create a local storage service by using JS Interop to invoke JavaScript functions from a Blazor WebAssembly application.</p>
    <p class="normal"><em class="chapterRef">Chapter 6</em>, <em class="italic">Building a Weather App as a Progressive Web App (PWA)</em>, provides you with an introduction to progressive web apps through the creation of a simple weather web app. This chapter is divided into two sections. The first section explains what a PWA is and how to create one. It covers both manifest files and the various types of service workers. Also, it describes how to use the CacheStorage API, the Geolocation API, and the OpenWeather One Call API that are required by the project in this chapter. The second section walks you step by step through the process of creating a 5-day weather forecast app and converting it into a PWA by adding a logo, a manifest file, and a service worker. Finally, it shows you how to install and uninstall the PWA. By the end of this chapter, you will be able to convert a Blazor WebAssembly app into a PWA by adding a logo, a manifest file, and a service worker.</p>
    <p class="normal"><em class="chapterRef">Chapter 7</em>, <em class="italic">Building a Shopping Cart Using Application State</em>, explains how to use application state through the creation of a shopping cart web app. This chapter is divided into two sections. The first section explains application state and dependency injection. The second section walks you step by step through the process of creating a shopping cart application. To maintain state in your application, you will create a service that you will register in the DI container and inject into your components. By the end of this chapter, you will be able to use dependency injection to maintain application state within a Blazor WebAssembly app.</p>
    <p class="normal"><em class="chapterRef">Chapter 8</em>, <em class="italic">Building a Kanban Board Using Events</em>, provides you with an introduction to event handling through the creation of a Kanban board web app. This chapter is divided into two sections. The first section discusses event handling, attribute splatting, and arbitrary parameters. The second section walks you step by step through the process of creating a Kanban board application that uses the <code class="inlineCode">DragEventArgs</code> class to enable you to drag and drop tasks between the drop zones. By the end of this chapter, you will be able to handle events in your Blazor WebAssembly app and will be comfortable using both attribute splatting and arbitrary parameters.</p>
    <p class="normal"><em class="chapterRef">Chapter 9</em>, <em class="italic">Uploading and Reading an Excel file</em>, explains how to upload various types of files and how to use the <strong class="keyWord">Open XML SDK</strong> to read an Excel file. This chapter is divided into two sections. The first section explains uploading one or more files and resizing images. It also explains how to use virtualization to render data and how to read data from Excel files. The second section walks you step by step through the process of creating an application that can upload and read an Excel file and then use virtualization to render the data from the Excel file. By the end of this chapter, you will be able to upload a file into a Blazor WebAssembly app, use the Open XML SDK to read an Excel file, and render data using virtualization.</p>
    <p class="normal"><em class="chapterRef">Chapter 10</em>, <em class="italic">Using Azure Active Directory to Secure a Blazor WebAssembly Application</em>, teaches you how to secure a Blazor WebAssembly App through the creation of a simple application that displays the contents of a claim. This chapter is divided into two sections. The first section explains the difference between authentication and authorization. It also teaches you how to work with authentication and how to use both the <code class="inlineCode">Authorize</code> attribute and the <code class="inlineCode">AuthorizeView</code> component. The second section walks you step by step through the process of adding an application to Azure AD and using it for both authentication and authorization. By the end of this chapter, you will be able to secure a Blazor WebAssembly app using Azure AD.</p>
    <p class="normal"><em class="chapterRef">Chapter 11</em>, <em class="italic">Building a Task Manager Using ASP.NET Web API</em>, provides you with an introduction to hosted Blazor WebAssembly applications through the creation of a task manager web app. This is the first chapter to use SQL Server. It is divided into two sections. The first section describes the components of a hosted Blazor WebAssembly application. It also explains how to use the <code class="inlineCode">HttpClient</code> service and the various JSON helper methods to manipulate data. The last section walks you step by step through the process of creating a task manager application that stores its data in a SQL Server database. You will create an API controller with actions, using Entity Framework. By the end of this chapter, you will be able to create a hosted Blazor WebAssembly app that uses ASP.NET Web API to update data in a SQL Server database.</p>
    <p class="normal"><em class="chapterRef">Chapter 12</em>, <em class="italic">Building an Expense Tracker Using the EditForm Component</em>, teaches you how to use the <code class="inlineCode">EditForm</code> component through the creation of an expense tracker web app. This chapter uses SQL Server. It is divided into two sections. The first section introduces the <code class="inlineCode">EditForm</code> component, the built-in input components, and the built-in validation components. It also explains how to use navigation locking to prevent the user from navigating to another page before they have saved their edits. The last section walks you step by step through the process of creating an expense tracker application that uses the <code class="inlineCode">EditForm</code> component and some of the built-in components to add and edit expenses that are stored in a SQL Server database. By the end of this chapter, you will be able to use the <code class="inlineCode">EditForm</code> component in conjunction with the built-in components to input and validate data that is stored in a SQL Server database.</p>
    <h1 id="_idParaDest-9" class="heading-1">To get the most out of this book</h1>
    <p class="normal">We recommend that you read the first two chapters of the book to understand how to set up your computer and how to use a Blazor WebAssembly project template. After that, you can complete the remaining chapters in any order. The projects in each chapter become more complex as you proceed through the book. The final two chapters require a SQL Server database to complete the projects. <em class="chapterRef">Chapter 3</em> and <em class="chapterRef">Chapter 10</em> require a Microsoft Azure subscription.</p>
    <p class="normal">You will require the following software/hardware covered in the book:</p>
    <ul>
      <li class="bulletList">Visual Studio 2022 Community Edition</li>
      <li class="bulletList">SQL Server 2022 Express Edition</li>
      <li class="bulletList">Microsoft Azure</li>
    </ul>
    <p class="normal"><em class="italic">If you are using the digital version of this book, we advise you to type the code yourself or access the code via the GitHub repository (link available in the next section). Doing so will help you avoid any potential errors related to the copying and pasting of code.</em></p>
    <p class="normal">This book assumes that you are an experienced web developer. You should have some experience with C# and HTML.</p>
    <p class="normal">There are some projects that use JavaScript and CSS, but all the code is provided. Also, there are two projects that use Entity Framework, but once again, all the code is provided.</p>
    <h2 id="_idParaDest-10" class="heading-2">Download the example code files</h2>
    <p class="normal">You can download the example code files for this book from GitHub at <a href="https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition"><span class="url">https://github.com/PacktPublishing/Blazor-WebAssembly-by-Example-Second-Edition</span></a>. In case there’s an update to the code, it will be updated on the existing GitHub repository.</p>
    <p class="normal">We also have other code bundles from our rich catalog of books and videos available at <a href="https://github.com/PacktPublishing/"><span class="url">https://github.com/PacktPublishing/</span></a>. Check them out!</p>
    <h2 id="_idParaDest-11" class="heading-2">Code in Action</h2>
    <p class="normal">Code in Action videos for this book can be viewed at (<a href="https://packt.link/CodeinAction"><span class="url">https://packt.link/CodeinAction</span></a>).</p>
    <h2 id="_idParaDest-12" class="heading-2">Download the color images</h2>
    <p class="normal">We also provide a PDF file that has color images of the screenshots/diagrams used in this book. You can download it here: <a href="https://packt.link/Q27px"><span class="url">https://packt.link/Q27px</span></a>.</p>
    <h2 id="_idParaDest-13" class="heading-2">Conventions used</h2>
    <p class="normal">There are several text conventions used throughout this book.</p>
    <p class="normal"><code class="inlineCode">CodeInText</code>: Indicates code words in text, database table names, folder names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles. Here is an example: “Add the <code class="inlineCode">DeleteProduct</code> method to the <code class="inlineCode">@code</code> block.”</p>
    <p class="normal">A block of code is set as follows:</p>
    <pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword">private</span><span class="hljs-function"> </span><span class="hljs-keyword">void</span><span class="hljs-function"> </span><span class="hljs-title">DeleteProduct</span><span class="hljs-function">(</span><span class="hljs-params">Product product</span><span class="hljs-function">)</span> 
{ 
    cart.Remove(product); 
    total -= product.Price; 
} 
</code></pre>
    <p class="normal">When we wish to draw your attention to a particular part of a code block, the relevant lines or items are set in bold:</p>
    <pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">CartService</span> : <span class="hljs-title">ICartService</span> 
{ 
    <span class="code-highlight"><strong class="hljs-keyword-slc">public</strong><strong class="hljs-slc"> IList&lt;Product&gt; Cart { </strong><strong class="hljs-keyword-slc">get</strong><strong class="hljs-slc">; </strong><strong class="hljs-keyword-slc">private</strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc">set</strong><strong class="hljs-slc">; }</strong></span>
    <span class="code-highlight"><strong class="hljs-keyword-slc">public</strong><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc">int</strong><strong class="hljs-slc"> Total { </strong><strong class="hljs-keyword-slc">get</strong><strong class="hljs-slc">; </strong><strong class="hljs-keyword-slc">set</strong><strong class="hljs-slc">; }</strong></span>
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">event</span> Action OnChange; 
} 
</code></pre>
    <p class="normal">Any command-line input or output is written as follows:</p>
    <pre class="programlisting con"><code class="hljs-con">Add-Migration Init 
Update-Database 
</code></pre>
    <p class="normal"><strong class="keyWord">Bold</strong>: Indicates a new term, an important word, or words that you see onscreen. For example, words in menus or dialog boxes appear in the text like this. For example: “From the <strong class="keyWord">Build</strong> menu, select the <strong class="keyWord">Build Solution</strong> option.”</p>
    <div class="note">
      <p class="normal">Warnings or important notes appear like this.</p>
    </div>
    <div class="packt_tip">
      <p class="normal">Tips and tricks appear like this.</p>
    </div>
    <h1 id="_idParaDest-14" class="heading-1">Get in touch</h1>
    <p class="normal">Feedback from our readers is always welcome.</p>
    <p class="normal"><strong class="keyWord">General feedback</strong>: If you have questions about any aspect of this book, mention the book title in the subject of your message and email us at <a href="http://customercare@packtpub.com"><span class="url">customercare@packtpub.com</span></a>.</p>
    <p class="normal"><strong class="keyWord">Errata</strong>: Although we have taken every care to ensure the accuracy of our content, mistakes do happen. If you have found a mistake in this book, we would be grateful if you would report this to us. Please visit <a href="http://www.packtpub.com/support/errata"><span class="url">www.packtpub.com/support/errata</span></a>, selecting your book, clicking on the Errata Submission Form link, and entering the details.</p>
    <p class="normal"><strong class="keyWord">Piracy</strong>: If you come across any illegal copies of our works in any form on the Internet, we would be grateful if you would provide us with the location address or website name. Please contact us at <a href="http://copyright@packt.com"><span class="url">copyright@packt.com</span></a> with a link to the material.</p>
    <p class="normal"><strong class="keyWord">If you are interested in becoming an author:</strong> If there is a topic that you have expertise in and you are interested in either writing or contributing to a book, please visit <a href="http://authors.packtpub.com"><span class="url">authors.packtpub.com</span></a>.</p>
  </div>
  <div id="_idContainer008" class="Basic-Text-Frame">
    <h1 id="_idParaDest-15" class="heading-1">Share your thoughts</h1>
    <p class="normal">Once you’ve read <em class="italic">Blazor WebAssembly By Example, Second Edition</em>, we’d love to hear your thoughts! Please <a href="https://packt.link/r/1803241853"><span class="url">click here to go straight to the Amazon review page</span></a> for this book and share your feedback.</p>
    <p class="normal">Your review is important to us and the tech community and will help us make sure we’re delivering excellent quality content.</p>
  </div>
  <div id="_idContainer010" class="Basic-Text-Frame">
    <h1 id="_idParaDest-16" class="heading-1">Download a free PDF copy of this book</h1>
    <p class="normal">Thanks for purchasing this book!</p>
    <p class="normal">Do you like to read on the go but are unable to carry your print books everywhere? Is your eBook purchase not compatible with the device of your choice?</p>
    <p class="normal">Don’t worry, now with every Packt book you get a DRM-free PDF version of that book at no cost.</p>
    <p class="normal">Read anywhere, any place, on any device. Search, copy, and paste code from your favorite technical books directly into your application.&#160;</p>
    <p class="normal">The perks don’t stop there, you can get exclusive access to discounts, newsletters, and great free content in your inbox daily</p>
    <p class="normal">Follow these simple steps to get the benefits:</p>
    <ol class="numberedList" style="list-style-type: decimal;">
      <li class="numberedList" value="1">Scan the QR code or visit the link below</li>
    </ol>
    <figure class="mediaobject"><em class="italic"><img src="../Images/B18471_QR_Free_PDF.png" alt="Qr code

Description automatically generated"/></em></figure>
    <p class="packt_figref"><a href="https://packt.link/free-ebook/9781803241852"><span class="url">https://packt.link/free-ebook/9781803241852</span></a></p>
    <ol class="numberedList" style="list-style-type: decimal;">
      <li class="numberedList" value="2">Submit your proof of purchase</li>
      <li class="numberedList">That’s it! We’ll send your free PDF and other benefits to your email directly</li>
    </ol>
  </div>
</body>
</html>