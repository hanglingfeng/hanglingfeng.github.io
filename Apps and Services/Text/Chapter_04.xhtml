<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Chapter_04</title>
<link href="../Styles/syntax-highlighting.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/epub.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="Chapter_04" lang="en-US" xml:lang="en-US">
<div class="Basic-Text-Frame" id="_idContainer156">
<h1 class="chapterNumber"><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">4</span></h1>
<h1 class="chapterTitle" id="_idParaDest-165"><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">Managing NoSQL Data Using Azure Cosmos DB</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">This chapter is about managing NoSQL data by using Azure Cosmos DB. </span><span class="koboSpan" id="kobo.3.2" xmlns="http://www.w3.org/1999/xhtml">You will learn about some of the key concepts of Cosmos DB like its APIs, ways to model your data, and throughput provisioning, which influences costs. </span><span class="koboSpan" id="kobo.3.3" xmlns="http://www.w3.org/1999/xhtml">You will create some Cosmos DB resources using the local emulator and in the Azure cloud. </span><span class="koboSpan" id="kobo.3.4" xmlns="http://www.w3.org/1999/xhtml">Then you will learn how to work with more traditional data using the Core (SQL) API.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml">In an optional online-only section, you can learn how to work with graph data using the Gremlin API.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">This chapter will cover the following topics:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml">Understanding NoSQL databases</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">Creating Cosmos DB resources</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">Manipulating data with the Core (SQL) API</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">Exploring server-side programming</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml">Cleaning up Azure resources</span></li>
</ul>
<h1 class="heading-1" id="_idParaDest-166"><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">Understanding NoSQL databases</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">Two of the </span><a id="_idIndexMarker324"/><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">most common places to store data are in a </span><strong class="keyWord"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">Relational Database Management System</span></strong><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">RDBMS</span></strong><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">) such as SQL Server, PostgreSQL, MySQL, and SQLite, or in a </span><strong class="keyWord"><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">NoSQL</span></strong><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml"> database such as Azure Cosmos DB, Redis, MongoDB, and Apache Cassandra.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml">Relational databases were invented in the 1970s. </span><span class="koboSpan" id="kobo.20.2" xmlns="http://www.w3.org/1999/xhtml">They are queried with </span><strong class="keyWord"><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml">Structured Query Language </span></strong><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml">SQL</span></strong><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.24.2" xmlns="http://www.w3.org/1999/xhtml">At</span><a id="_idIndexMarker325"/><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml"> the time, data storage costs were high, so they reduced data duplication as much as possible via a process known as </span><em class="italic"><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml">normalization</span></em><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.27.2" xmlns="http://www.w3.org/1999/xhtml">Data is stored in tabular structures with rows and columns that are tricky to refactor once in production. </span><span class="koboSpan" id="kobo.27.3" xmlns="http://www.w3.org/1999/xhtml">They can be difficult and expensive to scale.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">NoSQL databases </span><a id="_idIndexMarker326"/><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">do not just mean “no SQL;” they can also mean “not only SQL.” </span><span class="koboSpan" id="kobo.29.2" xmlns="http://www.w3.org/1999/xhtml">They were invented in the 2000s, after the internet and the web had become popular and adopted much of the learning from that era of software. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml">They are designed for massive scalability and high performance, and to make programming easier by providing maximum flexibility and allowing schema changes at any time because they do not enforce a structure.</span></p>
<h2 class="heading-2" id="_idParaDest-167"><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml">Cosmos DB and its APIs</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">Azure</span><a id="_idIndexMarker327"/><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml"> Cosmos DB is</span><a id="_idIndexMarker328"/><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml"> a NoSQL data store</span><a id="_idIndexMarker329"/><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml"> that supports multiple APIs. </span><span class="koboSpan" id="kobo.35.2" xmlns="http://www.w3.org/1999/xhtml">Its native API is SQL-based. </span><span class="koboSpan" id="kobo.35.3" xmlns="http://www.w3.org/1999/xhtml">It also supports alternative APIs like MongoDB, Cassandra, and Gremlin.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB stores</span><a id="_idIndexMarker330"/><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml"> data in </span><strong class="keyWord"><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml">atom-record-sequence </span></strong><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml">ARS</span></strong><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">) format. </span><span class="koboSpan" id="kobo.41.2" xmlns="http://www.w3.org/1999/xhtml">You interact with this data via an API that you choose when you create the database:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="keyWord"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">API for MongoDB</span></strong><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml"> supports</span><a id="_idIndexMarker331"/><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml"> recent MongoDB wire protocol versions, which allow existing clients to work with the data as if they are interacting with an actual MongoDB database. </span><span class="koboSpan" id="kobo.45.2" xmlns="http://www.w3.org/1999/xhtml">Tools like </span><code class="inlineCode"><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">mongodump</span></code><span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">mongorestore</span></code><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml"> can be used to move any existing data into Azure Cosmos DB. </span><span class="koboSpan" id="kobo.49.2" xmlns="http://www.w3.org/1999/xhtml">You can check the latest MongoDB support at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/mongodb/mongodb-introduction#how-the-api-works"><span class="url"><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/mongodb/mongodb-introduction#how-the-api-works</span></span></a><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="keyWord"><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">API for Cassandra</span></strong><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml"> supports </span><a id="_idIndexMarker332"/><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml">the </span><strong class="keyWord"><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml">Cassandra Query Language</span></strong><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml">CQL</span></strong><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">) wire </span><a id="_idIndexMarker333"/><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml">protocol version 4, which allows existing clients to work with the data as if they are interacting with an actual Cassandra database.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">For a new project, sometimes known as a “green field” project, Microsoft recommends</span><a id="_idIndexMarker334"/><span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><strong class="keyWord"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">Core (SQL) API</span></strong><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">For existing projects that use alternative APIs, you could choose to use the appropriate API so that your clients and tools do not need to be updated while gaining the benefits of data stored in Azure Cosmos DB. </span><span class="koboSpan" id="kobo.65.2" xmlns="http://www.w3.org/1999/xhtml">This reduces migration costs.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml">If the </span><a id="_idIndexMarker335"/><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">relationships between data items have metadata that needs analyzing, then using the </span><strong class="keyWord"><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml">Gremlin API for Cosmos DB</span></strong><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml"> to treat Cosmos DB as a graph data store is a good choice.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml">: If you are unsure which API to choose, select Core (SQL) as the default.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">In this book, we will first use the native Core (SQL) API for Cosmos DB. </span><span class="koboSpan" id="kobo.72.2" xmlns="http://www.w3.org/1999/xhtml">This allows the developer to query JSON documents using a language like SQL. </span><span class="koboSpan" id="kobo.72.3" xmlns="http://www.w3.org/1999/xhtml">The Core (SQL) API uses JSON’s type system and JavaScript’s function system. </span></p>
<h2 class="heading-2" id="_idParaDest-168"><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml">Document modeling</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">A</span><a id="_idIndexMarker336"/><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml"> typical JSON document representing a product from the Northwind database, the example database that we used in </span><em class="chapterRef"><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 2</span></em><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">Managing Relational Data Using SQL Server</span></em><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml">, when stored in Azure Cosmos DB might look like the following:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml">"id"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">"1"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml">"1"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">"supplier"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml">"supplierId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml">"companyName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">"Exotic Liquids"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">"contactName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">"Charlotte Cooper"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">"Address"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml">49 Gilbert St."</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml">"City"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml">"Country"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml">"UK"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">"Phone"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml">"(171) 555-2222"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml">"category"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml">"categoryId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml">"categoryName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml">"Beverages"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">"description"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">"Soft drinks, coffees, teas, beers, and ales"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">"image"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml">"https://myaccount.blob.core.windows.net/categories/beverages.png"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml">"quantityPerUnit"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">"10 boxes x 20 bags"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml">"unitPrice"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml">18.0000</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml">"unitsInStock"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml">39</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml">"unitsOnOrder"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml">"reorderLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
<p class="normal"><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml">Unlike</span><a id="_idIndexMarker337"/><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml"> with a relational database model, it is common to </span><strong class="keyWord"><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">embed</span></strong><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml"> related data, which involves duplicating data such as the category and supplier information across multiple products. </span><span class="koboSpan" id="kobo.171.2" xmlns="http://www.w3.org/1999/xhtml">This is good practice if the related data is bounded.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml">For example, for a product, there will only ever be one supplier and one category, so those relationships are bounded to one, which means limited to one each. </span><span class="koboSpan" id="kobo.172.2" xmlns="http://www.w3.org/1999/xhtml">If we were modeling a category and decided to embed its related products, then that could be poor practice because having all the product details as an array would be unbounded. </span><span class="koboSpan" id="kobo.172.3" xmlns="http://www.w3.org/1999/xhtml">Instead, we might choose to only store a unique identifier for each product and reference the product details stored elsewhere. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml">You should also consider how frequently the related data is updated. </span><span class="koboSpan" id="kobo.173.2" xmlns="http://www.w3.org/1999/xhtml">The more frequently it needs to be updated, the more you should avoid embedding it. </span><span class="koboSpan" id="kobo.173.3" xmlns="http://www.w3.org/1999/xhtml">If related data is unbounded but infrequently updated, then embedding might still be a good choice.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml">Deliberately </span><a id="_idIndexMarker338"/><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml">but carefully </span><strong class="keyWord"><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml">denormalizing</span></strong><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml"> parts of your data model implies that you will need to execute fewer queries and updates for common operations, reducing costs both in money and performance.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">Use embedding (denormalized data) when:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml">The relationships are contained, like property owned by a person, or the children of a parent.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml">The relationships are one-to-one or one-to-few, i.e., the related data is bounded.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml">The related data needs infrequent updates.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">The related data often or always needs to be included in query results.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">: Denormalized data models provide better read performance but worse write performance.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml">Imagine that you want to model an article and its comments on a popular news website. </span><span class="koboSpan" id="kobo.185.2" xmlns="http://www.w3.org/1999/xhtml">The comments are unbounded and, for an engaging article, would frequently be added to, especially during the hours or days after it is published while it is topical news. </span><span class="koboSpan" id="kobo.185.3" xmlns="http://www.w3.org/1999/xhtml">Or imagine an investor with stock they trade. </span><span class="koboSpan" id="kobo.185.4" xmlns="http://www.w3.org/1999/xhtml">The current price of that stock would be frequently updated.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">In these </span><a id="_idIndexMarker339"/><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml">scenarios, you would want to </span><strong class="keyWord"><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml">normalize</span></strong><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml"> the related data either wholly or partially. </span><span class="koboSpan" id="kobo.189.2" xmlns="http://www.w3.org/1999/xhtml">For example, you could choose to embed the most liked comments that will be shown at the top of the list directly under the article. </span><span class="koboSpan" id="kobo.189.3" xmlns="http://www.w3.org/1999/xhtml">Other comments could be stored separately and referenced using their primary keys. </span><span class="koboSpan" id="kobo.189.4" xmlns="http://www.w3.org/1999/xhtml">You could choose to embed stock information for long-term investments that are held for many years, like the price the investment was purchased at and the price on the first day of each month since then (but not the live current price), but reference stock information for short-term investments for day trading.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">Use referencing (normalized data) when:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml">The relationships are one-to-many or many-to-many and unbounded.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml">The related data needs frequent updates.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml">: Normalized data models require more queries, which worsens read performance but provides better write performance.</span></p>
</div>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">You can read more </span><a id="_idIndexMarker340"/><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml">about modeling documents in Azure Cosmos DB at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/sql/modeling-data"><span class="url"><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/sql/modeling-data</span></span></a><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-169"><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml">Consistency levels</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB</span><a id="_idIndexMarker341"/><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml"> is distributed globally and scales elastically. </span><span class="koboSpan" id="kobo.201.2" xmlns="http://www.w3.org/1999/xhtml">It relies on replication to provide low latency and high availability all over the world. </span><span class="koboSpan" id="kobo.201.3" xmlns="http://www.w3.org/1999/xhtml">To achieve this, you must accept and choose tradeoffs.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml">To ease the life of a programmer, you want total consistency of data. </span><span class="koboSpan" id="kobo.202.2" xmlns="http://www.w3.org/1999/xhtml">If data is modified anywhere in the world, then any subsequent read operation should see that change. </span><span class="koboSpan" id="kobo.202.3" xmlns="http://www.w3.org/1999/xhtml">The best consistency is </span><a id="_idIndexMarker342"/><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">known as </span><strong class="keyWord"><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml">linearizability</span></strong><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.205.2" xmlns="http://www.w3.org/1999/xhtml">Linearizability increases the latency of write operations and reduces the availability of read operations because it must wait for replication to occur globally. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml">A more relaxed consistency level improves latency and availability at the cost of potentially increased complexity for the programmer because data might be inconsistent.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml">Most NoSQL databases only offer two levels of consistency: strong and eventual. </span><span class="koboSpan" id="kobo.207.2" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB offers five to provide exactly the level of consistency that suits your project.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml">You choose</span><a id="_idIndexMarker343"/><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml"> the level of data consistency, and this will be guaranteed </span><a id="_idIndexMarker344"/><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml">by the </span><strong class="keyWord"><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">Service-Level Agreement</span></strong><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">SLA</span></strong><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml">), as shown in the following, ordered from the strongest to the weakest:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">Strong</span></strong><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml"> consistency</span><a id="_idIndexMarker345"/><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml"> guarantees linearizability across all regions globally. </span><span class="koboSpan" id="kobo.217.2" xmlns="http://www.w3.org/1999/xhtml">All other consistency levels are collectively known as “relaxed.” </span><span class="koboSpan" id="kobo.217.3" xmlns="http://www.w3.org/1999/xhtml">You might ask, “Why not set Strong consistency in all scenarios?” </span><span class="koboSpan" id="kobo.217.4" xmlns="http://www.w3.org/1999/xhtml">If you are familiar with relational databases, then you should be familiar with transaction isolation levels. </span><span class="koboSpan" id="kobo.217.5" xmlns="http://www.w3.org/1999/xhtml">These are similar conceptually to NoSQL consistency levels. </span><span class="koboSpan" id="kobo.217.6" xmlns="http://www.w3.org/1999/xhtml">The strongest level of transaction isolation level is </span><code class="inlineCode"><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">SERIALIZABLE</span></code><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.219.2" xmlns="http://www.w3.org/1999/xhtml">Weaker levels include </span><code class="inlineCode"><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml">READUNCOMMITTED</span></code><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml">REPEATABLE READ</span></code><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.223.2" xmlns="http://www.w3.org/1999/xhtml">You would not want to use </span><code class="inlineCode"><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml">SERIALIZABLE</span></code><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml"> in all scenarios for the same reason you wouldn’t want to use Strong consistency in all scenarios. </span><span class="koboSpan" id="kobo.225.2" xmlns="http://www.w3.org/1999/xhtml">They both slow down operations, and sometimes, to an unacceptable point. </span><span class="koboSpan" id="kobo.225.3" xmlns="http://www.w3.org/1999/xhtml">Your users will complain about a lack of performance, or even an inability to perform a task at all. </span><span class="koboSpan" id="kobo.225.4" xmlns="http://www.w3.org/1999/xhtml">So, you need to look carefully at each task you are attempting and determine the minimal required level for that task. </span><span class="koboSpan" id="kobo.225.5" xmlns="http://www.w3.org/1999/xhtml">Some developers prefer to default to the strongest level and weaken it for scenarios that are “too slow.” </span><span class="koboSpan" id="kobo.225.6" xmlns="http://www.w3.org/1999/xhtml">Other developers prefer to default to the weakest level and strengthen it for scenarios that introduce too much inconsistency. </span><span class="koboSpan" id="kobo.225.7" xmlns="http://www.w3.org/1999/xhtml">As you become more familiar with NoSQL development, you will be able to judge quicker what level is best for different scenarios.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml">Bounded staleness</span></strong><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml"> consistency</span><a id="_idIndexMarker346"/><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml"> guarantees the ability to read your own write within the write region, monotonic read within the region (meaning the values do not increase or decrease, like a monotone voice, and remain in a consistent order), and consistent prefix, and the staleness of read data is restricted to a specific number of versions for which the reads lag behind the writes within a specified time interval. </span><span class="koboSpan" id="kobo.228.2" xmlns="http://www.w3.org/1999/xhtml">For example, the time interval might be</span><a id="_idIndexMarker347"/><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml"> ten minutes and the number of versions might be three. </span><span class="koboSpan" id="kobo.229.2" xmlns="http://www.w3.org/1999/xhtml">That would mean that a maximum of three writes can be made in any ten-minute period before a read operation must reflect those changes.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml">Session</span></strong><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml"> consistency</span><a id="_idIndexMarker348"/><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml"> guarantees the ability to read your own write within the write region, monotonic read, and consistent prefix.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml">Consistent prefix</span></strong><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml"> consistency </span><a id="_idIndexMarker349"/><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">only guarantees the order that writes can then be read.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml">Eventual</span></strong><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml"> consistency </span><a id="_idIndexMarker350"/><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml">does not guarantee that the order of writes will match the order of reads. </span><span class="koboSpan" id="kobo.238.2" xmlns="http://www.w3.org/1999/xhtml">When writes pause, reads will eventually catch up as the replicas synchronize. </span><span class="koboSpan" id="kobo.238.3" xmlns="http://www.w3.org/1999/xhtml">It is</span><a id="_idIndexMarker351"/><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml"> possible for a client to read values older than the ones it read before. </span><strong class="keyWord"><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml">Probabilistic Bounded Staleness </span></strong><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml">PBS</span></strong><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">) is a measurement that shows how eventual your consistency is currently. </span><span class="koboSpan" id="kobo.243.2" xmlns="http://www.w3.org/1999/xhtml">You can monitor it in the Azure portal.</span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">You can read more details </span><a id="_idIndexMarker352"/><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">about consistency levels at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/consistency-levels"><span class="url"><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/consistency-levels</span></span></a><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
</li>
</ul>
<h2 class="heading-2" id="_idParaDest-170"><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">Hierarchy of components</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml">The</span><a id="_idIndexMarker353"/><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml"> hierarchy of components for Azure Cosmos DB is:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml">Account</span></strong><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">: You can create up to 50 accounts via the Azure portal.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml">Database</span></strong><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml">: You can have an unlimited number of databases per account. </span><span class="koboSpan" id="kobo.254.2" xmlns="http://www.w3.org/1999/xhtml">We will create a database named </span><code class="inlineCode"><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">Container</span></strong><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml">: You can have an unlimited number of containers per database. </span><span class="koboSpan" id="kobo.258.2" xmlns="http://www.w3.org/1999/xhtml">We will create a container named </span><code class="inlineCode"><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">Partition</span></strong><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">: These are created and managed automatically within a container, and you can have an unlimited number. </span><span class="koboSpan" id="kobo.262.2" xmlns="http://www.w3.org/1999/xhtml">Partitions are either logical or physical. </span><span class="koboSpan" id="kobo.262.3" xmlns="http://www.w3.org/1999/xhtml">A </span><strong class="keyWord"><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">logical partition</span></strong><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml"> contains </span><a id="_idIndexMarker354"/><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">items with the same partition key and defines the scope for transactions. </span><span class="koboSpan" id="kobo.265.2" xmlns="http://www.w3.org/1999/xhtml">Multiple logical partitions are </span><a id="_idIndexMarker355"/><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">mapped to a </span><strong class="keyWord"><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">physical partition</span></strong><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.268.2" xmlns="http://www.w3.org/1999/xhtml">Small containers may only need one physical partition. </span><span class="koboSpan" id="kobo.268.3" xmlns="http://www.w3.org/1999/xhtml">You should not concern yourself with physical partitions since you have no control over them. </span><span class="koboSpan" id="kobo.268.4" xmlns="http://www.w3.org/1999/xhtml">Focus on deciding what your partition key should be because that defines the items stored in a logical partition.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml">Item</span></strong><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">: This is a stored entity in a container. </span><span class="koboSpan" id="kobo.270.2" xmlns="http://www.w3.org/1999/xhtml">We will add items that represent each product, like Chai tea.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml">“Item” is a </span><a id="_idIndexMarker356"/><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml">deliberately generic term and is used by the Core (SQL) API to refer to a JSON document but can also be used for the other APIs. </span><span class="koboSpan" id="kobo.272.2" xmlns="http://www.w3.org/1999/xhtml">The other APIs also have their own more specific terms:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml">Cassandra uses </span><strong class="keyWord"><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml">row</span></strong><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml">MongoDB uses </span><strong class="keyWord"><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">document</span></strong><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">Graph databases like Gremlin use </span><strong class="keyWord"><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml">vertex</span></strong><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="keyWord"><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml">edge</span></strong><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-171"><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">Throughput provisioning</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">Throughput is </span><a id="_idIndexMarker357"/><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml">measured as </span><strong class="keyWord"><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">request units per second </span></strong><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml">RU/s</span></strong><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.290.2" xmlns="http://www.w3.org/1999/xhtml">A single </span><strong class="keyWord"><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml">request unit </span></strong><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml">RU</span></strong><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml">) is about</span><a id="_idIndexMarker358"/><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml"> the cost of performing a </span><code class="inlineCode"><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml">GET</span></code><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml"> request</span><a id="_idIndexMarker359"/><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml"> for a 1KB document using its unique identifier. </span><span class="koboSpan" id="kobo.298.2" xmlns="http://www.w3.org/1999/xhtml">Creating, updating, and deleting cost more RUs; for example, a query might cost 46.54 RUs, or a delete operation might cost 14.23 RUs.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">Throughput must be provisioned in advance, although you can scale up and down at any time in increments or decrements of 100 RU/s. </span><span class="koboSpan" id="kobo.299.2" xmlns="http://www.w3.org/1999/xhtml">You will be billed per hour.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml">You can discover how much a request costs in RUs by getting the </span><code class="inlineCode"><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml">RequestCharge</span></code><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml"> property. </span><span class="koboSpan" id="kobo.302.2" xmlns="http://www.w3.org/1999/xhtml">You can learn more at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/sql/find-request-unit-charge"><span class="url"><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/sql/find-request-unit-charge</span></span></a><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.304.2" xmlns="http://www.w3.org/1999/xhtml">We will output this property in all the example code that we run in this chapter.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml">You must provision throughput to run CRUD operations (creates, reads, updates, and deletes). </span><span class="koboSpan" id="kobo.305.2" xmlns="http://www.w3.org/1999/xhtml">You must estimate throughput by calculating the number of operations you’ll need to support throughout the year. </span><span class="koboSpan" id="kobo.305.3" xmlns="http://www.w3.org/1999/xhtml">For example, a commerce website might need to expect much greater throughput at Thanksgiving in the US or Singles Day in China.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml">Most throughput settings are applied at the container level, or you can do so at the database level and have the settings shared across all containers. </span><span class="koboSpan" id="kobo.306.2" xmlns="http://www.w3.org/1999/xhtml">Throughput is distributed equally among partitions.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">Once provisioned throughput is exhausted, Cosmos DB will start rate-limiting access requests, and your code will have to wait and retry later. </span><span class="koboSpan" id="kobo.307.2" xmlns="http://www.w3.org/1999/xhtml">Luckily, we will use the .NET SDK for Cosmos DB, which automatically reads the </span><code class="inlineCode"><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">retry-after</span></code><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml"> response header and retries after that time limit.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml">Using the Azure portal, you can provision between 400 RU/s and 250,000 RU/s. </span><span class="koboSpan" id="kobo.310.2" xmlns="http://www.w3.org/1999/xhtml">At the time of writing, the 400 RU/s minimum would cost about US$35 per month. </span><span class="koboSpan" id="kobo.310.3" xmlns="http://www.w3.org/1999/xhtml">You would then also need to add the cost of storage depending on how many GBs you want to store, for example, US$5 for a few GBs.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml">The free tier of Cosmos DB allows up to 1,000 RU/s and 25 GB of storage. </span><span class="koboSpan" id="kobo.311.2" xmlns="http://www.w3.org/1999/xhtml">You can use a calculator at the following link: </span><a href="https://cosmos.azure.com/capacitycalculator/"><span class="url"><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">https://cosmos.azure.com/capacitycalculator/</span></span></a><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml">Factors</span><a id="_idIndexMarker360"/><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml"> that affect RUs:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml">Item size</span></strong><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">: A 2KB document costs twice as much as a 1KB document.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml">Indexed properties</span></strong><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">: Indexing all item properties costs more than indexing a subset of properties.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml">Consistency</span></strong><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">: Strict consistency costs twice as many RUs as looser consistency.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml">Query complexity</span></strong><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml">: The number of predicates (filters), the number of results, the number of custom functions, projections, the size of the dataset, and so on, all increase the cost in RUs.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-172"><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml">Partition strategies</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml">A </span><a id="_idIndexMarker361"/><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml">good partition strategy allows a Cosmos DB database to grow and efficiently run queries and transactions. </span><span class="koboSpan" id="kobo.326.2" xmlns="http://www.w3.org/1999/xhtml">A good partition strategy is about choosing a </span><a id="_idIndexMarker362"/><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml">suitable </span><strong class="keyWord"><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml">partition key</span></strong><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.329.2" xmlns="http://www.w3.org/1999/xhtml">It is set for a container and cannot be changed.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml">The partition key should be chosen to evenly distribute operations across the database to avoid hot partitions, meaning a partition that handles more requests, so it is busier than other partitions. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">A property that will be unique for an item and will often be used to look up an item might be a good choice. </span><span class="koboSpan" id="kobo.331.2" xmlns="http://www.w3.org/1999/xhtml">For example, for US citizens, a person’s social security number. </span><span class="koboSpan" id="kobo.331.3" xmlns="http://www.w3.org/1999/xhtml">However, partition keys do not have to be unique. </span><span class="koboSpan" id="kobo.331.4" xmlns="http://www.w3.org/1999/xhtml">The partition key value will be combined with an item ID to uniquely identify an item.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml">Partitions </span><a id="_idIndexMarker363"/><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">are automatically created by Cosmos DB when needed. </span><span class="koboSpan" id="kobo.333.2" xmlns="http://www.w3.org/1999/xhtml">There is no negative impact on your applications and services from the automatic creation and deletion of partitions. </span><span class="koboSpan" id="kobo.333.3" xmlns="http://www.w3.org/1999/xhtml">Each partition can grow up to a maximum of 20 GB. </span><span class="koboSpan" id="kobo.333.4" xmlns="http://www.w3.org/1999/xhtml">Cosmos DB will automatically split partitions when needed.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml">A container should have a partition key that possesses these attributes:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml">High cardinality so that items are distributed evenly across partitions.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml">Evenly distributed requests across partitions.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml">Evenly distributed storage across partitions.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-173"><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml">Data storage design</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml">With</span><a id="_idIndexMarker364"/><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml"> relational databases, the schemas are rigid and inflexible. </span><span class="koboSpan" id="kobo.340.2" xmlns="http://www.w3.org/1999/xhtml">The Northwind database’s products are all food-related, so the schema might not change much. </span><span class="koboSpan" id="kobo.340.3" xmlns="http://www.w3.org/1999/xhtml">But if you are building a commerce system for a company that sells everything from clothes to electronic equipment to books, then a semi-structured data store like the following would be better:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">Clothing: Sizes like S, M L, XL; brand; color.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">Shoes: Sizes like 7, 8, 9; brand; color.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml">Televisions: Sizes like 40”, 52”; screen technology like OLED, LCD; brand.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml">Books: Number of pages; author; publisher.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml">Being schema-less, Azure Cosmos DB can add new types of products with different structures and properties simply by adding a new product with that structure to a container. </span><span class="koboSpan" id="kobo.345.2" xmlns="http://www.w3.org/1999/xhtml">You will see examples of this in the code that you write later in this chapter.</span></p>
<h2 class="heading-2" id="_idParaDest-174"><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml">Migrating data to Cosmos DB</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml">The</span><a id="_idIndexMarker365"/><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml"> open-source </span><strong class="keyWord"><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB Data Migration Tool</span></strong><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml"> can</span><a id="_idIndexMarker366"/><span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml"> import data into Azure Cosmos DB from many different sources, including Azure Table Storage, SQL databases, MongoDB, text files in JSON and CSV formats, HBase, and more.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">We will not use this migration tool in this book, so if you think it will be useful to you, then you can learn how to use it at the following link: </span><a href="https://github.com/Azure/azure-documentdb-datamigrationtool"><span class="url"><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/Azure/azure-documentdb-datamigrationtool</span></span></a><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml">That’s quite enough theory. </span><span class="koboSpan" id="kobo.355.2" xmlns="http://www.w3.org/1999/xhtml">Now, let’s look at something more practical, how to create Cosmos DB resources so we can work with them in code.</span></p>
<h1 class="heading-1" id="_idParaDest-175"><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml">Creating Cosmos DB resources</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">To see </span><a id="_idIndexMarker367"/><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB in action, first, we must create Cosmos DB resources. </span><span class="koboSpan" id="kobo.358.2" xmlns="http://www.w3.org/1999/xhtml">We can manually create them in the cloud using the Azure portal or programmatically create them using the Azure Cosmos DB .NET SDK. </span><span class="koboSpan" id="kobo.358.3" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB resources created in the cloud have a cost unless you use a trial or free account.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">You can also create Azure Cosmos DB resources locally using an emulator, which will cost you nothing. </span><span class="koboSpan" id="kobo.359.2" xmlns="http://www.w3.org/1999/xhtml">At the time of writing, the Azure Cosmos DB Emulator only supports Windows. </span><span class="koboSpan" id="kobo.359.3" xmlns="http://www.w3.org/1999/xhtml">If you want to use Linux or macOS, then you can try to use the Linux Emulator, which is currently in preview, or you could host the emulator in a Windows virtual machine.</span></p>
<h2 class="heading-2" id="_idParaDest-176"><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml">Using an emulator on Windows to create Azure Cosmos DB resources </span></h2>
<p class="normal"><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">If you do not</span><a id="_idIndexMarker368"/><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml"> have a Windows computer, then just read through this section without completing the steps yourself, and then in the next section, you will use the Azure portal to create Azure Cosmos DB resources.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml">Let’s use the Azure Cosmos DB Emulator on Windows to create Azure Cosmos DB resources like a database and container:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">Download and install the latest version of the Azure Cosmos DB Emulator on your local Windows computer from the following link (direct to the MSI installer file): </span><a href="https://aka.ms/cosmosdb-emulator"><span class="url"><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">https://aka.ms/cosmosdb-emulator</span></span></a><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml">.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">The most recent version of the emulator at the time of writing is 2.14.12, released on March 20, 2023. </span><span class="koboSpan" id="kobo.367.2" xmlns="http://www.w3.org/1999/xhtml">Earlier versions of the emulator are not supported by the developer team. </span><span class="koboSpan" id="kobo.367.3" xmlns="http://www.w3.org/1999/xhtml">If you have an older version installed, then remove it and install the latest.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="2"><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml">Make </span><a id="_idIndexMarker369"/><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">sure the Azure Cosmos DB Emulator is running.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="screenText"><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB Emulator</span></strong><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml"> user interface should start automatically, but if not, start your favorite browser and navigate to </span><code class="inlineCode"><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml">https://localhost:8081/_explorer/index.html</span></code><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml">Note that the Azure Cosmos DB emulator is running, hosted at </span><code class="inlineCode"><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml">localhost</span></code><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml"> on port </span><code class="inlineCode"><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml">8081</span></code><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">, with a </span><strong class="screenText"><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml">Primary Key</span></strong><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml"> that you will need to securely connect to the service, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.1</span></em><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml">:
    </span><figure class="mediaobject"><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_01.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.1: The Azure Cosmos DB Emulator user interface on Windows</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml">The default primary key for the emulator is the same value for everyone. </span><span class="koboSpan" id="kobo.386.2" xmlns="http://www.w3.org/1999/xhtml">You can specify your own key value by starting the emulator at the command line with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml">/key</span></code><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml"> switch. </span><span class="koboSpan" id="kobo.388.2" xmlns="http://www.w3.org/1999/xhtml">You can learn about starting the emulator at the command line at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/emulator-command-line-parameters"><span class="url"><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/emulator-command-line-parameters</span></span></a><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="5"><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml">In the navigation bar on the left, click </span><strong class="screenText"><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml">Explorer</span></strong><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">, and then click </span><strong class="screenText"><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml">New Container</span></strong><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml">Complete</span><a id="_idIndexMarker370"/><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml"> the following information:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">For </span><strong class="screenText"><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml">Database id</span></strong><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml">, select </span><strong class="screenText"><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml">Create new</span></strong><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml"> and enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">. </span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml">Select the </span><strong class="screenText"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml">Share throughput across containers</span></strong><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml"> check box.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">For </span><strong class="screenText"><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml">Database throughput</span></strong><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml">, select </span><strong class="screenText"><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">Autoscale</span></strong><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml">. </span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml">Set </span><strong class="screenText"><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml">Database max RU/s</span></strong><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml"> as </span><code class="inlineCode"><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">4000</span></code><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.417.2" xmlns="http://www.w3.org/1999/xhtml">This will use a minimum of 400 RU/s and autoscale up to 4,000 RU/s when needed.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">For </span><strong class="screenText"><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml">Container id</span></strong><span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml">, enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">For </span><strong class="screenText"><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml">Partition key</span></strong><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">, enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">/productId</span></code><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">OK</span></strong><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">In the tree on the left, expand the </span><strong class="screenText"><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></strong><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml"> database, expand the </span><strong class="screenText"><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></strong><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml"> container, and select </span><strong class="screenText"><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml">Items</span></strong><span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.2</span></em><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_02.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.2: The empty items in the Products container in the Northwind database</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="9"><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">In the toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml">New Item</span></strong><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml">Replace the contents of the editor window with a JSON document that represents a product named </span><code class="inlineCode"><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml">Chai</span></code><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following JSON:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">"supplier"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml">"supplierId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml">"companyName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml">"Exotic Liquids"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml">"contactName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml">"Charlotte Cooper"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml">"Address"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml">"49 Gilbert St."</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml">"City"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml">"Country"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml">"UK"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml">"Phone"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">"(171) 555-2222"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml">"category"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-attr"><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml">categoryId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml">"categoryName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml">"Beverages"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml">"description"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml">"Soft drinks, coffees, teas, beers, and ales"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml">"quantityPerUnit"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">"10 boxes x 20 bags"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml">"unitPrice"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">18</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml">"unitsInStock"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml">39</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml">"unitsOnOrder"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml">"reorderLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml">In the</span><a id="_idIndexMarker371"/><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml"> toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml">Save</span></strong><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml">, and note the extra properties that are automatically added to any item, including </span><code class="inlineCode"><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml">_etag</span></code><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml">_ts</span></code><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following JSON:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">"supplier"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml">"supplierId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml">
        ...
    </span><span class="hljs-attr"><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml">"reorderLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml">"id"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml">"2ad4c71d-d0e4-4ebd-a146-bcf052f8d7d6"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml">"_rid"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml">"bmAuAJ9o6I8BAAAAAAAAAA=="</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml">"_self"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml">"dbs/bmAuAA==/colls/bmAuAJ9o6I8=/docs/bmAuAJ9o6I8BAAAAAAAAAA==/"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml">"_etag"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">"\"00000000-0000-0000-8fc2-ec4d49ea01d8\""</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">"_attachments"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">"attachments/"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml">"_ts"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml">1656952035</span></strong></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml">New Item</span></strong><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">Replace the contents of the editor window with a JSON document that represents a product named </span><code class="inlineCode"><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml">Chang</span></code><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following JSON:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">"Chang"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml">"supplier"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml">"supplierId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml">"companyName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml">"Exotic Liquids"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml">"contactName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml">"Charlotte Cooper"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml">"Address"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml">"49 Gilbert St."</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml">"City"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml">"Country"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml">"UK"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-attr"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml">Phone"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml">"(171) 555-2222"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml">"category"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml">"categoryId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml">"categoryName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml">"Beverages"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">"description"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml">"Soft drinks, coffees, teas, beers, and ales"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">"quantityPerUnit"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">"24 - 12 oz bottles"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml">"unitPrice"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">19</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">"unitsInStock"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml">17</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">"unitsOnOrder"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml">40</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">"reorderLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml">25</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">Save</span></strong><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml">New Item</span></strong><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml">Replace</span><a id="_idIndexMarker372"/><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml"> the contents of the editor window with a JSON document that represents a product named </span><code class="inlineCode"><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">Aniseed Syrup</span></code><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following JSON:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml">"Aniseed Syrup"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml">"supplier"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml">"supplierId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-attr"><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml">companyName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">"Exotic Liquids"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">"contactName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml">"Charlotte Cooper"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">"Address"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml">"49 Gilbert St."</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml">"City"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml">"Country"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml">"UK"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">"Phone"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml">"(171) 555-2222"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml">"category"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml">"categoryId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">"categoryName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml">"Condiments"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml">"description"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">"Sweet and savory sauces, relishes, spreads, and seasonings"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml">},</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">"quantityPerUnit"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">"12 - 550 ml bottles"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml">"unitPrice"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml">"unitsInStock"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml">13</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml">"unitsOnOrder"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml">70</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml">"reorderLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">25</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">Save</span></strong><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><a id="_idIndexMarker373"/><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml">the first item in the list and note that all the items have been automatically assigned GUID values for their </span><code class="inlineCode"><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml"> properties, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.3</span></em><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_03.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.3: A saved JSON document item in the Azure Cosmos DB emulator</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="19"><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><a id="_idIndexMarker374"/><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml">New SQL Query</span></strong><span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml">, and note the default query text is </span><code class="inlineCode"><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml">SELECT * FROM c</span></code><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">Modify the query text to return all products supplied by </span><code class="inlineCode"><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml">Exotic Liquids</span></code><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml">; in the toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml">Execute Query</span></strong><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml">, and note that all three products are included in the array of results, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.4</span></em><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml"> and in the following query:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-operator"><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">*</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml"> c </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml"> c.supplier.companyName </span><span class="hljs-operator"><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml"> "Exotic Liquids"
</span></code></pre>
<figure class="mediaobject"><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_04.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.4: A query to return all products supplied by Exotic Liquids</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml">Keywords are case-insensitive, so </span><code class="inlineCode"><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></code><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml"> is treated the same as </span><code class="inlineCode"><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml">Where</span></code><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml">where</span></code><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.803.2" xmlns="http://www.w3.org/1999/xhtml">Property names are case-sensitive so </span><code class="inlineCode"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">CompanyName</span></code><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml"> is different from </span><code class="inlineCode"><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">companyName</span></code><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml">, and will return zero results.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="21"><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">Modify </span><a id="_idIndexMarker375"/><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">the query text to return all products in category 2, as shown in the following query:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-operator"><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml">*</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml"> c </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml"> c.category.categoryId </span><span class="hljs-operator"><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml">Execute the query and note that one product is included in the array of results.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-177"><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">Using the Azure portal to create Azure Cosmos DB resources</span></h2>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml">If you would prefer to only use the Azure Cosmos DB Emulator to avoid any costs, then feel free to skip this section, or just read through it without completing the steps yourself.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml">Now, let’s use the Azure portal to create Azure Cosmos DB resources like an account, database, and</span><a id="_idIndexMarker376"/><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml"> container in the cloud:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml">If you do not have an Azure account, then you can sign up for one for free at the following link: </span><a href="https://azure.microsoft.com/free/"><span class="url"><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml">https://azure.microsoft.com/free/</span></span></a><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">Navigate to the Azure portal and sign in: </span><a href="https://portal.azure.com/"><span class="url"><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml">https://portal.azure.com/</span></span></a><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml">In the Azure portal menu, click </span><strong class="screenText"><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml">+ Create a resource</span></strong><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">On the </span><strong class="screenText"><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml">Create a resource</span></strong><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml"> page, search for, or click, </span><strong class="screenText"><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB</span></strong><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml">, and then on the </span><strong class="screenText"><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB</span></strong><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml"> page, click </span><strong class="screenText"><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml">Create</span></strong><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">On the </span><strong class="screenText"><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">Which API best suits your workload?</span></strong><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml"> page, in the </span><strong class="screenText"><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB for NoSQL</span></strong><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml"> box, note the description, </span><strong class="screenText"><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB’s core, or native API for working with documents. </span><span class="koboSpan" id="kobo.846.2" xmlns="http://www.w3.org/1999/xhtml">Supports fast, flexible development with familiar SQL query language and client libraries for .NET, JavaScript, Python, and Java.</span></strong><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml">, and then click the </span><strong class="screenText"><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml">Create</span></strong><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">On the </span><strong class="screenText"><span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml">Basics</span></strong><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml"> tab:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">Select your </span><strong class="screenText"><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">Subscription</span></strong><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.855.2" xmlns="http://www.w3.org/1999/xhtml">Mine is named </span><code class="inlineCode"><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml">Pay-As-You-Go</span></code><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml">Select a </span><strong class="screenText"><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">Resource Group</span></strong><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml"> or create a new one. </span><span class="koboSpan" id="kobo.860.2" xmlns="http://www.w3.org/1999/xhtml">I used the name </span><code class="inlineCode"><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">apps-services-book</span></code><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">Enter an Azure Cosmos DB </span><strong class="screenText"><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml">Account Name</span></strong><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.865.2" xmlns="http://www.w3.org/1999/xhtml">I used </span><code class="inlineCode"><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml">apps-services-book</span></code><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">Select a </span><strong class="screenText"><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml">Location</span></strong><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.870.2" xmlns="http://www.w3.org/1999/xhtml">I chose </span><strong class="screenText"><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml">(Europe) UK South</span></strong><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml"> as it is the closest to me.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">Set </span><strong class="screenText"><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml">Capacity mode</span></strong><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><strong class="screenText"><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml">Provisioned throughput</span></strong><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">Set </span><strong class="screenText"><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml">Apply Free Tier Discount</span></strong><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><strong class="screenText"><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml">Do not apply</span></strong><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">. 
        </span><div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml">: Only apply the free tier discount now if you want this account to be the </span><em class="italic"><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml">only</span></em><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml"> account within your subscription to be on the free tier. </span><span class="koboSpan" id="kobo.886.2" xmlns="http://www.w3.org/1999/xhtml">You might be better off saving this discount for another account that you might use for a real project, rather than a temporary learning account while reading this book. </span><span class="koboSpan" id="kobo.886.3" xmlns="http://www.w3.org/1999/xhtml">With Azure Cosmos DB free tier, you will get the first 1,000 RU/s and 25 GB of storage for free in an account. </span><span class="koboSpan" id="kobo.886.4" xmlns="http://www.w3.org/1999/xhtml">You can only enable a free tier on one account per subscription. </span><span class="koboSpan" id="kobo.886.5" xmlns="http://www.w3.org/1999/xhtml">Microsoft estimates this has a value of $64/month.</span></p>
</div></li>
</ul>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml">Select the </span><strong class="screenText"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">Limit total account throughput</span></strong><span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml"> check box.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">Next: Global Distribution</span></strong><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml"> button and review the options but leave them at their defaults.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><a id="_idIndexMarker377"/><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml">the </span><strong class="screenText"><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml">Next: Networking</span></strong><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml"> button and review the options but leave them at their defaults.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml">Next: Backup Policy</span></strong><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml"> button and review the options but leave them at their defaults.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml">Next: Encryption</span></strong><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml"> button and review the options but leave them at their defaults.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">Review + create</span></strong><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml">Note the </span><strong class="screenText"><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">Validation Success</span></strong><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml"> message, review the summary, and then click the </span><strong class="screenText"><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">Create</span></strong><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml">Wait for the deployment to complete. </span><span class="koboSpan" id="kobo.911.2" xmlns="http://www.w3.org/1999/xhtml">This will take a few minutes.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">Go to resource</span></strong><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml"> button. </span><span class="koboSpan" id="kobo.914.2" xmlns="http://www.w3.org/1999/xhtml">Note that you are probably directed to the </span><strong class="screenText"><span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml">Quick Start</span></strong><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml"> page with steps to follow to create a container and so on, depending on if this is the first time that you have created an Azure Cosmos DB account.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">In the left navigation, click </span><strong class="screenText"><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">Overview</span></strong><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml">, and note the information about your Azure Cosmos DB account, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.5</span></em><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_05.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.5: Azure Cosmos DB account Overview page</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="16"><span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml">In the navigation on the left, in the </span><strong class="screenText"><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml">Settings</span></strong><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml"> section, click </span><strong class="screenText"><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml">Keys</span></strong><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">, and note the </span><strong class="screenText"><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml">URI</span></strong><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><strong class="screenText"><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY KEY</span></strong><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml"> needed to programmatically work with this Azure Cosmos DB account, as </span><a id="_idIndexMarker378"/><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml">shown in </span><em class="italic"><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.6</span></em><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml">:
    </span><figure class="mediaobject"><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_06.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.6: Keys to programmatically work with the Azure Cosmos DB account</span></p>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml">: Unlike the primary key that is shared by all developers of the Cosmos DB emulator, your Cosmos DB primary keys in Azure are unique and must be kept secret. </span><span class="koboSpan" id="kobo.939.2" xmlns="http://www.w3.org/1999/xhtml">I deleted the Cosmos DB account that I used to write this chapter so the keys in the screenshot above are useless.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="17"><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml">In the navigation on the left, click </span><strong class="screenText"><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml">, and if a video pops up, then close it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml">In the toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">New Container</span></strong><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">Complete the steps listed in the emulator section, </span><em class="italic"><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">Using an emulator on Windows to create Azure Cosmos DB resources</span></em><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml">, starting at </span><em class="italic"><span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml">step 6</span></em><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml"> where you fill in the information about the new container, and going up to the end of that section.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-178"><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml">Using a .NET app to create Azure Cosmos DB resources</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml">Next, we </span><a id="_idIndexMarker379"/><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml">will create a console app project for creating the same Azure Cosmos DB resources in either the local emulator or in the cloud, depending on which URI and primary key you choose to use:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a new project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">Chapter04</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.SqlApi</span></code></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml">In the project file, treat warnings as errors, add a package reference for Azure Cosmos, add a project reference to the Northwind data context project that you created in </span><em class="chapterRef"><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 3</span></em><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml">Building Entity Models for SQL Server Using EF Core</span></em><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml">, and import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml">Console</span></code><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml"> class statically and globally, as shown highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk=</span><span class="hljs-string"><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Sdk"</span></span><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
  &lt;PropertyGroup&gt;
    &lt;OutputType&gt;Exe&lt;/OutputType&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.Azure.Cosmos"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml">"3.37.0"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;ProjectReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.DataContext</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.DataContext.SqlServer.csproj"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;Using Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml">"System.Console"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml"> Static=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">"true"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;/Project&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">Build</span><a id="_idIndexMarker380"/><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.SqlApi</span></code><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml"> project at the command prompt or terminal using the following command: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build</span></code><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml">.
    </span><div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">Warning!</span></strong><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml"> If you are using Visual Studio 2022 and you reference a project outside of the current solution, then using the </span><strong class="screenText"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">Build</span></strong><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml"> menu gives the following error:</span></p>
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml">NU1105 Unable to find project information for 'C:\apps-services-net8\Chapter03\Northwind.Common.DataContext.SqlServer\Northwind.Common.DataContext.SqlServer.csproj'. </span><span class="koboSpan" id="kobo.1010.2" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio, this may be because the project is unloaded or not part of the current solution.</span></code></p>
<p class="normal"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">You must enter a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build</span></code><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml"> command at the command prompt or terminal. </span><span class="koboSpan" id="kobo.1013.2" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml">Solution Explorer</span></strong><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml">, you can right-click the project and select </span><strong class="screenText"><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml">Open in Terminal</span></strong><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml">Add a class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">Program.Helpers.cs</span></code><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml">, delete any existing statements, and then add statements to define a partial </span><code class="inlineCode"><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></code><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml"> class with a method to output a section title to the console, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml">// This is defined in the default empty namespace, so it merges with</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml">// the SDK-generated partial Program class.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></span><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">SectionTitle</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml"> title</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    ConsoleColor previousColor = ForegroundColor;
    ForegroundColor = ConsoleColor.DarkYellow;
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">"*"</span></span><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">$"* </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml">{title}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml">*"</span></span><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">);
    ForegroundColor = previousColor;
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml">Add a class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to import the namespace for working with Azure Cosmos. </span><span class="koboSpan" id="kobo.1051.2" xmlns="http://www.w3.org/1999/xhtml">Then, define a method for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></code><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml"> class that</span><a id="_idIndexMarker381"/><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml"> creates a Cosmos client and uses it to create a database named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml"> and a container named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml">, in either the local emulator or in the cloud, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Azure.Cosmos; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml">// To use CosmosClient and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml"> System.Net; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml">// To use HttpStatusCode.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml">// This is defined in the default empty namespace, so it merges with</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">// the SDK-generated partial Program class.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></span><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml">// To use Azure Cosmos DB in the local emulator.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml"> endpointUri = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:8081/"</span></span><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml"> primaryKey = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml">"C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHL M+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="</span></span><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml">/* </span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml">  // To use Azure Cosmos DB in the cloud.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">  private static string account = "apps-services-book"; // use your account</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml">  private static string endpointUri = </span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml">    $"https://{account}.documents.azure.com:443/";</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml">  private static string primaryKey = "LGrx7H...gZw=="; // use your key</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">  */</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">CreateCosmosResources</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml">"Creating Cosmos resources"</span></span><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml">);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml">(
        accountEndpoint: endpointUri,
        authKeyOrResourceToken: primaryKey))
      {
        DatabaseResponse dbResponse = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml"> client
          .CreateDatabaseIfNotExistsAsync(
            </span><span class="hljs-string"><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">, throughput: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml">400</span></span> <span class="hljs-comment"><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml">/* RU/s */</span></span><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml">);
        </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml"> status = dbResponse.StatusCode </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">switch</span></span><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">
        {
          HttpStatusCode.OK =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">"exists"</span></span><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml">,
          HttpStatusCode.Created =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml">created"</span></span><span class="koboSpan" id="kobo.1120.1" xmlns="http://www.w3.org/1999/xhtml">,
          _ =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1121.1" xmlns="http://www.w3.org/1999/xhtml">"unknown"</span></span><span class="koboSpan" id="kobo.1122.1" xmlns="http://www.w3.org/1999/xhtml">
        };
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1123.1" xmlns="http://www.w3.org/1999/xhtml">"Database Id: {0}, Status: {1}."</span></span><span class="koboSpan" id="kobo.1124.1" xmlns="http://www.w3.org/1999/xhtml">,
          arg0: dbResponse.Database.Id, arg1: status);
        IndexingPolicy indexingPolicy = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1125.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1126.1" xmlns="http://www.w3.org/1999/xhtml">()
        {
          IndexingMode = IndexingMode.Consistent,
          Automatic = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1127.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.1128.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1129.1" xmlns="http://www.w3.org/1999/xhtml">// Items are indexed unless explicitly excluded.</span></span><span class="koboSpan" id="kobo.1130.1" xmlns="http://www.w3.org/1999/xhtml">
          IncludedPaths = { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1131.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1132.1" xmlns="http://www.w3.org/1999/xhtml"> IncludedPath { Path = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1133.1" xmlns="http://www.w3.org/1999/xhtml">"/*"</span></span><span class="koboSpan" id="kobo.1134.1" xmlns="http://www.w3.org/1999/xhtml"> } }
        };
        ContainerProperties containerProperties = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1135.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1136.1" xmlns="http://www.w3.org/1999/xhtml">(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1137.1" xmlns="http://www.w3.org/1999/xhtml">"Products"</span></span><span class="koboSpan" id="kobo.1138.1" xmlns="http://www.w3.org/1999/xhtml">,
          partitionKeyPath: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1139.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1140.1" xmlns="http://www.w3.org/1999/xhtml">/productId"</span></span><span class="koboSpan" id="kobo.1141.1" xmlns="http://www.w3.org/1999/xhtml">)
        {
          IndexingPolicy = indexingPolicy
        };
        ContainerResponse containerResponse = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1142.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1143.1" xmlns="http://www.w3.org/1999/xhtml"> dbResponse.Database
          .CreateContainerIfNotExistsAsync(
            containerProperties, throughput: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1144.1" xmlns="http://www.w3.org/1999/xhtml">1000</span></span> <span class="hljs-comment"><span class="koboSpan" id="kobo.1145.1" xmlns="http://www.w3.org/1999/xhtml">/* RU/s */</span></span><span class="koboSpan" id="kobo.1146.1" xmlns="http://www.w3.org/1999/xhtml">);
        status = dbResponse.StatusCode </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1147.1" xmlns="http://www.w3.org/1999/xhtml">switch</span></span><span class="koboSpan" id="kobo.1148.1" xmlns="http://www.w3.org/1999/xhtml">
        {
          HttpStatusCode.OK =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1149.1" xmlns="http://www.w3.org/1999/xhtml">"exists"</span></span><span class="koboSpan" id="kobo.1150.1" xmlns="http://www.w3.org/1999/xhtml">,
          HttpStatusCode.Created =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1151.1" xmlns="http://www.w3.org/1999/xhtml">"created"</span></span><span class="koboSpan" id="kobo.1152.1" xmlns="http://www.w3.org/1999/xhtml">,
          _ =&gt; </span><span class="hljs-string"><span class="koboSpan" id="kobo.1153.1" xmlns="http://www.w3.org/1999/xhtml">"unknown"</span></span><span class="koboSpan" id="kobo.1154.1" xmlns="http://www.w3.org/1999/xhtml">,
        };
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1155.1" xmlns="http://www.w3.org/1999/xhtml">"Container Id: {0}, Status: {1}."</span></span><span class="koboSpan" id="kobo.1156.1" xmlns="http://www.w3.org/1999/xhtml">,
          arg0: containerResponse.Container.Id, arg1: status);
        Container container = containerResponse.Container;
        ContainerProperties properties = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1157.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1158.1" xmlns="http://www.w3.org/1999/xhtml"> container.ReadContainerAsync();
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1159.1" xmlns="http://www.w3.org/1999/xhtml">$"  PartitionKeyPath: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1160.1" xmlns="http://www.w3.org/1999/xhtml">{properties.PartitionKeyPath}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1161.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1162.1" xmlns="http://www.w3.org/1999/xhtml">);
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1163.1" xmlns="http://www.w3.org/1999/xhtml">$"  LastModified: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1164.1" xmlns="http://www.w3.org/1999/xhtml">{properties.LastModified}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1165.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1166.1" xmlns="http://www.w3.org/1999/xhtml">);
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1167.1" xmlns="http://www.w3.org/1999/xhtml">"  IndexingPolicy.IndexingMode: {0}"</span></span><span class="koboSpan" id="kobo.1168.1" xmlns="http://www.w3.org/1999/xhtml">,
          arg0: properties.IndexingPolicy.IndexingMode);
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1169.1" xmlns="http://www.w3.org/1999/xhtml">"  IndexingPolicy.IncludedPaths: {0}"</span></span><span class="koboSpan" id="kobo.1170.1" xmlns="http://www.w3.org/1999/xhtml">,
          arg0: </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1171.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1172.1" xmlns="http://www.w3.org/1999/xhtml">.Join(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1173.1" xmlns="http://www.w3.org/1999/xhtml">","</span></span><span class="koboSpan" id="kobo.1174.1" xmlns="http://www.w3.org/1999/xhtml">, properties.IndexingPolicy
            .IncludedPaths.Select(path =&gt; path.Path)));
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1175.1" xmlns="http://www.w3.org/1999/xhtml">$"  IndexingPolicy: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1176.1" xmlns="http://www.w3.org/1999/xhtml">{properties.IndexingPolicy}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1177.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1178.1" xmlns="http://www.w3.org/1999/xhtml">);
      }
    }
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1179.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1180.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
    {
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1181.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1182.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1183.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1184.1" xmlns="http://www.w3.org/1999/xhtml">);
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1185.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure that it is running."</span></span><span class="koboSpan" id="kobo.1186.1" xmlns="http://www.w3.org/1999/xhtml">);
    }
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1187.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1188.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
    {
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1189.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.1190.1" xmlns="http://www.w3.org/1999/xhtml">,
        arg0: ex.GetType(),
        arg1: ex.Message);
    }
  }
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1191.1" xmlns="http://www.w3.org/1999/xhtml">Note the following</span><a id="_idIndexMarker382"/><span class="koboSpan" id="kobo.1192.1" xmlns="http://www.w3.org/1999/xhtml"> in the preceding code:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1193.1" xmlns="http://www.w3.org/1999/xhtml">When using the emulator, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1194.1" xmlns="http://www.w3.org/1999/xhtml">endpointUri</span></code><span class="koboSpan" id="kobo.1195.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1196.1" xmlns="http://www.w3.org/1999/xhtml">primaryKey</span></code><span class="koboSpan" id="kobo.1197.1" xmlns="http://www.w3.org/1999/xhtml"> are the same for everyone.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1198.1" xmlns="http://www.w3.org/1999/xhtml">The constructor for a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1199.1" xmlns="http://www.w3.org/1999/xhtml">CosmosClient</span></code><span class="koboSpan" id="kobo.1200.1" xmlns="http://www.w3.org/1999/xhtml"> requires the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1201.1" xmlns="http://www.w3.org/1999/xhtml">endpointUri</span></code><span class="koboSpan" id="kobo.1202.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1203.1" xmlns="http://www.w3.org/1999/xhtml">primaryKey</span></code><span class="koboSpan" id="kobo.1204.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1204.2" xmlns="http://www.w3.org/1999/xhtml">Never store your primary key in your source code and then check it in to a public Git repository! </span><span class="koboSpan" id="kobo.1204.3" xmlns="http://www.w3.org/1999/xhtml">You should get it from an environment variable or other secure place like Azure Key Vault.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1205.1" xmlns="http://www.w3.org/1999/xhtml">When creating a database, you must specify a name and throughput in RUs per second.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1206.1" xmlns="http://www.w3.org/1999/xhtml">When</span><a id="_idIndexMarker383"/><span class="koboSpan" id="kobo.1207.1" xmlns="http://www.w3.org/1999/xhtml"> creating a container, you must specify a name and partition key path, and you can optionally set an indexing policy and override the throughput, which defaults to the database throughput.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1208.1" xmlns="http://www.w3.org/1999/xhtml">The response to a request to create an Azure Cosmos DB resource includes an HTTP status code like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1209.1" xmlns="http://www.w3.org/1999/xhtml">200</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1210.1" xmlns="http://www.w3.org/1999/xhtml">OK</span></code><span class="koboSpan" id="kobo.1211.1" xmlns="http://www.w3.org/1999/xhtml"> if the resource already exists, or </span><code class="inlineCode"><span class="koboSpan" id="kobo.1212.1" xmlns="http://www.w3.org/1999/xhtml">201</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1213.1" xmlns="http://www.w3.org/1999/xhtml">Created</span></code><span class="koboSpan" id="kobo.1214.1" xmlns="http://www.w3.org/1999/xhtml"> if the resource did not exist but has now been successfully created. </span><span class="koboSpan" id="kobo.1214.2" xmlns="http://www.w3.org/1999/xhtml">The response also includes information about the resource like its </span><code class="inlineCode"><span class="koboSpan" id="kobo.1215.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></code><span class="koboSpan" id="kobo.1216.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="7"><span class="koboSpan" id="kobo.1217.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1218.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1219.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements and then add a statement to call the method to create Azure Cosmos resources, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1220.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1221.1" xmlns="http://www.w3.org/1999/xhtml"> CreateCosmosResources();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1222.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the results, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1223.1" xmlns="http://www.w3.org/1999/xhtml">*
* Creating Cosmos resources
*
Database Id: Northwind, Status: exists.
</span><span class="koboSpan" id="kobo.1223.2" xmlns="http://www.w3.org/1999/xhtml">Container Id: Products, Status: exists.
  </span><span class="koboSpan" id="kobo.1223.3" xmlns="http://www.w3.org/1999/xhtml">PartitionKeyPath: /productId
  LastModified: 04/07/2022 11:11:31
  IndexingPolicy.IndexingMode: Consistent
  IndexingPolicy.IncludedPaths: /*
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1224.1" xmlns="http://www.w3.org/1999/xhtml">In the Azure Cosmos DB Emulator or Azure portal, use </span><strong class="screenText"><span class="koboSpan" id="kobo.1225.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.1226.1" xmlns="http://www.w3.org/1999/xhtml"> to delete the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1227.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1228.1" xmlns="http://www.w3.org/1999/xhtml"> database. </span><span class="koboSpan" id="kobo.1228.2" xmlns="http://www.w3.org/1999/xhtml">(You must hover your mouse cursor over the database and then click the </span><strong class="screenText"><span class="koboSpan" id="kobo.1229.1" xmlns="http://www.w3.org/1999/xhtml">…</span></strong><span class="koboSpan" id="kobo.1230.1" xmlns="http://www.w3.org/1999/xhtml"> ellipsis button.) You will be prompted to enter its name to confirm deletion because this operation cannot be undone.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1231.1" xmlns="http://www.w3.org/1999/xhtml">It is important to delete the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1232.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1233.1" xmlns="http://www.w3.org/1999/xhtml"> database at this point. </span><span class="koboSpan" id="kobo.1233.2" xmlns="http://www.w3.org/1999/xhtml">Later in this chapter, you will programmatically add the 77 products from the SQL Server </span><code class="inlineCode"><span class="koboSpan" id="kobo.1234.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1235.1" xmlns="http://www.w3.org/1999/xhtml"> database to the Cosmos DB </span><code class="inlineCode"><span class="koboSpan" id="kobo.1236.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1237.1" xmlns="http://www.w3.org/1999/xhtml"> database. </span><span class="koboSpan" id="kobo.1237.2" xmlns="http://www.w3.org/1999/xhtml">If you still have the three sample products in its </span><code class="inlineCode"><span class="koboSpan" id="kobo.1238.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1239.1" xmlns="http://www.w3.org/1999/xhtml"> container, then you will have issues.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="10"><span class="koboSpan" id="kobo.1240.1" xmlns="http://www.w3.org/1999/xhtml">Run the </span><a id="_idIndexMarker384"/><span class="koboSpan" id="kobo.1241.1" xmlns="http://www.w3.org/1999/xhtml">console app and note that because we have just deleted the database, the code we have executed has (re)created the database, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1242.1" xmlns="http://www.w3.org/1999/xhtml">*
* Creating Cosmos resources
*
Database Id: Northwind, Status: created.
</span><span class="koboSpan" id="kobo.1242.2" xmlns="http://www.w3.org/1999/xhtml">Container Id: Products, Status: created.
  </span><span class="koboSpan" id="kobo.1242.3" xmlns="http://www.w3.org/1999/xhtml">PartitionKeyPath: /productId
  LastModified: 04/07/2022 11:11:31
  IndexingPolicy.IndexingMode: Consistent
  IndexingPolicy.IncludedPaths: /*
</span></code></pre>
</li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1243.1" xmlns="http://www.w3.org/1999/xhtml">You do not need to delete the database again because it will be empty of any products.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1244.1" xmlns="http://www.w3.org/1999/xhtml">We now have a Cosmos DB database resource to work with, either in the local emulator or in the Azure cloud. </span><span class="koboSpan" id="kobo.1244.2" xmlns="http://www.w3.org/1999/xhtml">Now, let’s learn how to perform CRUD operations on it using the SQL API.</span></p>
<h1 class="heading-1" id="_idParaDest-179"><span class="koboSpan" id="kobo.1245.1" xmlns="http://www.w3.org/1999/xhtml">Manipulating data with the Core (SQL) API</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1246.1" xmlns="http://www.w3.org/1999/xhtml">The most </span><a id="_idIndexMarker385"/><span class="koboSpan" id="kobo.1247.1" xmlns="http://www.w3.org/1999/xhtml">common API for working with data in Azure Cosmos DB is Core (SQL).</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1248.1" xmlns="http://www.w3.org/1999/xhtml">The full documentation for the Core (SQL) API can be found at the following link: </span><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/sql/"><span class="url"><span class="koboSpan" id="kobo.1249.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/sql/</span></span></a><span class="koboSpan" id="kobo.1250.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-180"><span class="koboSpan" id="kobo.1251.1" xmlns="http://www.w3.org/1999/xhtml">Performing CRUD operations with the Cosmos SQL API</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1252.1" xmlns="http://www.w3.org/1999/xhtml">You can </span><a id="_idIndexMarker386"/><span class="koboSpan" id="kobo.1253.1" xmlns="http://www.w3.org/1999/xhtml">perform CRUD operations on JSON documents in Cosmos with the SQL API by calling the following most common overloads of methods on an instance of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1254.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.Azure.Cosmos.Container</span></code><span class="koboSpan" id="kobo.1255.1" xmlns="http://www.w3.org/1999/xhtml"> class:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1256.1" xmlns="http://www.w3.org/1999/xhtml">ReadItemAsync&lt;T&gt;(id, partitionKey)</span></code><span class="koboSpan" id="kobo.1257.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1258.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1259.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to get, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1260.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1261.1" xmlns="http://www.w3.org/1999/xhtml"> is its unique identifier, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1262.1" xmlns="http://www.w3.org/1999/xhtml">partitionKey</span></code><span class="koboSpan" id="kobo.1263.1" xmlns="http://www.w3.org/1999/xhtml"> is its partition key value.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1264.1" xmlns="http://www.w3.org/1999/xhtml">ReadManyItemsAsync&lt;T&gt;(idsAndPartitionKeys)</span></code><span class="koboSpan" id="kobo.1265.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1266.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1267.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to get, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1268.1" xmlns="http://www.w3.org/1999/xhtml">idsAndPartitionKeys</span></code><span class="koboSpan" id="kobo.1269.1" xmlns="http://www.w3.org/1999/xhtml"> are the unique identifiers and partition key values of a read-only list of items to retrieve.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1270.1" xmlns="http://www.w3.org/1999/xhtml">CreateItemAsync(object)</span></code><span class="koboSpan" id="kobo.1271.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1272.1" xmlns="http://www.w3.org/1999/xhtml">object</span></code><span class="koboSpan" id="kobo.1273.1" xmlns="http://www.w3.org/1999/xhtml"> is an instance of the item type to insert.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1274.1" xmlns="http://www.w3.org/1999/xhtml">DeleteItemAsync&lt;T&gt;(id, partitionKey)</span></code><span class="koboSpan" id="kobo.1275.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1276.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1277.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to delete, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1278.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1279.1" xmlns="http://www.w3.org/1999/xhtml"> is its unique identifier, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1280.1" xmlns="http://www.w3.org/1999/xhtml">partitionKey</span></code><span class="koboSpan" id="kobo.1281.1" xmlns="http://www.w3.org/1999/xhtml"> is its partition key value.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1282.1" xmlns="http://www.w3.org/1999/xhtml">PatchItemAsync&lt;T&gt;(id, partitionKey</span></code><span class="koboSpan" id="kobo.1283.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1284.1" xmlns="http://www.w3.org/1999/xhtml">patchOperations)</span></code><span class="koboSpan" id="kobo.1285.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1286.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1287.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to update, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1288.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1289.1" xmlns="http://www.w3.org/1999/xhtml"> is its unique identifier, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1290.1" xmlns="http://www.w3.org/1999/xhtml">partitionKey</span></code><span class="koboSpan" id="kobo.1291.1" xmlns="http://www.w3.org/1999/xhtml"> is its partition key value, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1292.1" xmlns="http://www.w3.org/1999/xhtml">patchOperations</span></code><span class="koboSpan" id="kobo.1293.1" xmlns="http://www.w3.org/1999/xhtml"> is a read-only list of property changes.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1294.1" xmlns="http://www.w3.org/1999/xhtml">ReplaceItemAsync&lt;T&gt;(object</span></code><span class="koboSpan" id="kobo.1295.1" xmlns="http://www.w3.org/1999/xhtml">,</span><code class="inlineCode"><span class="koboSpan" id="kobo.1296.1" xmlns="http://www.w3.org/1999/xhtml"> id)</span></code><span class="koboSpan" id="kobo.1297.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1298.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1299.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to replace, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1300.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1301.1" xmlns="http://www.w3.org/1999/xhtml"> is its unique identifier, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1302.1" xmlns="http://www.w3.org/1999/xhtml">object</span></code><span class="koboSpan" id="kobo.1303.1" xmlns="http://www.w3.org/1999/xhtml"> is an instance of the item type to replace it with. </span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1304.1" xmlns="http://www.w3.org/1999/xhtml">UpsertItemAsync&lt;T&gt;(object</span></code><span class="koboSpan" id="kobo.1305.1" xmlns="http://www.w3.org/1999/xhtml">,</span><code class="inlineCode"><span class="koboSpan" id="kobo.1306.1" xmlns="http://www.w3.org/1999/xhtml"> id)</span></code><span class="koboSpan" id="kobo.1307.1" xmlns="http://www.w3.org/1999/xhtml">: Where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1308.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1309.1" xmlns="http://www.w3.org/1999/xhtml"> is the item type to either insert or replace, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1310.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1311.1" xmlns="http://www.w3.org/1999/xhtml"> is its unique identifier, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1312.1" xmlns="http://www.w3.org/1999/xhtml">object</span></code><span class="koboSpan" id="kobo.1313.1" xmlns="http://www.w3.org/1999/xhtml"> is an instance of the item type to insert or replace the existing item with.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1314.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1315.1" xmlns="http://www.w3.org/1999/xhtml">: Cosmos DB uses HTTP as its underlying communication protocol and so the “patch” and “replace” operations are implemented using </span><code class="inlineCode"><span class="koboSpan" id="kobo.1316.1" xmlns="http://www.w3.org/1999/xhtml">PATCH</span></code><span class="koboSpan" id="kobo.1317.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1318.1" xmlns="http://www.w3.org/1999/xhtml">PUT</span></code><span class="koboSpan" id="kobo.1319.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1319.2" xmlns="http://www.w3.org/1999/xhtml">Just like those HTTP methods, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1320.1" xmlns="http://www.w3.org/1999/xhtml">PATCH</span></code><span class="koboSpan" id="kobo.1321.1" xmlns="http://www.w3.org/1999/xhtml"> is more efficient because only the properties that need to change are sent in the request.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1322.1" xmlns="http://www.w3.org/1999/xhtml">Each method</span><a id="_idIndexMarker387"/><span class="koboSpan" id="kobo.1323.1" xmlns="http://www.w3.org/1999/xhtml"> returns a response that has the following common properties:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1324.1" xmlns="http://www.w3.org/1999/xhtml">Resource</span></code><span class="koboSpan" id="kobo.1325.1" xmlns="http://www.w3.org/1999/xhtml">: The item that was created/retrieved/updated/deleted.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1326.1" xmlns="http://www.w3.org/1999/xhtml">RequestCharge</span></code><span class="koboSpan" id="kobo.1327.1" xmlns="http://www.w3.org/1999/xhtml">: A </span><code class="inlineCode"><span class="koboSpan" id="kobo.1328.1" xmlns="http://www.w3.org/1999/xhtml">double</span></code><span class="koboSpan" id="kobo.1329.1" xmlns="http://www.w3.org/1999/xhtml"> value indicating the request charge measured in RUs.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1330.1" xmlns="http://www.w3.org/1999/xhtml">StatusCode</span></code><span class="koboSpan" id="kobo.1331.1" xmlns="http://www.w3.org/1999/xhtml">: An HTTP status code value; for example, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1332.1" xmlns="http://www.w3.org/1999/xhtml">404</span></code><span class="koboSpan" id="kobo.1333.1" xmlns="http://www.w3.org/1999/xhtml"> when a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1334.1" xmlns="http://www.w3.org/1999/xhtml">ReadItemAsync&lt;T&gt;</span></code><span class="koboSpan" id="kobo.1335.1" xmlns="http://www.w3.org/1999/xhtml"> request fails to find the item.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1336.1" xmlns="http://www.w3.org/1999/xhtml">Headers</span></code><span class="koboSpan" id="kobo.1337.1" xmlns="http://www.w3.org/1999/xhtml">: A dictionary of HTTP response headers.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1338.1" xmlns="http://www.w3.org/1999/xhtml">Diagnostics</span></code><span class="koboSpan" id="kobo.1339.1" xmlns="http://www.w3.org/1999/xhtml">: Useful information for diagnostics.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1340.1" xmlns="http://www.w3.org/1999/xhtml">ActivityId</span></code><span class="koboSpan" id="kobo.1341.1" xmlns="http://www.w3.org/1999/xhtml">: A GUID value that is useful for tracking this activity through multi-tiered services.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.1342.1" xmlns="http://www.w3.org/1999/xhtml">Let’s copy all the products from the Northwind database in SQL Server to Cosmos.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1343.1" xmlns="http://www.w3.org/1999/xhtml">Since the </span><a id="_idIndexMarker388"/><span class="koboSpan" id="kobo.1344.1" xmlns="http://www.w3.org/1999/xhtml">entity classes in the EF Core for SQL Server class libraries are designed for the normalized data structure in the Northwind SQL database, we will create new classes to represent items in Cosmos that have embedded related data. </span><span class="koboSpan" id="kobo.1344.2" xmlns="http://www.w3.org/1999/xhtml">They will use JSON casing conventions since they represent JSON documents:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1345.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1346.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.SqlApi</span></code><span class="koboSpan" id="kobo.1347.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new folder named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1348.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1349.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1350.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1351.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1352.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1353.1" xmlns="http://www.w3.org/1999/xhtml">CategoryCosmos.cs</span></code><span class="koboSpan" id="kobo.1354.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1355.1" xmlns="http://www.w3.org/1999/xhtml">Modify its content to define a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1356.1" xmlns="http://www.w3.org/1999/xhtml">CategoryCosmos</span></code><span class="koboSpan" id="kobo.1357.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1358.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1359.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.Items</span></span><span class="koboSpan" id="kobo.1360.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1361.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1362.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1363.1" xmlns="http://www.w3.org/1999/xhtml">CategoryCosmos</span></span><span class="koboSpan" id="kobo.1364.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1365.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1366.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1367.1" xmlns="http://www.w3.org/1999/xhtml"> categoryId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1368.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1369.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1370.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1371.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1372.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1373.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1374.1" xmlns="http://www.w3.org/1999/xhtml"> categoryName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1375.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1376.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1377.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1378.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1379.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1380.1" xmlns="http://www.w3.org/1999/xhtml">!;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1381.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1382.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1383.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1383.2" xmlns="http://www.w3.org/1999/xhtml">description { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1384.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1385.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1386.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1387.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1388.1" xmlns="http://www.w3.org/1999/xhtml">We must deliberately not follow usual .NET casing conventions because we cannot dynamically manipulate the serialization and the resulting JSON must use camel case.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.1389.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1390.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1391.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1392.1" xmlns="http://www.w3.org/1999/xhtml">SupplierCosmos.cs</span></code><span class="koboSpan" id="kobo.1393.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its content to define a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1394.1" xmlns="http://www.w3.org/1999/xhtml">SupplierCosmos</span></code><span class="koboSpan" id="kobo.1395.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1396.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1397.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.Items</span></span><span class="koboSpan" id="kobo.1398.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1399.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1400.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1401.1" xmlns="http://www.w3.org/1999/xhtml">SupplierCosmos</span></span><span class="koboSpan" id="kobo.1402.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1403.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1404.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1405.1" xmlns="http://www.w3.org/1999/xhtml"> supplierId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1406.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1407.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1408.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1409.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1410.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1411.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1412.1" xmlns="http://www.w3.org/1999/xhtml"> companyName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1413.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1414.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1415.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1416.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1417.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1418.1" xmlns="http://www.w3.org/1999/xhtml">!;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1419.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1420.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1421.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1421.2" xmlns="http://www.w3.org/1999/xhtml">contactName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1422.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1423.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1424.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1425.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1426.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1427.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1428.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1428.2" xmlns="http://www.w3.org/1999/xhtml">contactTitle { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1429.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1430.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1431.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1432.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1433.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1434.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1435.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1435.2" xmlns="http://www.w3.org/1999/xhtml">address { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1436.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1437.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1438.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1439.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1440.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1441.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1442.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1442.2" xmlns="http://www.w3.org/1999/xhtml">city { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1443.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1444.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1445.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1446.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1447.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1448.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1449.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1449.2" xmlns="http://www.w3.org/1999/xhtml">region { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1450.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1451.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1452.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1453.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1454.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1455.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1456.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1456.2" xmlns="http://www.w3.org/1999/xhtml">postalCode { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1457.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1458.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1459.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1460.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1461.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1462.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1463.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1463.2" xmlns="http://www.w3.org/1999/xhtml">country { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1464.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1465.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1466.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1467.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1468.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1469.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1470.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1470.2" xmlns="http://www.w3.org/1999/xhtml">phone { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1471.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1472.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1473.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1474.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1475.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1476.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1477.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1477.2" xmlns="http://www.w3.org/1999/xhtml">fax { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1478.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1479.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1480.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1481.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1482.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1483.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1484.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1484.2" xmlns="http://www.w3.org/1999/xhtml">homePage { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1485.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1486.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1487.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1488.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1489.1" xmlns="http://www.w3.org/1999/xhtml">In</span><a id="_idIndexMarker389"/><span class="koboSpan" id="kobo.1490.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1491.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1492.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1493.1" xmlns="http://www.w3.org/1999/xhtml">ProductCosmos.cs</span></code><span class="koboSpan" id="kobo.1494.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its content to define a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1495.1" xmlns="http://www.w3.org/1999/xhtml">ProductCosmos</span></code><span class="koboSpan" id="kobo.1496.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1497.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1498.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.CosmosDb.Items</span></span><span class="koboSpan" id="kobo.1499.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1500.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1501.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1502.1" xmlns="http://www.w3.org/1999/xhtml">ProductCosmos</span></span><span class="koboSpan" id="kobo.1503.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1504.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1505.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1506.1" xmlns="http://www.w3.org/1999/xhtml"> id { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1507.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1508.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1509.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1510.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1511.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1512.1" xmlns="http://www.w3.org/1999/xhtml">!;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1513.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1514.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1515.1" xmlns="http://www.w3.org/1999/xhtml"> productId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1516.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1517.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1518.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1519.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1520.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1521.1" xmlns="http://www.w3.org/1999/xhtml">!;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1522.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1523.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1524.1" xmlns="http://www.w3.org/1999/xhtml"> productName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1525.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1526.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1527.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1528.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1529.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1530.1" xmlns="http://www.w3.org/1999/xhtml">!;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1531.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1532.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1533.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1533.2" xmlns="http://www.w3.org/1999/xhtml">quantityPerUnit { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1534.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1535.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1536.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1537.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1538.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1539.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.1540.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1540.2" xmlns="http://www.w3.org/1999/xhtml">unitPrice { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1541.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1542.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1543.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1544.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1545.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1546.1" xmlns="http://www.w3.org/1999/xhtml">short</span></span><span class="koboSpan" id="kobo.1547.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1547.2" xmlns="http://www.w3.org/1999/xhtml">unitsInStock { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1548.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1549.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1550.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1551.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1552.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1553.1" xmlns="http://www.w3.org/1999/xhtml">short</span></span><span class="koboSpan" id="kobo.1554.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1554.2" xmlns="http://www.w3.org/1999/xhtml">unitsOnOrder { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1555.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1556.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1557.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1558.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1559.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1560.1" xmlns="http://www.w3.org/1999/xhtml">short</span></span><span class="koboSpan" id="kobo.1561.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1561.2" xmlns="http://www.w3.org/1999/xhtml">reorderLevel { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1562.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1563.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1564.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1565.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1566.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1567.1" xmlns="http://www.w3.org/1999/xhtml">bool</span></span><span class="koboSpan" id="kobo.1568.1" xmlns="http://www.w3.org/1999/xhtml"> discontinued { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1569.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1570.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1571.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1572.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1573.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1574.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryCosmos? </span><span class="koboSpan" id="kobo.1574.2" xmlns="http://www.w3.org/1999/xhtml">category { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1575.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1576.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1577.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1578.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1579.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1580.1" xmlns="http://www.w3.org/1999/xhtml"> SupplierCosmos? </span><span class="koboSpan" id="kobo.1580.2" xmlns="http://www.w3.org/1999/xhtml">supplier { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1581.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1582.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1583.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1584.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1585.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1586.1" xmlns="http://www.w3.org/1999/xhtml">: All JSON document items in Cosmos must have an </span><code class="inlineCode"><span class="koboSpan" id="kobo.1587.1" xmlns="http://www.w3.org/1999/xhtml">id</span></code><span class="koboSpan" id="kobo.1588.1" xmlns="http://www.w3.org/1999/xhtml"> property. </span><span class="koboSpan" id="kobo.1588.2" xmlns="http://www.w3.org/1999/xhtml">To control the value, it is good practice to explicitly define that property in the model. </span><span class="koboSpan" id="kobo.1588.3" xmlns="http://www.w3.org/1999/xhtml">Otherwise, the system will assign a GUID value, as you saw earlier in this chapter when using the </span><strong class="screenText"><span class="koboSpan" id="kobo.1589.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.1590.1" xmlns="http://www.w3.org/1999/xhtml"> to manually add a new item.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.1591.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1592.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1593.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to import namespaces for the Northwind data context and entities types, the Northwind Cosmos types, and EF Core extensions, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1594.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1595.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1596.1" xmlns="http://www.w3.org/1999/xhtml">// To use NorthwindContext and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1597.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1598.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.CosmosDb.Items; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1599.1" xmlns="http://www.w3.org/1999/xhtml">// To use ProductCosmos and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1600.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1601.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1602.1" xmlns="http://www.w3.org/1999/xhtml">// To use Include extension method.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1603.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1604.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1605.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to get all the products in the Northwind SQL database, including their related category and </span><a id="_idIndexMarker390"/><span class="koboSpan" id="kobo.1606.1" xmlns="http://www.w3.org/1999/xhtml">supplier, and then insert them as new items in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1607.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1608.1" xmlns="http://www.w3.org/1999/xhtml"> container in Cosmos, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1609.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1610.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1611.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1612.1" xmlns="http://www.w3.org/1999/xhtml">CreateProductItems</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1613.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1614.1" xmlns="http://www.w3.org/1999/xhtml">
{
  SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1615.1" xmlns="http://www.w3.org/1999/xhtml">"Creating product items"</span></span><span class="koboSpan" id="kobo.1616.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1617.1" xmlns="http://www.w3.org/1999/xhtml">double</span></span><span class="koboSpan" id="kobo.1618.1" xmlns="http://www.w3.org/1999/xhtml"> totalCharge = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1619.1" xmlns="http://www.w3.org/1999/xhtml">0.0</span></span><span class="koboSpan" id="kobo.1620.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1621.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.1622.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1623.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1624.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1625.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1626.1" xmlns="http://www.w3.org/1999/xhtml">(
      accountEndpoint: endpointUri,
      authKeyOrResourceToken: primaryKey))
    {
      Container container = client.GetContainer(
        databaseId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1627.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.1628.1" xmlns="http://www.w3.org/1999/xhtml">, containerId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1629.1" xmlns="http://www.w3.org/1999/xhtml">"Products"</span></span><span class="koboSpan" id="kobo.1630.1" xmlns="http://www.w3.org/1999/xhtml">);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1631.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1632.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindContext db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1633.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1634.1" xmlns="http://www.w3.org/1999/xhtml">())
      {
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1635.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1636.1" xmlns="http://www.w3.org/1999/xhtml"> (!db.Database.CanConnect())
        {
          WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1637.1" xmlns="http://www.w3.org/1999/xhtml">"Cannot connect to the SQL Server database to "</span></span><span class="koboSpan" id="kobo.1638.1" xmlns="http://www.w3.org/1999/xhtml"> +
            </span><span class="hljs-string"><span class="koboSpan" id="kobo.1639.1" xmlns="http://www.w3.org/1999/xhtml">" read products using database connection string: "</span></span><span class="koboSpan" id="kobo.1640.1" xmlns="http://www.w3.org/1999/xhtml"> +
            db.Database.GetConnectionString());
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1641.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.1642.1" xmlns="http://www.w3.org/1999/xhtml">;
        }
        ProductCosmos[] products = db.Products
          </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1643.1" xmlns="http://www.w3.org/1999/xhtml">// Get the related data for embedding.</span></span><span class="koboSpan" id="kobo.1644.1" xmlns="http://www.w3.org/1999/xhtml">
          .Include(p =&gt; p.Category)
          .Include(p =&gt; p.Supplier)
          </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1645.1" xmlns="http://www.w3.org/1999/xhtml">// Filter any products with null category or supplier</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1646.1" xmlns="http://www.w3.org/1999/xhtml">// to avoid null warnings.</span></span><span class="koboSpan" id="kobo.1647.1" xmlns="http://www.w3.org/1999/xhtml">
          .Where(p =&gt; (p.Category != </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1648.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1649.1" xmlns="http://www.w3.org/1999/xhtml">) &amp;&amp; (p.Supplier != </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1650.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1651.1" xmlns="http://www.w3.org/1999/xhtml">))
          </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1652.1" xmlns="http://www.w3.org/1999/xhtml">// Project the EF Core entities into Cosmos JSON types.</span></span><span class="koboSpan" id="kobo.1653.1" xmlns="http://www.w3.org/1999/xhtml">
          .Select(p =&gt; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1654.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1655.1" xmlns="http://www.w3.org/1999/xhtml"> ProductCosmos
          {
            id = p.ProductId.ToString(),
            productId = p.ProductId.ToString(),
            productName = p.ProductName,
            quantityPerUnit = p.QuantityPerUnit,
            </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1656.1" xmlns="http://www.w3.org/1999/xhtml">// If the related category is null, store null,</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1657.1" xmlns="http://www.w3.org/1999/xhtml">// // else store the category mapped to Cosmos model.</span></span><span class="koboSpan" id="kobo.1658.1" xmlns="http://www.w3.org/1999/xhtml">
            category = p.Category == </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1659.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1660.1" xmlns="http://www.w3.org/1999/xhtml"> ? </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1661.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1662.1" xmlns="http://www.w3.org/1999/xhtml"> : 
              </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1663.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1664.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryCosmos
            {
              categoryId = p.Category.CategoryId,
              categoryName = p.Category.CategoryName,
              description = p.Category.Description
            },
            supplier = p.Supplier == </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1665.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1666.1" xmlns="http://www.w3.org/1999/xhtml"> ? </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1667.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1668.1" xmlns="http://www.w3.org/1999/xhtml"> :
              </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1669.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1670.1" xmlns="http://www.w3.org/1999/xhtml"> SupplierCosmos
            {
              supplierId = p.Supplier.SupplierId,
              companyName = p.Supplier.CompanyName,
              contactName = p.Supplier.ContactName,
              contactTitle = p.Supplier.ContactTitle,
              address = p.Supplier.Address,
              city = p.Supplier.City,
              country = p.Supplier.Country,
              postalCode = p.Supplier.PostalCode,
              region = p.Supplier.Region,
              phone = p.Supplier.Phone,
              fax = p.Supplier.Fax,
              homePage = p.Supplier.HomePage
            },
            unitPrice = p.UnitPrice,
            unitsInStock = p.UnitsInStock,
            reorderLevel = p.ReorderLevel,
            unitsOnOrder = p.UnitsOnOrder,
            discontinued = p.Discontinued,
          })
          .ToArray();
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1671.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1672.1" xmlns="http://www.w3.org/1999/xhtml"> (ProductCosmos product </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1673.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1674.1" xmlns="http://www.w3.org/1999/xhtml"> products)
        {
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1675.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.1676.1" xmlns="http://www.w3.org/1999/xhtml">
          {
            </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1677.1" xmlns="http://www.w3.org/1999/xhtml">// Try to read the item to see if it exists.</span></span><span class="koboSpan" id="kobo.1678.1" xmlns="http://www.w3.org/1999/xhtml">
            ItemResponse&lt;ProductCosmos&gt; productResponse =
              </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1679.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1680.1" xmlns="http://www.w3.org/1999/xhtml"> container.ReadItemAsync&lt;ProductCosmos&gt;(
              id: product.id, </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1681.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1682.1" xmlns="http://www.w3.org/1999/xhtml"> PartitionKey(product.productId));
            WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1683.1" xmlns="http://www.w3.org/1999/xhtml">"Item with id: {0} exists. </span><span class="koboSpan" id="kobo.1683.2" xmlns="http://www.w3.org/1999/xhtml">Query consumed {1} RUs."</span></span><span class="koboSpan" id="kobo.1684.1" xmlns="http://www.w3.org/1999/xhtml">,
              productResponse.Resource.id, productResponse.RequestCharge);
            totalCharge += productResponse.RequestCharge;
          }
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1685.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1686.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosException ex) 
            </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1687.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1688.1" xmlns="http://www.w3.org/1999/xhtml"> (ex.StatusCode == HttpStatusCode.NotFound)
          {
            </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1689.1" xmlns="http://www.w3.org/1999/xhtml">// Create the item if it does not exist.</span></span><span class="koboSpan" id="kobo.1690.1" xmlns="http://www.w3.org/1999/xhtml">
            ItemResponse&lt;ProductCosmos&gt; productResponse =
              </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1691.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1692.1" xmlns="http://www.w3.org/1999/xhtml"> container.CreateItemAsync(product);
            WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1693.1" xmlns="http://www.w3.org/1999/xhtml">"Created item with id: {0}. </span><span class="koboSpan" id="kobo.1693.2" xmlns="http://www.w3.org/1999/xhtml">Insert consumed {1} RUs."</span></span><span class="koboSpan" id="kobo.1694.1" xmlns="http://www.w3.org/1999/xhtml">,
              productResponse.Resource.id, productResponse.RequestCharge);
            totalCharge += productResponse.RequestCharge;
          }
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1695.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1696.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
          {
            WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1697.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.1698.1" xmlns="http://www.w3.org/1999/xhtml">,
              arg0: ex.GetType(),
              arg1: ex.Message);
          }
        }
      }
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1699.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1700.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1701.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1702.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1703.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1704.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1705.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."</span></span><span class="koboSpan" id="kobo.1706.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1707.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1708.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1709.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.1710.1" xmlns="http://www.w3.org/1999/xhtml">,
      arg0: ex.GetType(),
      arg1: ex.Message);
  }
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1711.1" xmlns="http://www.w3.org/1999/xhtml">"Total requests charge: {0:N2} RUs"</span></span><span class="koboSpan" id="kobo.1712.1" xmlns="http://www.w3.org/1999/xhtml">, totalCharge);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1713.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1714.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1715.1" xmlns="http://www.w3.org/1999/xhtml">, comment</span><a id="_idIndexMarker391"/><span class="koboSpan" id="kobo.1716.1" xmlns="http://www.w3.org/1999/xhtml"> out the call to create the Azure Cosmos resources, and then add a statement to call the method to insert all the products, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1717.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1718.1" xmlns="http://www.w3.org/1999/xhtml"> CreateProductItems();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1719.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the results, which should be 77 product items inserted, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1720.1" xmlns="http://www.w3.org/1999/xhtml">*
* Creating product items
*
Created item with id: 1. </span><span class="koboSpan" id="kobo.1720.2" xmlns="http://www.w3.org/1999/xhtml">Insert consumed 14.29 RUs.
</span><span class="koboSpan" id="kobo.1720.3" xmlns="http://www.w3.org/1999/xhtml">Created item with id: 2. </span><span class="koboSpan" id="kobo.1720.4" xmlns="http://www.w3.org/1999/xhtml">Insert consumed 14.29 RUs.
</span><span class="koboSpan" id="kobo.1720.5" xmlns="http://www.w3.org/1999/xhtml">Created item with id: 3. </span><span class="koboSpan" id="kobo.1720.6" xmlns="http://www.w3.org/1999/xhtml">Insert consumed 14.29 RUs.
</span><span class="koboSpan" id="kobo.1720.7" xmlns="http://www.w3.org/1999/xhtml">...
</span><span class="koboSpan" id="kobo.1720.8" xmlns="http://www.w3.org/1999/xhtml">Created item with id: 76. </span><span class="koboSpan" id="kobo.1720.9" xmlns="http://www.w3.org/1999/xhtml">Insert consumed 14.29 RUs.
</span><span class="koboSpan" id="kobo.1720.10" xmlns="http://www.w3.org/1999/xhtml">Created item with id: 77. </span><span class="koboSpan" id="kobo.1720.11" xmlns="http://www.w3.org/1999/xhtml">Insert consumed 14.48 RUs.
</span><span class="koboSpan" id="kobo.1720.12" xmlns="http://www.w3.org/1999/xhtml">Total requests charge: 1,114.58 RUs
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1721.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app again and note the results, which should show that the product items already exist, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1722.1" xmlns="http://www.w3.org/1999/xhtml">*
* Creating product items
*
Item with id: 1 exists. </span><span class="koboSpan" id="kobo.1722.2" xmlns="http://www.w3.org/1999/xhtml">Query consumed 1 RUs.
</span><span class="koboSpan" id="kobo.1722.3" xmlns="http://www.w3.org/1999/xhtml">Item with id: 2 exists. </span><span class="koboSpan" id="kobo.1722.4" xmlns="http://www.w3.org/1999/xhtml">Query consumed 1 RUs.
</span><span class="koboSpan" id="kobo.1722.5" xmlns="http://www.w3.org/1999/xhtml">Item with id: 3 exists. </span><span class="koboSpan" id="kobo.1722.6" xmlns="http://www.w3.org/1999/xhtml">Query consumed 1 RUs.
</span><span class="koboSpan" id="kobo.1722.7" xmlns="http://www.w3.org/1999/xhtml">...
</span><span class="koboSpan" id="kobo.1722.8" xmlns="http://www.w3.org/1999/xhtml">Item with id: 76 exists. </span><span class="koboSpan" id="kobo.1722.9" xmlns="http://www.w3.org/1999/xhtml">Query consumed 1 RUs.
</span><span class="koboSpan" id="kobo.1722.10" xmlns="http://www.w3.org/1999/xhtml">Item with id: 77 exists. </span><span class="koboSpan" id="kobo.1722.11" xmlns="http://www.w3.org/1999/xhtml">Query consumed 1 RUs.
</span><span class="koboSpan" id="kobo.1722.12" xmlns="http://www.w3.org/1999/xhtml">Total requests charge: 77.00 RUs
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1723.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><a id="_idIndexMarker392"/><span class="koboSpan" id="kobo.1724.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB Emulator or Azure portal </span><strong class="screenText"><span class="koboSpan" id="kobo.1725.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.1726.1" xmlns="http://www.w3.org/1999/xhtml">, confirm that there are 77 product items in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1727.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1728.1" xmlns="http://www.w3.org/1999/xhtml"> container.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1729.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1730.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1731.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to list all the items in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1732.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1733.1" xmlns="http://www.w3.org/1999/xhtml"> container, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1734.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1735.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1736.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1737.1" xmlns="http://www.w3.org/1999/xhtml">ListProductItems</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1738.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1739.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1740.1" xmlns="http://www.w3.org/1999/xhtml"> sqlText = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1741.1" xmlns="http://www.w3.org/1999/xhtml">"SELECT * FROM c"</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1742.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1743.1" xmlns="http://www.w3.org/1999/xhtml">
{
  SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1744.1" xmlns="http://www.w3.org/1999/xhtml">"Listing product items"</span></span><span class="koboSpan" id="kobo.1745.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1746.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.1747.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1748.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1749.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1750.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1751.1" xmlns="http://www.w3.org/1999/xhtml">(
      accountEndpoint: endpointUri,
      authKeyOrResourceToken: primaryKey))
    {
      Container container = client.GetContainer(
        databaseId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1752.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.1753.1" xmlns="http://www.w3.org/1999/xhtml">, containerId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1754.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1755.1" xmlns="http://www.w3.org/1999/xhtml">Products"</span></span><span class="koboSpan" id="kobo.1756.1" xmlns="http://www.w3.org/1999/xhtml">);
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1757.1" xmlns="http://www.w3.org/1999/xhtml">"Running query: {0}"</span></span><span class="koboSpan" id="kobo.1758.1" xmlns="http://www.w3.org/1999/xhtml">, sqlText);
      QueryDefinition query = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1759.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1760.1" xmlns="http://www.w3.org/1999/xhtml">(sqlText);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1761.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1762.1" xmlns="http://www.w3.org/1999/xhtml"> FeedIterator&lt;ProductCosmos&gt; resultsIterator =
        container.GetItemQueryIterator&lt;ProductCosmos&gt;(query);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1763.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1764.1" xmlns="http://www.w3.org/1999/xhtml"> (!resultsIterator.HasMoreResults)
      {
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1765.1" xmlns="http://www.w3.org/1999/xhtml">"No results found."</span></span><span class="koboSpan" id="kobo.1766.1" xmlns="http://www.w3.org/1999/xhtml">);
      }
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1767.1" xmlns="http://www.w3.org/1999/xhtml">while</span></span><span class="koboSpan" id="kobo.1768.1" xmlns="http://www.w3.org/1999/xhtml"> (resultsIterator.HasMoreResults)
      {
        FeedResponse&lt;ProductCosmos&gt; products =
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1769.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1770.1" xmlns="http://www.w3.org/1999/xhtml"> resultsIterator.ReadNextAsync();
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1771.1" xmlns="http://www.w3.org/1999/xhtml">"Status code: {0}, Request charge: {1} RUs."</span></span><span class="koboSpan" id="kobo.1772.1" xmlns="http://www.w3.org/1999/xhtml">,
          products.StatusCode, products.RequestCharge);
        WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1773.1" xmlns="http://www.w3.org/1999/xhtml">$"</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1774.1" xmlns="http://www.w3.org/1999/xhtml">{products.Count}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1775.1" xmlns="http://www.w3.org/1999/xhtml"> products found."</span></span><span class="koboSpan" id="kobo.1776.1" xmlns="http://www.w3.org/1999/xhtml">);
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1777.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1778.1" xmlns="http://www.w3.org/1999/xhtml"> (ProductCosmos product </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1779.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1780.1" xmlns="http://www.w3.org/1999/xhtml"> products)
        {
          WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1781.1" xmlns="http://www.w3.org/1999/xhtml">"id: {0}, productName: {1}, unitPrice: {2}"</span></span><span class="koboSpan" id="kobo.1782.1" xmlns="http://www.w3.org/1999/xhtml">,
            arg0: product.id, arg1: product.productName, 
            arg2: product.unitPrice.ToString());
        }
      }
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1783.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1784.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1785.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1786.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1787.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1788.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1789.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."</span></span><span class="koboSpan" id="kobo.1790.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1791.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1792.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1793.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.1794.1" xmlns="http://www.w3.org/1999/xhtml">,
      arg0: ex.GetType(),
      arg1: ex.Message);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1795.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1796.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1797.1" xmlns="http://www.w3.org/1999/xhtml">, add </span><a id="_idIndexMarker393"/><span class="koboSpan" id="kobo.1798.1" xmlns="http://www.w3.org/1999/xhtml">statements to import the namespaces to work with cultures and encodings, simulate French culture, comment out the call to create the product items, and then add a statement to call the method to list the product items, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1799.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1800.1" xmlns="http://www.w3.org/1999/xhtml"> System.Globalization; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1801.1" xmlns="http://www.w3.org/1999/xhtml">// To use CultureInfo.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1802.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1803.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1804.1" xmlns="http://www.w3.org/1999/xhtml">// To use Encoding.</span></span><span class="koboSpan" id="kobo.1805.1" xmlns="http://www.w3.org/1999/xhtml">
OutputEncoding = Encoding.UTF8; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1806.1" xmlns="http://www.w3.org/1999/xhtml">// To enable Euro symbol output.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1807.1" xmlns="http://www.w3.org/1999/xhtml">// Simulate French culture to test Euro currency symbol output.</span></span><span class="koboSpan" id="kobo.1808.1" xmlns="http://www.w3.org/1999/xhtml">
Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1809.1" xmlns="http://www.w3.org/1999/xhtml">"fr-FR"</span></span><span class="koboSpan" id="kobo.1810.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1811.1" xmlns="http://www.w3.org/1999/xhtml">//await CreateCosmosResources();</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1812.1" xmlns="http://www.w3.org/1999/xhtml">//await CreateProductItems();</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1813.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1814.1" xmlns="http://www.w3.org/1999/xhtml"> ListProductItems();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1815.1" xmlns="http://www.w3.org/1999/xhtml">Run the</span><a id="_idIndexMarker394"/><span class="koboSpan" id="kobo.1816.1" xmlns="http://www.w3.org/1999/xhtml"> console app and note the results, which should be 77 product items, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1817.1" xmlns="http://www.w3.org/1999/xhtml">*
* Listing product items
*
Running query: SELECT * FROM c
Status code: OK, Request charge: 3.93 RUs.
</span><span class="koboSpan" id="kobo.1817.2" xmlns="http://www.w3.org/1999/xhtml">77 products found.
</span><span class="koboSpan" id="kobo.1817.3" xmlns="http://www.w3.org/1999/xhtml">id: 1, productName: Chai, unitPrice: 18,00 €
id: 2, productName: Chang, unitPrice: 19,00 €
id: 3, productName: Aniseed Syrup, unitPrice: 10,00 €
...
</span><span class="koboSpan" id="kobo.1817.4" xmlns="http://www.w3.org/1999/xhtml">id: 76, productName: Lakkalikööri, unitPrice: 18,00 €
id: 77, productName: Original Frankfurter grüne Soße, unitPrice: 13,00 €
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1818.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1819.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.1820.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to delete all the items in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1821.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1822.1" xmlns="http://www.w3.org/1999/xhtml"> container, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1823.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1824.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1825.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1826.1" xmlns="http://www.w3.org/1999/xhtml">DeleteProductItems</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1827.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1828.1" xmlns="http://www.w3.org/1999/xhtml">
{
  SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1829.1" xmlns="http://www.w3.org/1999/xhtml">"Deleting product items"</span></span><span class="koboSpan" id="kobo.1830.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1831.1" xmlns="http://www.w3.org/1999/xhtml">double</span></span><span class="koboSpan" id="kobo.1832.1" xmlns="http://www.w3.org/1999/xhtml"> totalCharge = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1833.1" xmlns="http://www.w3.org/1999/xhtml">0.0</span></span><span class="koboSpan" id="kobo.1834.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1835.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.1836.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1837.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1838.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1839.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1840.1" xmlns="http://www.w3.org/1999/xhtml">(
      accountEndpoint: endpointUri,
      authKeyOrResourceToken: primaryKey))
    {
      Container container = client.GetContainer(
        databaseId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1841.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.1842.1" xmlns="http://www.w3.org/1999/xhtml">, containerId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1843.1" xmlns="http://www.w3.org/1999/xhtml">"Products"</span></span><span class="koboSpan" id="kobo.1844.1" xmlns="http://www.w3.org/1999/xhtml">);
      </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1845.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1846.1" xmlns="http://www.w3.org/1999/xhtml"> sqlText = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1847.1" xmlns="http://www.w3.org/1999/xhtml">"SELECT * FROM c"</span></span><span class="koboSpan" id="kobo.1848.1" xmlns="http://www.w3.org/1999/xhtml">;
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1849.1" xmlns="http://www.w3.org/1999/xhtml">"Running query: {0}"</span></span><span class="koboSpan" id="kobo.1850.1" xmlns="http://www.w3.org/1999/xhtml">, sqlText);
      QueryDefinition query = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1851.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1852.1" xmlns="http://www.w3.org/1999/xhtml">(sqlText);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1853.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1854.1" xmlns="http://www.w3.org/1999/xhtml"> FeedIterator&lt;ProductCosmos&gt; resultsIterator =
        container.GetItemQueryIterator&lt;ProductCosmos&gt;(query);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1855.1" xmlns="http://www.w3.org/1999/xhtml">while</span></span><span class="koboSpan" id="kobo.1856.1" xmlns="http://www.w3.org/1999/xhtml"> (resultsIterator.HasMoreResults)
      {
        FeedResponse&lt;ProductCosmos&gt; products =
          </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1857.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1858.1" xmlns="http://www.w3.org/1999/xhtml"> resultsIterator.ReadNextAsync();
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1859.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1860.1" xmlns="http://www.w3.org/1999/xhtml"> (ProductCosmos product </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1861.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1862.1" xmlns="http://www.w3.org/1999/xhtml"> products)
        {
          WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1863.1" xmlns="http://www.w3.org/1999/xhtml">"Delete id: {0}, productName: {1}"</span></span><span class="koboSpan" id="kobo.1864.1" xmlns="http://www.w3.org/1999/xhtml">,
            arg0: product.id, arg1: product.productName);
          ItemResponse&lt;ProductCosmos&gt; response =
            </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1865.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1866.1" xmlns="http://www.w3.org/1999/xhtml"> container.DeleteItemAsync&lt;ProductCosmos&gt;(
            id: product.id, partitionKey: </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1867.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1868.1" xmlns="http://www.w3.org/1999/xhtml">(product.id));
          WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1869.1" xmlns="http://www.w3.org/1999/xhtml">"Status code: {0}, Request charge: {1} RUs."</span></span><span class="koboSpan" id="kobo.1870.1" xmlns="http://www.w3.org/1999/xhtml">,
            response.StatusCode, response.RequestCharge);
          totalCharge += response.RequestCharge;
        }
      }
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1871.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1872.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1873.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1874.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1875.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1876.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1877.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."</span></span><span class="koboSpan" id="kobo.1878.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1879.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.1880.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1881.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.1882.1" xmlns="http://www.w3.org/1999/xhtml">,
      arg0: ex.GetType(),
      arg1: ex.Message);
  }
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1883.1" xmlns="http://www.w3.org/1999/xhtml">"Total requests charge: {0:N2} RUs"</span></span><span class="koboSpan" id="kobo.1884.1" xmlns="http://www.w3.org/1999/xhtml">, totalCharge);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1885.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1886.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1887.1" xmlns="http://www.w3.org/1999/xhtml">, comment </span><a id="_idIndexMarker395"/><span class="koboSpan" id="kobo.1888.1" xmlns="http://www.w3.org/1999/xhtml">out the call to list the product items, and then add a statement to call the method to delete the product items, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1889.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1890.1" xmlns="http://www.w3.org/1999/xhtml"> DeleteProductItems();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1891.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the results, which should be 77 product items deleted, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1892.1" xmlns="http://www.w3.org/1999/xhtml">*
* Deleting product items
*
Running query: SELECT * FROM c
Delete id: 1, productName: Chai
Status code: NoContent, Request charge: 14.29 RUs.
</span><span class="koboSpan" id="kobo.1892.2" xmlns="http://www.w3.org/1999/xhtml">...
</span><span class="koboSpan" id="kobo.1892.3" xmlns="http://www.w3.org/1999/xhtml">Delete id: 77, productName: Original Frankfurter grüne Soße
Status code: NoContent, Request charge: 14.48 RUs.
</span><span class="koboSpan" id="kobo.1892.4" xmlns="http://www.w3.org/1999/xhtml">Total requests charge: 1,128.87 RUs
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1893.1" xmlns="http://www.w3.org/1999/xhtml">In the Azure Cosmos DB Emulator or Azure portal </span><strong class="screenText"><span class="koboSpan" id="kobo.1894.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.1895.1" xmlns="http://www.w3.org/1999/xhtml">, confirm that the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1896.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1897.1" xmlns="http://www.w3.org/1999/xhtml"> container is empty.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-181"><span class="koboSpan" id="kobo.1898.1" xmlns="http://www.w3.org/1999/xhtml">Understanding SQL queries</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1899.1" xmlns="http://www.w3.org/1999/xhtml">The following</span><a id="_idIndexMarker396"/><span class="koboSpan" id="kobo.1900.1" xmlns="http://www.w3.org/1999/xhtml"> keywords and more are available when writing SQL queries for Azure Cosmos DB:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1901.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></code><span class="koboSpan" id="kobo.1902.1" xmlns="http://www.w3.org/1999/xhtml"> to select from item properties. </span><span class="koboSpan" id="kobo.1902.2" xmlns="http://www.w3.org/1999/xhtml">Supports </span><code class="inlineCode"><span class="koboSpan" id="kobo.1903.1" xmlns="http://www.w3.org/1999/xhtml">*</span></code><span class="koboSpan" id="kobo.1904.1" xmlns="http://www.w3.org/1999/xhtml"> for all and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1905.1" xmlns="http://www.w3.org/1999/xhtml">TOP</span></code><span class="koboSpan" id="kobo.1906.1" xmlns="http://www.w3.org/1999/xhtml"> for limiting the results to the first specific number of items.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1907.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></code><span class="koboSpan" id="kobo.1908.1" xmlns="http://www.w3.org/1999/xhtml"> to define aliases.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1909.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></code><span class="koboSpan" id="kobo.1910.1" xmlns="http://www.w3.org/1999/xhtml"> to define the items to select from. </span><span class="koboSpan" id="kobo.1910.2" xmlns="http://www.w3.org/1999/xhtml">Some of the previous queries used </span><code class="inlineCode"><span class="koboSpan" id="kobo.1911.1" xmlns="http://www.w3.org/1999/xhtml">FROM c</span></code><span class="koboSpan" id="kobo.1912.1" xmlns="http://www.w3.org/1999/xhtml">, where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1913.1" xmlns="http://www.w3.org/1999/xhtml">c</span></code><span class="koboSpan" id="kobo.1914.1" xmlns="http://www.w3.org/1999/xhtml"> is an implied alias for the items in the container. </span><span class="koboSpan" id="kobo.1914.2" xmlns="http://www.w3.org/1999/xhtml">Since a SQL query is executed within the context of a container like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1915.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1916.1" xmlns="http://www.w3.org/1999/xhtml">, you can use any alias you like, so </span><code class="inlineCode"><span class="koboSpan" id="kobo.1917.1" xmlns="http://www.w3.org/1999/xhtml">FROM Items c</span></code><span class="koboSpan" id="kobo.1918.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.1919.1" xmlns="http://www.w3.org/1999/xhtml">FROM p</span></code><span class="koboSpan" id="kobo.1920.1" xmlns="http://www.w3.org/1999/xhtml"> would work equally well.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1921.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></code><span class="koboSpan" id="kobo.1922.1" xmlns="http://www.w3.org/1999/xhtml"> to define a filter.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1923.1" xmlns="http://www.w3.org/1999/xhtml">LIKE</span></code><span class="koboSpan" id="kobo.1924.1" xmlns="http://www.w3.org/1999/xhtml"> to use pattern matching. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1925.1" xmlns="http://www.w3.org/1999/xhtml">%</span></code><span class="koboSpan" id="kobo.1926.1" xmlns="http://www.w3.org/1999/xhtml"> means zero, one, or more characters. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1927.1" xmlns="http://www.w3.org/1999/xhtml">_</span></code><span class="koboSpan" id="kobo.1928.1" xmlns="http://www.w3.org/1999/xhtml"> means a single character. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1929.1" xmlns="http://www.w3.org/1999/xhtml">[a-f]</span></code><span class="koboSpan" id="kobo.1930.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.1931.1" xmlns="http://www.w3.org/1999/xhtml">[aeiou]</span></code><span class="koboSpan" id="kobo.1932.1" xmlns="http://www.w3.org/1999/xhtml"> means a single character within the defined range or set. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1933.1" xmlns="http://www.w3.org/1999/xhtml">[^aeiou]</span></code><span class="koboSpan" id="kobo.1934.1" xmlns="http://www.w3.org/1999/xhtml"> means not in the range or set.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1935.1" xmlns="http://www.w3.org/1999/xhtml">IN</span></code><span class="koboSpan" id="kobo.1936.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1937.1" xmlns="http://www.w3.org/1999/xhtml">BETWEEN</span></code><span class="koboSpan" id="kobo.1938.1" xmlns="http://www.w3.org/1999/xhtml"> are range and set filters.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1939.1" xmlns="http://www.w3.org/1999/xhtml">AND</span></code><span class="koboSpan" id="kobo.1940.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1941.1" xmlns="http://www.w3.org/1999/xhtml">OR</span></code><span class="koboSpan" id="kobo.1942.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1943.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></code><span class="koboSpan" id="kobo.1944.1" xmlns="http://www.w3.org/1999/xhtml"> for Boolean logic.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1945.1" xmlns="http://www.w3.org/1999/xhtml">ORDER BY</span></code><span class="koboSpan" id="kobo.1946.1" xmlns="http://www.w3.org/1999/xhtml"> to sort the results.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1947.1" xmlns="http://www.w3.org/1999/xhtml">DISTINCT</span></code><span class="koboSpan" id="kobo.1948.1" xmlns="http://www.w3.org/1999/xhtml"> to remove duplicates.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1949.1" xmlns="http://www.w3.org/1999/xhtml">COUNT</span></code><span class="koboSpan" id="kobo.1950.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1951.1" xmlns="http://www.w3.org/1999/xhtml">AVG</span></code><span class="koboSpan" id="kobo.1952.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1953.1" xmlns="http://www.w3.org/1999/xhtml">SUM</span></code><span class="koboSpan" id="kobo.1954.1" xmlns="http://www.w3.org/1999/xhtml">, and other aggregate functions.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.1955.1" xmlns="http://www.w3.org/1999/xhtml">To query </span><a id="_idIndexMarker397"/><span class="koboSpan" id="kobo.1956.1" xmlns="http://www.w3.org/1999/xhtml">the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1957.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1958.1" xmlns="http://www.w3.org/1999/xhtml"> container using the Core (SQL) API, you might write the following code:</span></p>
<pre class="programlisting gen"><code class="hljs"><span class="koboSpan" id="kobo.1959.1" xmlns="http://www.w3.org/1999/xhtml">SELECT p.id, p.productName, p.unitPrice FROM Items p
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1960.1" xmlns="http://www.w3.org/1999/xhtml">Let’s try executing a SQL query against our product items:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1961.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1962.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1963.1" xmlns="http://www.w3.org/1999/xhtml">, uncomment the call to (re)create the product items and modify the call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1964.1" xmlns="http://www.w3.org/1999/xhtml">ListProductItems</span></code><span class="koboSpan" id="kobo.1965.1" xmlns="http://www.w3.org/1999/xhtml"> to pass a SQL query that filters the products to only show the products in the Beverages category and only their ID, name, and unit price, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.1966.1" xmlns="http://www.w3.org/1999/xhtml">//await CreateCosmosResources();</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1967.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1968.1" xmlns="http://www.w3.org/1999/xhtml"> CreateProductItems();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1969.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1970.1" xmlns="http://www.w3.org/1999/xhtml"> ListProductItems(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1971.1" xmlns="http://www.w3.org/1999/xhtml">"SELECT p.id, p.productName, p.unitPrice FROM Items p WHERE p.category.categoryName = 'Beverages'"</span></span><span class="koboSpan" id="kobo.1972.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1973.1" xmlns="http://www.w3.org/1999/xhtml">//await DeleteProductItems();</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1974.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the results, which should be the 12 product items in the Beverages category, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1975.1" xmlns="http://www.w3.org/1999/xhtml">*
* Listing product items
*
Running query: SELECT p.id, p.productName, p.unitPrice FROM Items p WHERE p.category.categoryName = 'Beverages'
Status code: OK, Request charge: 3.19 RUs.
</span><span class="koboSpan" id="kobo.1975.2" xmlns="http://www.w3.org/1999/xhtml">12 products found.
</span><span class="koboSpan" id="kobo.1975.3" xmlns="http://www.w3.org/1999/xhtml">id: 1, productName: Chai, unitPrice: 18
id: 2, productName: Chang, unitPrice: 19
id: 24, productName: Guaraná Fantástica, unitPrice: 4.5
id: 34, productName: Sasquatch Ale, unitPrice: 14
id: 35, productName: Steeleye Stout, unitPrice: 18
id: 38, productName: Côte de Blaye, unitPrice: 263.5
id: 39, productName: Chartreuse verte, unitPrice: 18
id: 43, productName: Ipoh Coffee, unitPrice: 46
id: 67, productName: Laughing Lumberjack Lager, unitPrice: 14
id: 70, productName: Outback Lager, unitPrice: 15
id: 75, productName: Rhönbräu Klosterbier, unitPrice: 7.75
id: 76, productName: Lakkalikööri, unitPrice: 18
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1976.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><a id="_idIndexMarker398"/><span class="koboSpan" id="kobo.1977.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB Emulator or Azure portal </span><strong class="screenText"><span class="koboSpan" id="kobo.1978.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.1979.1" xmlns="http://www.w3.org/1999/xhtml">, create a new SQL query, use the same SQL text, and execute it, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1980.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.7</span></em><span class="koboSpan" id="kobo.1981.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1982.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_07.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1983.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.7: Executing a SQL query in Data Explorer</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.1984.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.1985.1" xmlns="http://www.w3.org/1999/xhtml">Query Stats</span></strong><span class="koboSpan" id="kobo.1986.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><a id="_idIndexMarker399"/><span class="koboSpan" id="kobo.1987.1" xmlns="http://www.w3.org/1999/xhtml">note the request charge (3.19 RUs), the number of records (12), and the output document size (752 bytes), as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1988.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.8</span></em><span class="koboSpan" id="kobo.1989.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1990.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_08.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1991.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.8: Query statistics in Data Explorer</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1992.1" xmlns="http://www.w3.org/1999/xhtml">Other useful query statistics include:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1993.1" xmlns="http://www.w3.org/1999/xhtml">Index hit document count.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1994.1" xmlns="http://www.w3.org/1999/xhtml">Index lookup time.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1995.1" xmlns="http://www.w3.org/1999/xhtml">Document load time.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1996.1" xmlns="http://www.w3.org/1999/xhtml">Query engine execution time.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1997.1" xmlns="http://www.w3.org/1999/xhtml">Document write time.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-182"><span class="koboSpan" id="kobo.1998.1" xmlns="http://www.w3.org/1999/xhtml">Exploring other SQL queries with Cosmos DB</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1999.1" xmlns="http://www.w3.org/1999/xhtml">Try </span><a id="_idIndexMarker400"/><span class="koboSpan" id="kobo.2000.1" xmlns="http://www.w3.org/1999/xhtml">executing the following queries:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2001.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span><span class="koboSpan" id="kobo.2002.1" xmlns="http://www.w3.org/1999/xhtml"> p.id, p.productName, p.unitPrice </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2003.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2004.1" xmlns="http://www.w3.org/1999/xhtml"> Items p 
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2005.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.2006.1" xmlns="http://www.w3.org/1999/xhtml"> p.unitPrice </span><span class="hljs-operator"><span class="koboSpan" id="kobo.2007.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.2008.1" xmlns="http://www.w3.org/1999/xhtml">50</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2009.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2010.1" xmlns="http://www.w3.org/1999/xhtml">DISTINCT</span></span><span class="koboSpan" id="kobo.2011.1" xmlns="http://www.w3.org/1999/xhtml"> p.category </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2012.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2013.1" xmlns="http://www.w3.org/1999/xhtml"> Items p
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2014.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2015.1" xmlns="http://www.w3.org/1999/xhtml">DISTINCT</span></span><span class="koboSpan" id="kobo.2016.1" xmlns="http://www.w3.org/1999/xhtml"> p.category.categoryName </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2017.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2018.1" xmlns="http://www.w3.org/1999/xhtml"> Items p
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2019.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.2020.1" xmlns="http://www.w3.org/1999/xhtml"> p.discontinued </span><span class="hljs-operator"><span class="koboSpan" id="kobo.2021.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2022.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2023.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span><span class="koboSpan" id="kobo.2024.1" xmlns="http://www.w3.org/1999/xhtml"> p.productName, p.supplier.city </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2025.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2026.1" xmlns="http://www.w3.org/1999/xhtml"> Items p
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2027.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.2028.1" xmlns="http://www.w3.org/1999/xhtml"> p.supplier.country </span><span class="hljs-operator"><span class="koboSpan" id="kobo.2029.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.2030.1" xmlns="http://www.w3.org/1999/xhtml">'Germany'</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2031.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2032.1" xmlns="http://www.w3.org/1999/xhtml">COUNT</span></span><span class="koboSpan" id="kobo.2033.1" xmlns="http://www.w3.org/1999/xhtml">(p.id) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2034.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></span><span class="koboSpan" id="kobo.2035.1" xmlns="http://www.w3.org/1999/xhtml"> HowManyProductsComeFromGermany </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2036.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2037.1" xmlns="http://www.w3.org/1999/xhtml"> Items p
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2038.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.2039.1" xmlns="http://www.w3.org/1999/xhtml"> p.supplier.country </span><span class="hljs-operator"><span class="koboSpan" id="kobo.2040.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.2041.1" xmlns="http://www.w3.org/1999/xhtml">'Germany'</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2042.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2043.1" xmlns="http://www.w3.org/1999/xhtml">AVG</span></span><span class="koboSpan" id="kobo.2044.1" xmlns="http://www.w3.org/1999/xhtml">(p.unitPrice) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2045.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></span><span class="koboSpan" id="kobo.2046.1" xmlns="http://www.w3.org/1999/xhtml"> AverageUnitPrice </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2047.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2048.1" xmlns="http://www.w3.org/1999/xhtml"> Items p
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.2049.1" xmlns="http://www.w3.org/1999/xhtml">Although queries defined using strings are the most common way of working with Cosmos DB, you can also create permanently stored objects using server-side programming.</span></p>
<h1 class="heading-1" id="_idParaDest-183"><span class="koboSpan" id="kobo.2050.1" xmlns="http://www.w3.org/1999/xhtml">Exploring server-side programming</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2051.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cosmos DB server-side </span><a id="_idIndexMarker401"/><span class="koboSpan" id="kobo.2052.1" xmlns="http://www.w3.org/1999/xhtml">programming consists of </span><strong class="keyWord"><span class="koboSpan" id="kobo.2053.1" xmlns="http://www.w3.org/1999/xhtml">stored procedures</span></strong><span class="koboSpan" id="kobo.2054.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="keyWord"><span class="koboSpan" id="kobo.2055.1" xmlns="http://www.w3.org/1999/xhtml">triggers</span></strong><span class="koboSpan" id="kobo.2056.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="keyWord"><span class="koboSpan" id="kobo.2057.1" xmlns="http://www.w3.org/1999/xhtml">user-defined functions </span></strong><span class="koboSpan" id="kobo.2058.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.2059.1" xmlns="http://www.w3.org/1999/xhtml">UDFs</span></strong><span class="koboSpan" id="kobo.2060.1" xmlns="http://www.w3.org/1999/xhtml">) written in JavaScript. </span></p>
<h2 class="heading-2" id="_idParaDest-184"><span class="koboSpan" id="kobo.2061.1" xmlns="http://www.w3.org/1999/xhtml">Implementing user-defined functions</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2062.1" xmlns="http://www.w3.org/1999/xhtml">UDFs can </span><a id="_idIndexMarker402"/><span class="koboSpan" id="kobo.2063.1" xmlns="http://www.w3.org/1999/xhtml">only be called from within a query, and they implement custom business logic like calculating tax.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2064.1" xmlns="http://www.w3.org/1999/xhtml">Let’s define a UDF to calculate the sales tax of products:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2065.1" xmlns="http://www.w3.org/1999/xhtml">In the Azure Cosmos DB Emulator or Azure portal </span><strong class="screenText"><span class="koboSpan" id="kobo.2066.1" xmlns="http://www.w3.org/1999/xhtml">Data Explorer</span></strong><span class="koboSpan" id="kobo.2067.1" xmlns="http://www.w3.org/1999/xhtml">, create a new UDF, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2068.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.9</span></em><span class="koboSpan" id="kobo.2069.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2070.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_04_09.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2071.1" xmlns="http://www.w3.org/1999/xhtml">Figure 4.9: Creating a new UDF</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="2"><span class="koboSpan" id="kobo.2072.1" xmlns="http://www.w3.org/1999/xhtml">For </span><a id="_idIndexMarker403"/><span class="koboSpan" id="kobo.2073.1" xmlns="http://www.w3.org/1999/xhtml">the </span><strong class="screenText"><span class="koboSpan" id="kobo.2074.1" xmlns="http://www.w3.org/1999/xhtml">User Defined Function Id</span></strong><span class="koboSpan" id="kobo.2075.1" xmlns="http://www.w3.org/1999/xhtml">, enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.2076.1" xmlns="http://www.w3.org/1999/xhtml">salesTax</span></code><span class="koboSpan" id="kobo.2077.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2078.1" xmlns="http://www.w3.org/1999/xhtml">For the </span><strong class="screenText"><span class="koboSpan" id="kobo.2079.1" xmlns="http://www.w3.org/1999/xhtml">User Defined Function Body</span></strong><span class="koboSpan" id="kobo.2080.1" xmlns="http://www.w3.org/1999/xhtml">, enter JavaScript to define the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2081.1" xmlns="http://www.w3.org/1999/xhtml">salesTax</span></code><span class="koboSpan" id="kobo.2082.1" xmlns="http://www.w3.org/1999/xhtml"> function, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-function"><span class="koboSpan" id="kobo.2083.1" xmlns="http://www.w3.org/1999/xhtml">function </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2084.1" xmlns="http://www.w3.org/1999/xhtml">salesTax</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2085.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2086.1" xmlns="http://www.w3.org/1999/xhtml">unitPrice</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2087.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2088.1" xmlns="http://www.w3.org/1999/xhtml">{
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2089.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2090.1" xmlns="http://www.w3.org/1999/xhtml"> unitPrice * </span><span class="hljs-number"><span class="koboSpan" id="kobo.2091.1" xmlns="http://www.w3.org/1999/xhtml">0.2</span></span><span class="koboSpan" id="kobo.2092.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2093.1" xmlns="http://www.w3.org/1999/xhtml">In the toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.2094.1" xmlns="http://www.w3.org/1999/xhtml">Save</span></strong><span class="koboSpan" id="kobo.2095.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2096.1" xmlns="http://www.w3.org/1999/xhtml">Create a new SQL query and enter SQL text to return the unit price and sales tax for products that cost more than 100, as shown in the following query:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2097.1" xmlns="http://www.w3.org/1999/xhtml">SELECT</span></span><span class="koboSpan" id="kobo.2098.1" xmlns="http://www.w3.org/1999/xhtml"> p.unitPrice cost, udf.salesTax(p.unitPrice) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2099.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></span><span class="koboSpan" id="kobo.2100.1" xmlns="http://www.w3.org/1999/xhtml"> tax 
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2101.1" xmlns="http://www.w3.org/1999/xhtml">FROM</span></span><span class="koboSpan" id="kobo.2102.1" xmlns="http://www.w3.org/1999/xhtml"> Items p </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2103.1" xmlns="http://www.w3.org/1999/xhtml">WHERE</span></span><span class="koboSpan" id="kobo.2104.1" xmlns="http://www.w3.org/1999/xhtml"> p.unitPrice </span><span class="hljs-operator"><span class="koboSpan" id="kobo.2105.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.2106.1" xmlns="http://www.w3.org/1999/xhtml">100</span></span>
</code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2107.1" xmlns="http://www.w3.org/1999/xhtml">Note that </span><code class="inlineCode"><span class="koboSpan" id="kobo.2108.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></code><span class="koboSpan" id="kobo.2109.1" xmlns="http://www.w3.org/1999/xhtml"> to alias an expression is optional. </span><span class="koboSpan" id="kobo.2109.2" xmlns="http://www.w3.org/1999/xhtml">I prefer to specify </span><code class="inlineCode"><span class="koboSpan" id="kobo.2110.1" xmlns="http://www.w3.org/1999/xhtml">AS</span></code><span class="koboSpan" id="kobo.2111.1" xmlns="http://www.w3.org/1999/xhtml"> for improved legibility.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.2112.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.2113.1" xmlns="http://www.w3.org/1999/xhtml">Save Query</span></strong><span class="koboSpan" id="kobo.2114.1" xmlns="http://www.w3.org/1999/xhtml"> button.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2115.1" xmlns="http://www.w3.org/1999/xhtml">If you are using cloud resources instead of the emulator, then for compliance reasons, Microsoft saves queries in a container in your Azure Cosmos account in a separate database called </span><strong class="screenText"><span class="koboSpan" id="kobo.2116.1" xmlns="http://www.w3.org/1999/xhtml">___Cosmos</span></strong><span class="koboSpan" id="kobo.2117.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.2117.2" xmlns="http://www.w3.org/1999/xhtml">The estimated additional cost is $0.77 daily.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="7"><span class="koboSpan" id="kobo.2118.1" xmlns="http://www.w3.org/1999/xhtml">Execute </span><a id="_idIndexMarker404"/><span class="koboSpan" id="kobo.2119.1" xmlns="http://www.w3.org/1999/xhtml">the query and note the results, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2120.1" xmlns="http://www.w3.org/1999/xhtml">[
    {
        "cost": 123.79,
        "tax": 24.758000000000003
    },
    {
        "cost": 263.5,
        "tax": 52.7
    }
]
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-185"><span class="koboSpan" id="kobo.2121.1" xmlns="http://www.w3.org/1999/xhtml">Implementing stored procedures</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2122.1" xmlns="http://www.w3.org/1999/xhtml">Stored procedures</span><a id="_idIndexMarker405"/><span class="koboSpan" id="kobo.2123.1" xmlns="http://www.w3.org/1999/xhtml"> are the only</span><a id="_idIndexMarker406"/><span class="koboSpan" id="kobo.2124.1" xmlns="http://www.w3.org/1999/xhtml"> way to ensure </span><strong class="keyWord"><span class="koboSpan" id="kobo.2125.1" xmlns="http://www.w3.org/1999/xhtml">ACID</span></strong><span class="koboSpan" id="kobo.2126.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.2127.1" xmlns="http://www.w3.org/1999/xhtml">Atomic, Consistent, Isolated, Durable</span></strong><span class="koboSpan" id="kobo.2128.1" xmlns="http://www.w3.org/1999/xhtml">) transactions that combine multiple discrete activities into a single action that can be committed or rolled back. </span><span class="koboSpan" id="kobo.2128.2" xmlns="http://www.w3.org/1999/xhtml">You cannot use client-side code to implement transactions. </span><span class="koboSpan" id="kobo.2128.3" xmlns="http://www.w3.org/1999/xhtml">Server-side programming also provides improved performance since the code executes where the data is stored.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2129.1" xmlns="http://www.w3.org/1999/xhtml">We have just seen that you can define a UDF using the Data Explorer. </span><span class="koboSpan" id="kobo.2129.2" xmlns="http://www.w3.org/1999/xhtml">We could define a stored procedure in a similar way, but let’s see how we would do it using code:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2130.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2131.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.2132.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for working with server-side programming objects, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.2133.1" xmlns="http://www.w3.org/1999/xhtml">// To use StoredProcedureResponse and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2134.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2135.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Azure.Cosmos.Scripts;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2136.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2137.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.2138.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to create a stored procedure that can insert multiple products by chaining callback functions until all items in an array are inserted, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2139.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2140.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2141.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2142.1" xmlns="http://www.w3.org/1999/xhtml">CreateInsertProductStoredProcedure</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2143.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2144.1" xmlns="http://www.w3.org/1999/xhtml">
{
  SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2145.1" xmlns="http://www.w3.org/1999/xhtml">"Creating the insertProduct stored procedure"</span></span><span class="koboSpan" id="kobo.2146.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2147.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.2148.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2149.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2150.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2151.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2152.1" xmlns="http://www.w3.org/1999/xhtml">(
      accountEndpoint: endpointUri,
      authKeyOrResourceToken: primaryKey))
    {
      Container container = client.GetContainer(
        databaseId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2153.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.2154.1" xmlns="http://www.w3.org/1999/xhtml">, containerId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2155.1" xmlns="http://www.w3.org/1999/xhtml">"Products"</span></span><span class="koboSpan" id="kobo.2156.1" xmlns="http://www.w3.org/1999/xhtml">);
      StoredProcedureResponse response = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2157.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2158.1" xmlns="http://www.w3.org/1999/xhtml"> container
        .Scripts.CreateStoredProcedureAsync(</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2159.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2160.1" xmlns="http://www.w3.org/1999/xhtml"> StoredProcedureProperties
        {
          Id = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2161.1" xmlns="http://www.w3.org/1999/xhtml">"insertProduct"</span></span><span class="koboSpan" id="kobo.2162.1" xmlns="http://www.w3.org/1999/xhtml">,
          </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2163.1" xmlns="http://www.w3.org/1999/xhtml">// __ means getContext().getCollection().</span></span><span class="koboSpan" id="kobo.2164.1" xmlns="http://www.w3.org/1999/xhtml">
          Body = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2165.1" xmlns="http://www.w3.org/1999/xhtml">"""</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2166.1" xmlns="http://www.w3.org/1999/xhtml">function insertProduct(product) {</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2167.1" xmlns="http://www.w3.org/1999/xhtml">  if (!product) throw new Error(</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2168.1" xmlns="http://www.w3.org/1999/xhtml">    "</span></span><span class="koboSpan" id="kobo.2169.1" xmlns="http://www.w3.org/1999/xhtml">product </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2170.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.2171.1" xmlns="http://www.w3.org/1999/xhtml"> undefined </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2172.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2173.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2174.1" xmlns="http://www.w3.org/1999/xhtml">.</span><span class="hljs-string"><span class="koboSpan" id="kobo.2175.1" xmlns="http://www.w3.org/1999/xhtml">");</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2176.1" xmlns="http://www.w3.org/1999/xhtml">  tryInsert(product, callbackInsert);</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2177.1" xmlns="http://www.w3.org/1999/xhtml">  function tryInsert(product, callbackFunction) {</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2178.1" xmlns="http://www.w3.org/1999/xhtml">    var options = { disableAutomaticIdGeneration: false };</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2179.1" xmlns="http://www.w3.org/1999/xhtml">    // __ is an alias for getContext().getCollection()</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2180.1" xmlns="http://www.w3.org/1999/xhtml">    var isAccepted = __.createDocument(</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2181.1" xmlns="http://www.w3.org/1999/xhtml">      __.getSelfLink(), product, options, callbackFunction);</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2182.1" xmlns="http://www.w3.org/1999/xhtml">    if (!isAccepted) </span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2183.1" xmlns="http://www.w3.org/1999/xhtml">      getContext().getResponse().setBody(0);</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2184.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2185.1" xmlns="http://www.w3.org/1999/xhtml">  function callbackInsert(err, item, options) {</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2186.1" xmlns="http://www.w3.org/1999/xhtml">    if (err) throw err;</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2187.1" xmlns="http://www.w3.org/1999/xhtml">    getContext().getResponse().setBody(1);</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2188.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2189.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2190.1" xmlns="http://www.w3.org/1999/xhtml">"""</span></span><span class="koboSpan" id="kobo.2191.1" xmlns="http://www.w3.org/1999/xhtml">
        });
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2192.1" xmlns="http://www.w3.org/1999/xhtml">"Status code: {0}, Request charge: {1} RUs."</span></span><span class="koboSpan" id="kobo.2193.1" xmlns="http://www.w3.org/1999/xhtml">,
        response.StatusCode, response.RequestCharge);
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2194.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.2195.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2196.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2197.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2198.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2199.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2200.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."</span></span><span class="koboSpan" id="kobo.2201.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2202.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.2203.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2204.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.2205.1" xmlns="http://www.w3.org/1999/xhtml">,
      arg0: ex.GetType(),
      arg1: ex.Message);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2206.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2207.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2208.1" xmlns="http://www.w3.org/1999/xhtml">, comment</span><a id="_idIndexMarker407"/><span class="koboSpan" id="kobo.2209.1" xmlns="http://www.w3.org/1999/xhtml"> out all the existing statements, and add a statement to run the new method, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2210.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2211.1" xmlns="http://www.w3.org/1999/xhtml"> CreateInsertProductStoredProcedure();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2212.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the results, which should be the successful creation of the stored procedure, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2213.1" xmlns="http://www.w3.org/1999/xhtml">*
* Creating the insertProduct stored procedure
*
Status code: Created, Request charge: 6.29 RUs.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2214.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2215.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.2216.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to execute the stored procedure, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2217.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2218.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2219.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2220.1" xmlns="http://www.w3.org/1999/xhtml">ExecuteInsertProductStoredProcedure</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2221.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2222.1" xmlns="http://www.w3.org/1999/xhtml">
{
  SectionTitle(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2223.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2224.1" xmlns="http://www.w3.org/1999/xhtml">Executing the insertProduct stored procedure"</span></span><span class="koboSpan" id="kobo.2225.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2226.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.2227.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2228.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2229.1" xmlns="http://www.w3.org/1999/xhtml"> (CosmosClient client = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2230.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2231.1" xmlns="http://www.w3.org/1999/xhtml">(
      accountEndpoint: endpointUri,
      authKeyOrResourceToken: primaryKey))
    {
      Container container = client.GetContainer(
        databaseId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2232.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.2233.1" xmlns="http://www.w3.org/1999/xhtml">, containerId: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2234.1" xmlns="http://www.w3.org/1999/xhtml">"Products"</span></span><span class="koboSpan" id="kobo.2235.1" xmlns="http://www.w3.org/1999/xhtml">);
      </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2236.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2237.1" xmlns="http://www.w3.org/1999/xhtml"> pid = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2238.1" xmlns="http://www.w3.org/1999/xhtml">"78"</span></span><span class="koboSpan" id="kobo.2239.1" xmlns="http://www.w3.org/1999/xhtml">;
      ProductCosmos product = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2240.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2241.1" xmlns="http://www.w3.org/1999/xhtml">()
      {
        id = pid, productId = pid,
        productName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2242.1" xmlns="http://www.w3.org/1999/xhtml">"Barista's Chilli Jam"</span></span><span class="koboSpan" id="kobo.2243.1" xmlns="http://www.w3.org/1999/xhtml">,
        unitPrice = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2244.1" xmlns="http://www.w3.org/1999/xhtml">12</span></span><span class="koboSpan" id="kobo.2245.1" xmlns="http://www.w3.org/1999/xhtml">M, unitsInStock = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2246.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.2247.1" xmlns="http://www.w3.org/1999/xhtml">
      };
      StoredProcedureExecuteResponse&lt;</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2248.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2249.1" xmlns="http://www.w3.org/1999/xhtml">&gt; response = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2250.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2251.1" xmlns="http://www.w3.org/1999/xhtml"> container.Scripts
        .ExecuteStoredProcedureAsync&lt;</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2252.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2253.1" xmlns="http://www.w3.org/1999/xhtml">&gt;(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2254.1" xmlns="http://www.w3.org/1999/xhtml">"insertProduct"</span></span><span class="koboSpan" id="kobo.2255.1" xmlns="http://www.w3.org/1999/xhtml">,
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2256.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2257.1" xmlns="http://www.w3.org/1999/xhtml"> PartitionKey(pid), </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2258.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2259.1" xmlns="http://www.w3.org/1999/xhtml">[] { product });
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2260.1" xmlns="http://www.w3.org/1999/xhtml">"Status code: {0}, Request charge: {1} RUs."</span></span><span class="koboSpan" id="kobo.2261.1" xmlns="http://www.w3.org/1999/xhtml">,
        response.StatusCode, response.RequestCharge);
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2262.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.2263.1" xmlns="http://www.w3.org/1999/xhtml"> (HttpRequestException ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2264.1" xmlns="http://www.w3.org/1999/xhtml">$"Error: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2265.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2266.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2267.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2268.1" xmlns="http://www.w3.org/1999/xhtml">"Hint: If you are using the Azure Cosmos Emulator then please make sure it is running."</span></span><span class="koboSpan" id="kobo.2269.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2270.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.2271.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2272.1" xmlns="http://www.w3.org/1999/xhtml">"Error: {0} says {1}"</span></span><span class="koboSpan" id="kobo.2273.1" xmlns="http://www.w3.org/1999/xhtml">,
      arg0: ex.GetType(),
      arg1: ex.Message);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2274.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2275.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2276.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the statement to create the stored procedure, add a statement to </span><a id="_idIndexMarker408"/><span class="koboSpan" id="kobo.2277.1" xmlns="http://www.w3.org/1999/xhtml">execute the stored procedure, and then list products with a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2278.1" xmlns="http://www.w3.org/1999/xhtml">productId</span></code><span class="koboSpan" id="kobo.2279.1" xmlns="http://www.w3.org/1999/xhtml"> of </span><code class="inlineCode"><span class="koboSpan" id="kobo.2280.1" xmlns="http://www.w3.org/1999/xhtml">78</span></code><span class="koboSpan" id="kobo.2281.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.2282.1" xmlns="http://www.w3.org/1999/xhtml">//await CreateInsertProductStoredProcedure();</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2283.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2284.1" xmlns="http://www.w3.org/1999/xhtml"> ExecuteInsertProductStoredProcedure();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2285.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2286.1" xmlns="http://www.w3.org/1999/xhtml"> ListProductItems(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2287.1" xmlns="http://www.w3.org/1999/xhtml">"SELECT p.id, p.productName, p.unitPrice FROM Items p WHERE p.productId = '78'"</span></span><span class="koboSpan" id="kobo.2288.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2289.1" xmlns="http://www.w3.org/1999/xhtml">Run the </span><a id="_idIndexMarker409"/><span class="koboSpan" id="kobo.2290.1" xmlns="http://www.w3.org/1999/xhtml">console app and note the results, which should be the successful execution of the stored procedure, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2291.1" xmlns="http://www.w3.org/1999/xhtml">*
* Executing the insertProduct stored procedure
*
Status code: OK, Request charge: 10.23 RUs.
</span><span class="koboSpan" id="kobo.2291.2" xmlns="http://www.w3.org/1999/xhtml">*
* Listing product items
*
Running query: SELECT p.id, p.productName, p.unitPrice FROM Items p WHERE p.productId = '78'
Status code: OK, Request charge: 2.83 RUs.
</span><span class="koboSpan" id="kobo.2291.3" xmlns="http://www.w3.org/1999/xhtml">1 products found.
</span><span class="koboSpan" id="kobo.2291.4" xmlns="http://www.w3.org/1999/xhtml">id: 78, productName: Barista's Chilli Jam, unitPrice: €12.00
</span></code></pre>
</li>
</ol>
<h1 class="heading-1" id="_idParaDest-186"><span class="koboSpan" id="kobo.2292.1" xmlns="http://www.w3.org/1999/xhtml">Cleaning up Azure resources</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2293.1" xmlns="http://www.w3.org/1999/xhtml">When</span><a id="_idIndexMarker410"/><span class="koboSpan" id="kobo.2294.1" xmlns="http://www.w3.org/1999/xhtml"> you are done with an Azure Cosmos DB account, you must clean up the resources used, or you will incur costs for as long as those resources exist. </span><span class="koboSpan" id="kobo.2294.2" xmlns="http://www.w3.org/1999/xhtml">You can delete resources individually or delete the resource group to delete the entire set of resources. </span><span class="koboSpan" id="kobo.2294.3" xmlns="http://www.w3.org/1999/xhtml">If you delete an Azure Cosmos DB account, then all the databases and containers within it are also deleted:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2295.1" xmlns="http://www.w3.org/1999/xhtml">In the Azure portal, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.2296.1" xmlns="http://www.w3.org/1999/xhtml">All Resources</span></strong><span class="koboSpan" id="kobo.2297.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2298.1" xmlns="http://www.w3.org/1999/xhtml">In your </span><code class="inlineCode"><span class="koboSpan" id="kobo.2299.1" xmlns="http://www.w3.org/1999/xhtml">apps-services-book</span></code><span class="koboSpan" id="kobo.2300.1" xmlns="http://www.w3.org/1999/xhtml"> resource group, click your Azure Cosmos DB account.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2301.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.2302.1" xmlns="http://www.w3.org/1999/xhtml">Overview</span></strong><span class="koboSpan" id="kobo.2303.1" xmlns="http://www.w3.org/1999/xhtml">, and then in the toolbar, click </span><strong class="screenText"><span class="koboSpan" id="kobo.2304.1" xmlns="http://www.w3.org/1999/xhtml">Delete Account</span></strong><span class="koboSpan" id="kobo.2305.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2306.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><strong class="screenText"><span class="koboSpan" id="kobo.2307.1" xmlns="http://www.w3.org/1999/xhtml">Confirm the Account Name</span></strong><span class="koboSpan" id="kobo.2308.1" xmlns="http://www.w3.org/1999/xhtml"> box, enter your account name.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2309.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.2310.1" xmlns="http://www.w3.org/1999/xhtml">Delete</span></strong><span class="koboSpan" id="kobo.2311.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
</ol>
<h1 class="heading-1" id="_idParaDest-187"><span class="koboSpan" id="kobo.2312.1" xmlns="http://www.w3.org/1999/xhtml">Practicing and exploring</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2313.1" xmlns="http://www.w3.org/1999/xhtml">Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with deeper research.</span></p>
<h2 class="heading-2" id="_idParaDest-188"><span class="koboSpan" id="kobo.2314.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.1 – Test your knowledge</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2315.1" xmlns="http://www.w3.org/1999/xhtml">Answer the following questions:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2316.1" xmlns="http://www.w3.org/1999/xhtml">What are the five APIs supported by Azure Cosmos DB?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2317.1" xmlns="http://www.w3.org/1999/xhtml">At what level do you select the API: account, database, container, or partition?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2318.1" xmlns="http://www.w3.org/1999/xhtml">What does </span><em class="italic"><span class="koboSpan" id="kobo.2319.1" xmlns="http://www.w3.org/1999/xhtml">embed</span></em><span class="koboSpan" id="kobo.2320.1" xmlns="http://www.w3.org/1999/xhtml"> mean regarding data modeling with Cosmos DB?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2321.1" xmlns="http://www.w3.org/1999/xhtml">What is the unit of measurement for throughput for Cosmos DB and what does 1 unit represent?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2322.1" xmlns="http://www.w3.org/1999/xhtml">What package should you reference to programmatically work with Cosmos DB resources?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2323.1" xmlns="http://www.w3.org/1999/xhtml">What language do you use to write Cosmos DB Core (SQL) API user-defined functions and stored procedures?</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-189"><span class="koboSpan" id="kobo.2324.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.2 – Practice data modeling and partitioning</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2325.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft documentation has an extensive example of modeling and partitioning Azure Cosmos DB:</span></p>
<p class="normal"><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/sql/how-to-model-partition-example"><span class="url"><span class="koboSpan" id="kobo.2326.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/sql/how-to-model-partition-example</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-190"><span class="koboSpan" id="kobo.2327.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.3 – Explore topics</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2328.1" xmlns="http://www.w3.org/1999/xhtml">Use the links on the following page to learn more details about the topics covered in this chapter:</span></p>
<p class="normal"><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-4---managing-nosql-data-using-azure-cosmos-db"><span class="url"><span class="koboSpan" id="kobo.2329.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-4---managing-nosql-data-using-azure-cosmos-db</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-191"><span class="koboSpan" id="kobo.2330.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.4 – Download cheat sheets</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2331.1" xmlns="http://www.w3.org/1999/xhtml">Download query cheat sheets for the Azure Cosmos DB APIs and review them:</span></p>
<p class="normal"><a href="https://learn.microsoft.com/en-us/azure/cosmos-db/sql/query-cheat-sheet"><span class="url"><span class="koboSpan" id="kobo.2332.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/cosmos-db/sql/query-cheat-sheet</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-192"><span class="koboSpan" id="kobo.2333.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.5 – Explore the Gremlin API for Cosmos DB</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2334.1" xmlns="http://www.w3.org/1999/xhtml">If you are interested, then I have written an optional online-only section where you explore the Azure Cosmos DB graph API that uses the Gremlin API, found at the following link:</span></p>
<p class="normal"><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/ch04-gremlin.md"><span class="url"><span class="koboSpan" id="kobo.2335.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/ch04-gremlin.md</span></span></a></p>
<p class="normal"><span class="koboSpan" id="kobo.2336.1" xmlns="http://www.w3.org/1999/xhtml">To gain more experience with the Gremlin graph API, you could read the following online book:</span></p>
<p class="normal"><a href="https://kelvinlawrence.net/book/Gremlin-Graph-Guide.html"><span class="url"><span class="koboSpan" id="kobo.2337.1" xmlns="http://www.w3.org/1999/xhtml">https://kelvinlawrence.net/book/Gremlin-Graph-Guide.html</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-193"><span class="koboSpan" id="kobo.2338.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 4.6 – Explore NoSQL databases</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2339.1" xmlns="http://www.w3.org/1999/xhtml">This chapter focused on Azure Cosmos DB. </span><span class="koboSpan" id="kobo.2339.2" xmlns="http://www.w3.org/1999/xhtml">If you wish to learn more about NoSQL databases, such as MongoDB, and how to use them with EF Core, then I recommend the following links:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.2340.1" xmlns="http://www.w3.org/1999/xhtml">Use NoSQL databases as a persistence infrastructure</span></strong><span class="koboSpan" id="kobo.2341.1" xmlns="http://www.w3.org/1999/xhtml">: </span><a href="https://learn.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/nosql-database-persistence-infrastructure"><span class="url"><span class="koboSpan" id="kobo.2342.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/standard/microservices-architecture/microservice-ddd-cqrs-patterns/nosql-database-persistence-infrastructure</span></span></a></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.2343.1" xmlns="http://www.w3.org/1999/xhtml">Document Database Providers for Entity Framework Core</span></strong><span class="koboSpan" id="kobo.2344.1" xmlns="http://www.w3.org/1999/xhtml">: </span><a href="https://github.com/BlueshiftSoftware/EntityFrameworkCore"><span class="url"><span class="koboSpan" id="kobo.2345.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/BlueshiftSoftware/EntityFrameworkCore</span></span></a></li>
</ul>
<h1 class="heading-1" id="_idParaDest-194"><span class="koboSpan" id="kobo.2346.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2347.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, you learned:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2348.1" xmlns="http://www.w3.org/1999/xhtml">How to store flexibly structured data in Azure Cosmos DB.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2349.1" xmlns="http://www.w3.org/1999/xhtml">How to create Cosmos DB resources in the emulator and in the Azure cloud.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2350.1" xmlns="http://www.w3.org/1999/xhtml">How to manipulate data using the Cosmos SQL API.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2351.1" xmlns="http://www.w3.org/1999/xhtml">How to implement server-side programming in Cosmos DB using JavaScript.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2352.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, you will use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2353.1" xmlns="http://www.w3.org/1999/xhtml">Task</span></code><span class="koboSpan" id="kobo.2354.1" xmlns="http://www.w3.org/1999/xhtml"> type to improve the performance of your applications.</span></p>
</div>
</body>
</html>
