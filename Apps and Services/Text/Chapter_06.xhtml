<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Chapter_06</title>
<link href="../Styles/syntax-highlighting.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/epub.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="Chapter_06" lang="en-US" xml:lang="en-US">
<div class="Basic-Text-Frame" id="_idContainer205">
<h1 class="chapterNumber"><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">6</span></h1>
<h1 class="chapterTitle" id="_idParaDest-226"><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">Using Popular Third-Party Libraries</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">This chapter is about some popular third-party libraries for .NET that enable you to perform actions that either are not possible with the core .NET libraries or are better than the built-in functionality. </span><span class="koboSpan" id="kobo.3.2" xmlns="http://www.w3.org/1999/xhtml">These actions include manipulating images with </span><strong class="keyWord"><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp</span></strong><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">, logging with </span><strong class="keyWord"><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml">Serilog</span></strong><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">, mapping objects to other objects with </span><strong class="keyWord"><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></strong><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">, making unit test assertions with </span><strong class="keyWord"><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></strong><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">, validating data with </span><strong class="keyWord"><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></strong><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">, and generating PDFs with </span><strong class="keyWord"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF</span></strong><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">This chapter covers the following topics:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">Which third-party libraries are most popular?</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">Working with images</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml">Logging with Serilog</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml">Mapping between objects</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml">Making fluent assertions in unit testing</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">Validating data</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml">Generating PDFs</span></li>
</ul>
<h1 class="heading-1" id="_idParaDest-227"><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml">Which third-party libraries are most popular?</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml">To help me decide which third-party libraries to include in this book, I researched which are downloaded most frequently at </span><a href="https://www.nuget.org/stats/packages"><span class="url"><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/stats/packages</span></span></a><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml">, and, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.1</span></em><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">, they are:</span></p>
<table class="table-container" id="table001-4">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml">Rank</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml">Package</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">Downloads</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml">1</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml">newtonsoft.json</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml">167,927,712</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">2</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml">serilog</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml">42,436,567</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml">3</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml">awssdk.core</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">36,423,449</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml">4</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">castle.core</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml">28,383,411</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml">5</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">newtonsoft.json.bson</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml">26,547,661</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">6</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml">swashbuckle.aspnetcore.swagger</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">25,828,940</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml">7</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml">swashbuckle.aspnetcore.swaggergen</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">25,823,941</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml">8</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml">polly</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml">22,487,368</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml">9</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml">automapper</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">21,679,921</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml">10</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">swashbuckle.aspnetcore.swaggerui</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml">21,373,873</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">12</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml">moq</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">19,408,440</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml">15</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">fluentvalidation</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml">17,739,259</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml">16</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">humanizer.core</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml">17,602,598</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">23</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml">stackexchange.redis</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">15,771,377</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml">36</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml">fluentassertions</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml">12,244,097</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">40</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml">dapper</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">10,819,569</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml">52</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml">rabbitmq.client</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">8,591,362</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">83</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml">hangfire.core</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">5,479,381</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml">94</span></p>
</td>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml">nodatime</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml">4,944,830</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.1: The most downloaded NuGet packages</span></p>
<h2 class="heading-2" id="_idParaDest-228"><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">What is covered in my books</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">My book </span><em class="italic"><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">C# 12 and .NET 8 – Modern Cross-Platform Development Fundamentals</span></em><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml"> introduces processing JSON using </span><code class="inlineCode"><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml">newtonsoft.json</span></code><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml"> and documenting web services using </span><code class="inlineCode"><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml">swashbuckle</span></code><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml">For now, using Castle Core to generate dynamic proxies and typed dictionaries, or deploying to and integrating with </span><strong class="keyWord"><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml">Amazon Web Services</span></strong><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">AWS</span></strong><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml">), is out of scope for this book.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">As well as raw download numbers, questions from readers and the usefulness of the library also contributed to my decision to include a library in this chapter, as summarized in the following list:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for manipulating images: </span><strong class="keyWord"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for manipulating text: </span><strong class="keyWord"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for logging: </span><strong class="keyWord"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">Serilog</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for object mapping: </span><strong class="keyWord"><span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for unit test assertions: </span><strong class="keyWord"><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for data validation: </span><strong class="keyWord"><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml">Open-source library for generating PDFs: </span><strong class="keyWord"><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF</span></strong></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="chapterRef"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 7</span></em><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">Handling Dates, Times, and Internationalization</span></em><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml">, I cover the most popular library for handling dates and times: </span><strong class="keyWord"><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml">Noda Time</span></strong><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="chapterRef"><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 9</span></em><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml">Caching, Queuing, and Resilient Background Services</span></em><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml">, I cover a few more popular libraries, as summarized in the following list:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for resilience and transient fault handling: </span><strong class="keyWord"><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml">Polly</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for scheduling jobs and implementing background services: </span><strong class="keyWord"><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for distributed caching: </span><strong class="keyWord"><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">Redis</span></strong></li>
<li class="bulletList"><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml">Most popular library for queuing: </span><strong class="keyWord"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">RabbitMQ</span></strong></li>
</ul>
<h1 class="heading-1" id="_idParaDest-229"><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml">Working with images</span></h1>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp</span></strong><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml"> is a </span><a id="_idIndexMarker473"/><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml">third-party cross-platform 2D graphics library. </span><span class="koboSpan" id="kobo.142.2" xmlns="http://www.w3.org/1999/xhtml">When .NET Core 1.0 was in development, there was negative feedback from the community </span><a id="_idIndexMarker474"/><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml">about the missing </span><code class="inlineCode"><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml">System.Drawing</span></code><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml"> namespace for working with 2D images. </span><span class="koboSpan" id="kobo.145.2" xmlns="http://www.w3.org/1999/xhtml">The ImageSharp project was started to fill that gap for modern .NET applications.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">In their official documentation for </span><code class="inlineCode"><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml">System.Drawing</span></code><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml">, Microsoft says, “The </span><code class="inlineCode"><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">System.Drawing</span></code><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml"> namespace is not recommended for new development due to not being supported within a Windows or ASP.NET service, and it is not cross-platform. </span><span class="koboSpan" id="kobo.150.2" xmlns="http://www.w3.org/1999/xhtml">ImageSharp and SkiaSharp are recommended as alternatives.”</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml">Six Labors released ImageSharp 3.0 in March 2023. </span><span class="koboSpan" id="kobo.151.2" xmlns="http://www.w3.org/1999/xhtml">It now requires .NET 6 or later and major future versions will target LTS releases of .NET, like .NET 8. </span><span class="koboSpan" id="kobo.151.3" xmlns="http://www.w3.org/1999/xhtml">You can read the announcement at the following link: </span><a href="https://sixlabors.com/posts/announcing-imagesharp-300/"><span class="url"><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml">https://sixlabors.com/posts/announcing-imagesharp-300/</span></span></a><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-230"><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml">Generating grayscale thumbnails</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">Let’s see</span><a id="_idIndexMarker475"/><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml"> what can be achieved with ImageSharp:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a console app project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages</span></code></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml">Enable native AOT publish</span></strong><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages</span></code><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml"> project, create an </span><code class="inlineCode"><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml"> folder and download the nine images from the following link to it: </span><a href="https://github.com/markjprice/apps-services-net8/tree/master/images/Categories"><span class="url"><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/tree/master/images/Categories</span></span></a><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml">. </span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio 2022, then the </span><code class="inlineCode"><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml"> folder and its files must be copied to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages\bin\Debug\net8</span></code><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml"> folder where the compiled console app will run. </span><span class="koboSpan" id="kobo.181.2" xmlns="http://www.w3.org/1999/xhtml">We can configure Visual Studio to do this for us, as shown in the following steps:</span><ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml">Solution Explorer</span></strong><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">, select all nine images.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></strong><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml">, set </span><strong class="screenText"><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml">Copy to Output Directory</span></strong><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><strong class="screenText"><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">Copy always</span></strong><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.1</span></em><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="A picture containing text, screenshot, software, computer icon  Description automatically generated" src="../Images/B19587_06_01.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.1: Setting images to always copy to the output directory</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml">Open</span><a id="_idIndexMarker476"/><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml"> the project file and note the </span><code class="inlineCode"><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;</span></code><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml"> entries that will copy the nine images to the correct folder, as partially shown in the following markup:
            </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;None Update=</span><span class="hljs-string"><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml">"images\categories.jpeg"</span></span><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
    &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
  &lt;/None&gt;
  &lt;None Update=</span><span class="hljs-string"><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">"images\category1.jpeg"</span></span><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
    &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
  &lt;/None&gt;
...
</span></code></pre>
</li>
</ol>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages</span></code><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add a package reference for </span><code class="inlineCode"><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml">SixLabors.ImageSharp</span></code><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk=</span><span class="hljs-string"><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Sdk"</span></span><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
  &lt;PropertyGroup&gt;
    &lt;OutputType&gt;Exe&lt;/OutputType&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;Using Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml">"System.Console"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml"> Static=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml">"true"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml">"SixLabors.ImageSharp"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml">"3.0.2"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">
...
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml">To save space, in other steps like this in this chapter, I will not show the markup to treat warnings as errors or to globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.238.2" xmlns="http://www.w3.org/1999/xhtml">I will only show the </span><code class="inlineCode"><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml">ItemGroup</span></code><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml">PackageReference</span></code><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml"> for task-specific libraries.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="5"><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">Build </span><a id="_idIndexMarker477"/><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">the </span><code class="inlineCode"><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages</span></code><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio 2022, then in </span><strong class="screenText"><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">Solution Explorer</span></strong><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml">, toggle </span><strong class="screenText"><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml">Show All Files</span></strong><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml">obj\Debug\net8.0</span></code><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml"> folder, open </span><code class="inlineCode"><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml">WorkingWithImages.GlobalUsings.g.cs</span></code><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml">, and note that referencing the </span><code class="inlineCode"><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">SixLabors.ImageSharp</span></code><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml"> package adds three global namespace imports alongside the usual ones added by the .NET SDK, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml">// &lt;auto-generated/&gt;</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">::SixLabors.ImageSharp;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">::SixLabors.ImageSharp.PixelFormats;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">global</span></span><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml">::SixLabors.ImageSharp.Processing;
...
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml">If you reference older versions of </span><code class="inlineCode"><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml">SixLabors.ImageSharp</span></code><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml"> like 2.0.0, then it does not do this so you must manually import those three namespaces in each code file. </span><span class="koboSpan" id="kobo.274.2" xmlns="http://www.w3.org/1999/xhtml">This feature is one reason why version 3.0 and later have a minimum requirement of .NET 6.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="8"><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">, delete</span><a id="_idIndexMarker478"/><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml"> the existing statements and then add statements to convert all the files in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml"> folder into grayscale thumbnails at one-tenth size, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-built_in"><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml"> imagesFolder = Path.Combine(
  Environment.CurrentDirectory, </span><span class="hljs-string"><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml">"images"</span></span><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">$"I will look for images in the following folder:\n</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml">{imagesFolder}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml"> (!Directory.Exists(imagesFolder))
{
  WriteLine();
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml">"Folder does not exist!"</span></span><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml">;
}
IEnumerable&lt;</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml">&gt; images =
  Directory.EnumerateFiles(imagesFolder);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml"> imagePath </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml"> images)
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml"> (Path.GetFileNameWithoutExtension(imagePath).EndsWith(</span><span class="hljs-string"><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml">"-thumbnail"</span></span><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml">))
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">$"Skipping:\n  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">{imagePath}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine();
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml">continue</span></span><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">// This file has already been converted.</span></span><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml">
  }
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml"> thumbnailPath = Path.Combine(
    Environment.CurrentDirectory, </span><span class="hljs-string"><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">"images"</span></span><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml">,
    Path.GetFileNameWithoutExtension(imagePath)
    + </span><span class="hljs-string"><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">"-thumbnail"</span></span><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml"> + Path.GetExtension(imagePath));
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml"> (Image image = Image.Load(imagePath))
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml">$"Converting:\n  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml">{imagePath}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml">);
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml">$"To:\n  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml">{thumbnailPath}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml">);
    image.Mutate(x =&gt; x.Resize(image.Width / </span><span class="hljs-number"><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml">, image.Height / </span><span class="hljs-number"><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml">));
    image.Mutate(x =&gt; x.Grayscale());
    image.Save(thumbnailPath);
    WriteLine();
  }
}
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml">"Image processing complete."</span></span><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml"> (OperatingSystem.IsWindows())
{
  Process.Start(</span><span class="hljs-string"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml">"explorer.exe"</span></span><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml">, imagesFolder);
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml">"View the images folder."</span></span><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml">Run the</span><a id="_idIndexMarker479"/><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml"> console app and note the images should be converted into grayscale thumbnails, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml">I will look for images in the following folder:
C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images
Converting:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\categories.jpeg
To:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\categories-thumbnail.jpeg
Converting:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\category1.jpeg
To:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\category1-thumbnail.jpeg
...
</span><span class="koboSpan" id="kobo.347.2" xmlns="http://www.w3.org/1999/xhtml">Converting:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\category8.jpeg
To:
  C:\apps-services-net8\Chapter06\WorkingWithImages\bin\Debug\net8.0\images\category8-thumbnail.jpeg
Image processing complete.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml">In the</span><a id="_idIndexMarker480"/><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml"> filesystem, open the appropriate </span><code class="inlineCode"><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml"> folder and note the much-smaller-in-bytes grayscale thumbnails, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.2</span></em><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_06_02.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.2: Images after processing</span></p>
<h2 class="heading-2" id="_idParaDest-231"><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp packages for drawing and the web</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp </span><a id="_idIndexMarker481"/><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">also has NuGet packages for programmatically drawing images and working with images on the web, as shown in the following list:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">SixLabors.ImageSharp.Drawing</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml">SixLabors.ImageSharp.Web</span></code>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml">: Learn more details at the following link: </span><a href="https://docs.sixlabors.com/"><span class="url"><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml">https://docs.sixlabors.com/</span></span></a><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
</li>
</ul>
<h1 class="heading-1" id="_idParaDest-232"><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">Working with text and numbers using Humanizer</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer manipulates text in </span><code class="inlineCode"><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml"> values, names of </span><code class="inlineCode"><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></code><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml"> values, dates, times, numbers, and quantities.</span></p>
<h2 class="heading-2" id="_idParaDest-233"><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml">Working with text</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml">The</span><a id="_idIndexMarker482"/><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml"> built-in </span><code class="inlineCode"><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml"> type has methods to manipulate</span><a id="_idIndexMarker483"/><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml"> text like </span><code class="inlineCode"><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml">Substring</span></code><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">Trim</span></code><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.380.2" xmlns="http://www.w3.org/1999/xhtml">But there are plenty of other common manipulations that we might want to perform on text. </span><span class="koboSpan" id="kobo.380.3" xmlns="http://www.w3.org/1999/xhtml">For example:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml">You might have an ugly string generated by some code and you want to make it look friendlier to display to a user. </span><span class="koboSpan" id="kobo.381.2" xmlns="http://www.w3.org/1999/xhtml">This is common with </span><code class="inlineCode"><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></code><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml"> types that cannot use spaces in multi-word values.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml">You might build a web content management system, and when a user enters an article title, you need to convert what they enter into a format suitable for a URL path.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml">You might have a long </span><code class="inlineCode"><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml"> value that needs to be truncated to show in the limited space of a mobile user interface.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-234"><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer case transformations</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">Complex transformations</span><a id="_idIndexMarker484"/><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml"> can be performed in sequence by passing multiple Humanizer transformations to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml">Transform</span></code><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml"> method. </span><span class="koboSpan" id="kobo.392.2" xmlns="http://www.w3.org/1999/xhtml">Transforms implement the </span><code class="inlineCode"><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">IStringTransformer</span></code><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml">ICulturedStringTransformer</span></code><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml"> interfaces so you can implement your own custom transforms. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml">The built-in transforms are all casing transformations, and they are listed in </span><em class="italic"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.2</span></em><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml"> along with</span><a id="_idIndexMarker485"/><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml"> convenient alternative methods that extend the </span><code class="inlineCode"><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml"> type:</span></p>
<table class="table-container" id="table002-4">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml">Transform</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml">Example</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml">To.LowerCase</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml">Transforms all characters in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml"> to lowercase.</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml">the cat sat on the mat</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">To.UpperCase</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml">Transforms all characters in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml"> to uppercase.</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml">THE CAT SAT ON THE MAT</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">To.TitleCase</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml">Transforms the first character of each word in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml"> to uppercase.</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml">The Cat Sat on the Mat</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">To.SentenceCase</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">Transforms the first character in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml"> to uppercase. </span><span class="koboSpan" id="kobo.424.2" xmlns="http://www.w3.org/1999/xhtml">It ignores periods (full stops) so it does not recognize sentences!</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">The cat sat on the mat</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.2: Humanizer casing transforms</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml">: It is important to consider the casing of the original text. </span><span class="koboSpan" id="kobo.428.2" xmlns="http://www.w3.org/1999/xhtml">If it is already uppercase, the title and sentence casing options will </span><em class="italic"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">not</span></em><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml"> convert to lowercase! </span><span class="koboSpan" id="kobo.430.2" xmlns="http://www.w3.org/1999/xhtml">You might need to transform to lowercase first, then transform to title or sentence case.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">As well as calling the </span><code class="inlineCode"><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml">Transform</span></code><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml"> method with a transform object like </span><code class="inlineCode"><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">To.TitleCase</span></code><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml">, there are convenience methods for manipulating the case of text, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.3</span></em><span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table003-4">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml">String extension method</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml">Titleize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml">Equivalent to transforming with </span><code class="inlineCode"><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">To.TitleCase</span></code></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml">Pascalize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">Converts strings to upper camel case, also removing underscores</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml">Camelize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml">Same as </span><code class="inlineCode"><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml">Pascalize</span></code><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml"> except that the first character is lowercase</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.3: Humanizer text extension methods</span></p>
<h2 class="heading-2" id="_idParaDest-235"><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer spacing conversions</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml">There are</span><a id="_idIndexMarker486"/><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml"> convenient methods for manipulating the spacing of text, by adding underscores and dashes, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.4</span></em><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table004-4">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">String extension method</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">Underscore</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml">Separates the input words with an underscore</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml">Dasherize</span></code><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">Hyphenate</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml">Replaces underscores with dashes (hyphens) in the string</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">Kebaberize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml">Separates the input words with dashes (hyphens)</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.4: Humanizer spacing conversion methods</span></p>
<h2 class="heading-2" id="_idParaDest-236"><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer’s Singularize and Pluralize methods</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer </span><a id="_idIndexMarker487"/><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml">has two extension methods for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml"> class that </span><a id="_idIndexMarker488"/><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">automate converting between the singular and plural versions of a word, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.5</span></em><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table005-3">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml">String extension method</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml">Singularize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">If the </span><code class="inlineCode"><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml"> contains a plural word, it is converted to the singular equivalent.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml">Pluralize</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml">If the </span><code class="inlineCode"><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml"> contains a singular word, it is converted to the plural equivalent.</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml">Table 6.5: Humanizer’s Singularize and Pluralize methods</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml">These methods are used by Microsoft Entity Framework Core to singularize and pluralize the names of entity classes and their members.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-237"><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">Exploring text manipulations with a console app</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml">Let’s explore</span><a id="_idIndexMarker489"/><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml"> some examples of text manipulation using Humanizer:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">HumanizingData</span></code><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml"> solution. </span><span class="koboSpan" id="kobo.497.2" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio 2022, set the startup project to the current selection.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">HumanizingData</span></code><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add a package reference for </span><code class="inlineCode"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer</span></code><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">"Humanizer"</span></span><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml">"2.14.1"</span></span><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">We are referencing a </span><code class="inlineCode"><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer</span></code><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml"> package that includes all languages. </span><span class="koboSpan" id="kobo.512.2" xmlns="http://www.w3.org/1999/xhtml">If you only need the English language, then you can reference </span><code class="inlineCode"><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer.Core</span></code><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml"> instead. </span><span class="koboSpan" id="kobo.514.2" xmlns="http://www.w3.org/1999/xhtml">If you also need a subset of languages, reference specific language packages using the pattern </span><code class="inlineCode"><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer.Core.&lt;lang&gt;</span></code><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml">, for example, </span><code class="inlineCode"><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer.Core.fr</span></code><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml"> for French.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">Build </span><a id="_idIndexMarker490"/><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml">the </span><code class="inlineCode"><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml">HumanizingData</span></code><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml"> project to restore packages.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">Add a new class file to the project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to import the namespace for working with globalization, and to define a method to configure the console to enable easy switching of the current culture and enable the use of special characters, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml"> System.Globalization; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml">// To use CultureInfo.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></span><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml">ConfigureConsole</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml"> culture = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml">"en-US"</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml">// To enable special characters like … (ellipsis) as a single character.</span></span><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">
    OutputEncoding = System.Text.Encoding.UTF8;
    Thread t = Thread.CurrentThread;
    t.CurrentCulture = CultureInfo.GetCultureInfo(culture);
    t.CurrentUICulture = t.CurrentCulture;
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml">"Current culture: {0}"</span></span><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">, t.CurrentCulture.DisplayName);
    WriteLine();
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements, and then call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml">ConfigureConsole</span></code><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml"> method, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml">ConfigureConsole(); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">// Defaults to en-US culture.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml">, add a statement to import the namespace for working with extension methods provided by Humanizer, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml"> Humanizer; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml">// To use common Humanizer extension methods.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method to output an original </span><code class="inlineCode"><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml"> and then the results of transforming it using the built-in casing</span><a id="_idIndexMarker491"/><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml"> transforms, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml"> original</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml">"Original casing: {0}"</span></span><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">, original);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml">"Lower casing: {0}"</span></span><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">, original.Transform(To.LowerCase));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml">"Upper casing: {0}"</span></span><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml">, original.Transform(To.UpperCase));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml">"Title casing: {0}"</span></span><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml">, original.Transform(To.TitleCase));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">"Sentence casing: {0}"</span></span><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">, original.Transform(To.SentenceCase));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml">"Lower, then Sentence casing: {0}"</span></span><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml">, 
    original.Transform(To.LowerCase, To.SentenceCase));
  WriteLine();
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml">, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings</span></code><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml"> method with three different </span><code class="inlineCode"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml"> values, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings(</span><span class="hljs-string"><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml">"The cat sat on the mat."</span></span><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml">);
OutputCasings(</span><span class="hljs-string"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">"THE CAT SAT ON THE MAT."</span></span><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">);
OutputCasings(</span><span class="hljs-string"><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml">"the cat sat on the mat. </span><span class="koboSpan" id="kobo.602.2" xmlns="http://www.w3.org/1999/xhtml">the frog jumped."</span></span><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml">Run the code and view the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml">Current culture: English (United States)
Original casing: The cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.2" xmlns="http://www.w3.org/1999/xhtml">Lower casing: the cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.3" xmlns="http://www.w3.org/1999/xhtml">Upper casing: THE CAT SAT ON THE MAT.
</span><span class="koboSpan" id="kobo.605.4" xmlns="http://www.w3.org/1999/xhtml">Title casing: The Cat Sat on the Mat.
</span><span class="koboSpan" id="kobo.605.5" xmlns="http://www.w3.org/1999/xhtml">Sentence casing: The cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.6" xmlns="http://www.w3.org/1999/xhtml">Lower, then Sentence casing: The cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.7" xmlns="http://www.w3.org/1999/xhtml">Original casing: THE CAT SAT ON THE MAT.
</span><span class="koboSpan" id="kobo.605.8" xmlns="http://www.w3.org/1999/xhtml">Lower casing: the cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.9" xmlns="http://www.w3.org/1999/xhtml">Upper casing: THE CAT SAT ON THE MAT.
</span><span class="koboSpan" id="kobo.605.10" xmlns="http://www.w3.org/1999/xhtml">Title casing: THE CAT SAT ON THE MAT.
</span><span class="koboSpan" id="kobo.605.11" xmlns="http://www.w3.org/1999/xhtml">Sentence casing: THE CAT SAT ON THE MAT.
</span><span class="koboSpan" id="kobo.605.12" xmlns="http://www.w3.org/1999/xhtml">Lower, then Sentence casing: The cat sat on the mat.
</span><span class="koboSpan" id="kobo.605.13" xmlns="http://www.w3.org/1999/xhtml">Original casing: the cat sat on the mat. </span><span class="koboSpan" id="kobo.605.14" xmlns="http://www.w3.org/1999/xhtml">the frog jumped.
</span><span class="koboSpan" id="kobo.605.15" xmlns="http://www.w3.org/1999/xhtml">Lower casing: the cat sat on the mat. </span><span class="koboSpan" id="kobo.605.16" xmlns="http://www.w3.org/1999/xhtml">the frog jumped.
</span><span class="koboSpan" id="kobo.605.17" xmlns="http://www.w3.org/1999/xhtml">Upper casing: THE CAT SAT ON THE MAT. </span><span class="koboSpan" id="kobo.605.18" xmlns="http://www.w3.org/1999/xhtml">THE FROG JUMPED.
</span><span class="koboSpan" id="kobo.605.19" xmlns="http://www.w3.org/1999/xhtml">Title casing: The Cat Sat on the Mat. </span><span class="koboSpan" id="kobo.605.20" xmlns="http://www.w3.org/1999/xhtml">the Frog Jumped.
</span><span class="koboSpan" id="kobo.605.21" xmlns="http://www.w3.org/1999/xhtml">Sentence casing: The cat sat on the mat. </span><span class="koboSpan" id="kobo.605.22" xmlns="http://www.w3.org/1999/xhtml">the frog jumped.
</span><span class="koboSpan" id="kobo.605.23" xmlns="http://www.w3.org/1999/xhtml">Lower, then Sentence casing: The cat sat on the mat. </span><span class="koboSpan" id="kobo.605.24" xmlns="http://www.w3.org/1999/xhtml">the frog jumped.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define a method that outputs an ugly </span><code class="inlineCode"><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml"> value </span><a id="_idIndexMarker492"/><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml">using various Humanizer extension methods, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml">OutputSpacingAndDashes</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml"> ugly = </span><span class="hljs-string"><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml">"ERROR_MESSAGE_FROM_SERVICE"</span></span><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml">;
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">"Original string: {0}"</span></span><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">, ugly);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml">"Humanized: {0}"</span></span><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml">, ugly.Humanize());
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">// LetterCasing is legacy and will be removed in future.</span></span><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml">
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">"Humanized, lower case: {0}"</span></span><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml">, 
    ugly.Humanize(LetterCasing.LowerCase));
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml">// Use Transform for casing instead.</span></span><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml">
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml">"Transformed (lower case, then sentence case): {0}"</span></span><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml">,
    ugly.Transform(To.LowerCase, To.SentenceCase));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml">"Humanized, Transformed (lower case, then sentence case): {0}"</span></span><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml">,
    ugly.Humanize().Transform(To.LowerCase, To.SentenceCase));
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the previous method calls and then add a statement to call the new method, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml">/*</span></strong></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings("The cat sat on the mat.");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings("THE CAT SAT ON THE MAT.");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml">OutputCasings("the cat sat on the mat. </span><span class="koboSpan" id="kobo.642.2" xmlns="http://www.w3.org/1999/xhtml">the frog jumped.");</span></span>
<span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml">*/</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">OutputSpacingAndDashes();</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">Run the</span><a id="_idIndexMarker493"/><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml"> code and view the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml">Original string: ERROR_MESSAGE_FROM_SERVICE
Humanized: ERROR MESSAGE FROM SERVICE
Humanized, lower case: error message from service
Transformed (lower case, then sentence case): Error_message_from_service
Humanized, Transformed (lower case, then sentence case): Error message from service
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml">Add a new class file to the project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">WondersOfTheAncientWorld.cs</span></code><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">Modify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml">WondersOfTheAncientWorld.cs</span></code><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml"> file, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">Packt.Shared</span></span><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></span><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml"> WondersOfTheAncientWorld : </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></span><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">
{
  None                     = </span><span class="hljs-number"><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml">_0000_0000, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.664.2" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">
  GreatPyramidOfGiza       = </span><span class="hljs-number"><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml">_0000_0001, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.668.2" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml">
  HangingGardensOfBabylon  = </span><span class="hljs-number"><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml">_0000_0010, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.672.2" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml">
  StatueOfZeusAtOlympia    = </span><span class="hljs-number"><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml">_0000_0100, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.676.2" xmlns="http://www.w3.org/1999/xhtml">4</span></span><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml">
  TempleOfArtemisAtEphesus = </span><span class="hljs-number"><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml">_0000_1000, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.680.2" xmlns="http://www.w3.org/1999/xhtml">8</span></span><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">
  MausoleumAtHalicarnassus = </span><span class="hljs-number"><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml">_0001_0000, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.684.2" xmlns="http://www.w3.org/1999/xhtml">16</span></span><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml">
  ColossusOfRhodes         = </span><span class="hljs-number"><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml">_0010_0000, </span><span class="hljs-comment"><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.688.2" xmlns="http://www.w3.org/1999/xhtml">32</span></span><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml">
  LighthouseOfAlexandria   = </span><span class="hljs-number"><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml">0b</span></span><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml">_0100_0000  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml">// i.e. </span><span class="koboSpan" id="kobo.692.2" xmlns="http://www.w3.org/1999/xhtml">64</span></span><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></code><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml"> that we just defined, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml"> Packt.Shared; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml">// To use WondersOfTheAncientWorld.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">, define a method to create the </span><code class="inlineCode"><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml">WondersOfTheWorld</span></code><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml"> variable and output its name using various Humanizer extension</span><a id="_idIndexMarker494"/><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml"> methods, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">OutputEnumNames</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml"> favoriteAncientWonder = WondersOfTheAncientWorld.StatueOfZeusAtOlympia;
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml">"Raw enum value name: {0}"</span></span><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">, favoriteAncientWonder);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml">"Humanized: {0}"</span></span><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml">, favoriteAncientWonder.Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">"Humanized, then Titleized: {0}"</span></span><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml">, 
    favoriteAncientWonder.Humanize().Titleize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml">"Truncated to 8 characters: {0}"</span></span><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml">, 
    favoriteAncientWonder.ToString().Truncate(length: </span><span class="hljs-number"><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml">8</span></span><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml">));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml">"Kebaberized: {0}"</span></span><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml">, 
    favoriteAncientWonder.ToString().Kebaberize());
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the previous method call, and then add a call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">OutputEnumNames</span></code><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml">//</span></strong></span><span class="hljs-comment"><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">OutputSpacingAndDashes();</span></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml">OutputEnumNames();</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml">Run the code and view the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">Raw enum value name: StatueOfZeusAtOlympia
Humanized: Statue of zeus at olympia
Humanized, then Titlerized: Statue of Zeus at Olympia
Truncated to 8 characters: StatueO…
Kebaberized: statue-of-zeus-at-olympia
</span></code></pre>
</li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml">Note the </span><code class="inlineCode"><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">Truncate</span></code><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml"> method uses the single-character </span><code class="inlineCode"><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">…</span></code><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml"> (ellipsis) by default. </span><span class="koboSpan" id="kobo.742.2" xmlns="http://www.w3.org/1999/xhtml">If you ask to truncate to a length of 8, it can return the first seven characters followed by the ellipsis character. </span><span class="koboSpan" id="kobo.742.3" xmlns="http://www.w3.org/1999/xhtml">You can specify a different character using an overload of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml">Truncate</span></code><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-238"><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml">Working with numbers</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">Now let’s see </span><a id="_idIndexMarker495"/><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml">how Humanizer can help us with numbers:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">, define a method to create some numbers and then output them using various Humanizer extension methods, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">NumberFormatting</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml"> number = </span><span class="hljs-number"><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">123</span></span><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml">;
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">$"Original number: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">{number}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml">$"Roman: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">{number.ToRoman()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml">$"Words: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">{number.ToWords()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml">$"Ordinal words: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml">{number.ToOrdinalWords()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine();
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml">[] things = { </span><span class="hljs-string"><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml">"fox"</span></span><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml">"person"</span></span><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml">"sheep"</span></span><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml">, 
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml">"apple"</span></span><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml">"goose"</span></span><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">"oasis"</span></span><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml">potato"</span></span><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml">"die"</span></span><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml">"dwarf"</span></span><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml">,
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">"attorney general"</span></span><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml">"biceps"</span></span><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml">};
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml">for</span></span><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml"> i = </span><span class="hljs-number"><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml">; i &lt;= </span><span class="hljs-number"><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">; i++)
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">for</span></span><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml"> j = </span><span class="hljs-number"><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml">; j &lt; things.Length; j++)
    {
      Write(things[j].ToQuantity(i, ShowQuantityAs.Words));
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml"> (j &lt; things.Length - </span><span class="hljs-number"><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">) Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml">", "</span></span><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml">);
    }
    WriteLine();
  }
  WriteLine();
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml"> thousands = </span><span class="hljs-number"><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml">12345</span></span><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml"> millions = </span><span class="hljs-number"><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">123456789</span></span><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml">;
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml">"Original: {0}, Metric: About {1}"</span></span><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml">, thousands,
    thousands.ToMetric(decimals: </span><span class="hljs-number"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml">));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml">"Original: {0}, Metric: {1}"</span></span><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml">, thousands,
    thousands.ToMetric(MetricNumeralFormats.WithSpace 
      | MetricNumeralFormats.UseShortScaleWord, 
      decimals: </span><span class="hljs-number"><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">));
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml">"Original: {0}, Metric: {1}"</span></span><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml">, millions,
    millions.ToMetric(decimals: </span><span class="hljs-number"><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">));
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml">, comment </span><a id="_idIndexMarker496"/><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml">out the previous method call and add a call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml">NumberFormatting</span></code><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml">//</span></strong></span><span class="hljs-comment"><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml">OutputEnumNames();</span></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">NumberFormatting();</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml">Run the code and view the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml">Original number: 123
Roman: CXXIII
Words: one hundred and twenty-three
Ordinal words: hundred and twenty-third
one fox, one person, one sheep, one apple, one goose, one oasis, one potato, one die, one dwarf, one attorney general, one bicep
two foxes, two people, two sheep, two apples, two geese, two oases, two potatoes, two dice, two dwarves, two attorney generals, two biceps
three foxes, three people, three sheep, three apples, three geese, three oases, three potatoes, three dice, three dwarves, three attorney generals, three biceps
Original: 12345, Metric: About 12k
Original: 12345, Metric: About 12 thousand
Original: 123456789, Metric: 123.5M
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer’s default vocabulary is quite decent, but it does not correctly pluralize attorney general (the plural is </span><em class="italic"><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">attorneys general</span></em><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">) or biceps (the singular is </span><em class="italic"><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml">biceps</span></em><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml"> and the plural is </span><em class="italic"><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml">bicepses</span></em><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">).</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for working with Humanizer </span><a id="_idIndexMarker497"/><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">vocabularies, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml"> Humanizer.Inflections; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml">// To use Vocabularies.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml">, at the top of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">NumberFormatting</span></code><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml"> method, add statements to register two irregular words, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml">Vocabularies.Default.AddIrregular(</span><span class="hljs-string"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">"biceps"</span></span><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml">"bicepses"</span></span><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml">);
Vocabularies.Default.AddIrregular(</span><span class="hljs-string"><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml">"attorney general"</span></span><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml">"attorneys general"</span></span><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml">Run the code, view the result, and note that the two irregular words now output correctly.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-239"><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">Working with dates and times</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">Now let’s see </span><a id="_idIndexMarker498"/><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml">how Humanizer can help us with dates and times:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml">Program.Functions.cs</span></code><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml">, define a method to get the current date and time and some number of days, and then output them using various Humanizer extension methods, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">DateTimeFormatting</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml">
{
  DateTimeOffset now = DateTimeOffset.Now;
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml">// By default, all Humanizer comparisons are to Now (UTC).</span></span><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml">
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml">$"Now (UTC): </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml">{now}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">"Add 3 hours, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddHours(</span><span class="hljs-number"><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">"Add 3 hours and 1 minute, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddHours(</span><span class="hljs-number"><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">).AddMinutes(</span><span class="hljs-number"><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml">Subtract 3 hours, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddHours(</span><span class="hljs-number"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">-3</span></span><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml">"Add 24 hours, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddHours(</span><span class="hljs-number"><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">24</span></span><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml">"Add 25 hours, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddHours(</span><span class="hljs-number"><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml">25</span></span><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">"Add 7 days, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddDays(</span><span class="hljs-number"><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml">7</span></span><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml">"Add 7 days and 1 minute, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddDays(</span><span class="hljs-number"><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml">7</span></span><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml">).AddMinutes(</span><span class="hljs-number"><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml">"Add 1 month, Humanized: {0}"</span></span><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">, 
    now.AddMonths(</span><span class="hljs-number"><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml">).Humanize());
  WriteLine();
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml">// Examples of TimeSpan humanization.</span></span>
<span class="hljs-built_in"><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml">[] daysArray = { </span><span class="hljs-number"><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml">12</span></span><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml">13</span></span><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">14</span></span><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">15</span></span><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml">16</span></span><span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml"> };
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml"> days </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml"> daysArray)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml">"{0} days, Humanized: {1}"</span></span><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml">,
      days, TimeSpan.FromDays(days).Humanize());
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml">"{0} days, Humanized with precision 2: {1}"</span></span><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml">,
      days, TimeSpan.FromDays(days).Humanize(precision: </span><span class="hljs-number"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml">));
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">"{0} days, Humanized with max unit days: {1}"</span></span><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml">,
      days, TimeSpan.FromDays(days).Humanize(
        maxUnit: Humanizer.Localisation.TimeUnit.Day));
    WriteLine();
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml">// Examples of clock notation.</span></span><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">
  TimeOnly[] times = { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml"> TimeOnly(</span><span class="hljs-number"><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml">9</span></span><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml">),
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml"> TimeOnly(</span><span class="hljs-number"><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml">9</span></span><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml">15</span></span><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">), </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml"> TimeOnly(</span><span class="hljs-number"><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">15</span></span><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml">30</span></span><span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml">) };
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml"> (TimeOnly time </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml"> times)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml">"{0}: {1}"</span></span><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">, time, time.ToClockNotation());
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the previous method call and add a call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">DateTimeFormatting</span></code><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml">//</span></strong></span><span class="hljs-comment"><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">NumberFormatting();</span></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml">DateTimeFormatting();</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml">Run the </span><a id="_idIndexMarker499"/><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml">code and view the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">Current culture: English (United States)
Now (UTC): 5/30/2023 8:12:51 AM +01:00
Add 3 hours, Humanized: 2 hours from now
Add 3 hours and 1 minute, Humanized: 3 hours from now
Subtract 3 hours, Humanized: 3 hours ago
Add 24 hours, Humanized: 23 hours from now
Add 25 hours, Humanized: tomorrow
Add 7 days, Humanized: 6 days from now
Add 7 days and 1 minute, Humanized: 7 days from now
Add 1 month, Humanized: one month from now
12 days, Humanized: 1 week
12 days, Humanized with precision 2: 1 week, 5 days
12 days, Humanized with max unit days: 12 days
13 days, Humanized: 1 week
13 days, Humanized with precision 2: 1 week, 6 days
13 days, Humanized with max unit days: 13 days
14 days, Humanized: 2 weeks
14 days, Humanized with precision 2: 2 weeks
14 days, Humanized with max unit days: 14 days
15 days, Humanized: 2 weeks
15 days, Humanized with precision 2: 2 weeks, 1 day
15 days, Humanized with max unit days: 15 days
16 days, Humanized: 2 weeks
16 days, Humanized with precision 2: 2 weeks, 2 days
16 days, Humanized with max unit days: 16 days
9:00 AM: nine o'clock
9:15 AM: a quarter past nine
3:30 PM: half past three
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml">, specify </span><a id="_idIndexMarker500"/><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml">the French language and region when configuring the console, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml">ConfigureConsole(</span><span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">"fr-FR"</span></strong></span><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml">); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">// Defaults to en-US culture.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml">Run the code, view the result, and note that the text is localized to French.</span></li>
</ol>
<h1 class="heading-1" id="_idParaDest-240"><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml">Logging with Serilog</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">Although .NET includes</span><a id="_idIndexMarker501"/><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml"> logging frameworks, third-party logging providers give more power</span><a id="_idIndexMarker502"/><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml"> and flexibility by using </span><strong class="keyWord"><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml">structured event data</span></strong><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1015.2" xmlns="http://www.w3.org/1999/xhtml">Serilog is the most popular.</span></p>
<h2 class="heading-2" id="_idParaDest-241"><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml">Structured event data</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml">Most systems write plain text messages to their logs. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml">Serilog </span><a id="_idIndexMarker503"/><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">can be told to write serialized structured data to the log. </span><span class="koboSpan" id="kobo.1019.2" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml">@</span></code><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml"> symbol prefixing a parameter tells Serilog to serialize the object passed in, instead of just the result of calling the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml">ToString</span></code><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml"> method. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml">Later, that complex object can be queried for improved search and sort capabilities in the logs.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml">For example: </span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml"> lineitem = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml"> { ProductId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml">11</span></span><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">, UnitPrice = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">25.49</span></span><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">, Quantity = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml"> };
log.Information(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">Added {@LineItem} to shopping cart."</span></span><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml">, lineitem);
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">You can learn more about how Serilog handles structured data at the following link: </span><a href="https://github.com/serilog/serilog/wiki/Structured-Data"><span class="url"><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/serilog/serilog/wiki/Structured-Data</span></span></a><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-242"><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml">Serilog sinks</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">All logging </span><a id="_idIndexMarker504"/><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml">systems need to record the log entries somewhere. </span><span class="koboSpan" id="kobo.1044.2" xmlns="http://www.w3.org/1999/xhtml">That could be to the console output, a file, or a more complex data store like a relational database or cloud data store. </span><span class="koboSpan" id="kobo.1044.3" xmlns="http://www.w3.org/1999/xhtml">Serilog calls these </span><strong class="keyWord"><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">sinks</span></strong><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml">Serilog has hundreds of official and third-party sink packages for all the possible places you might want to record your logs. </span><span class="koboSpan" id="kobo.1047.2" xmlns="http://www.w3.org/1999/xhtml">To use them, just include the appropriate package. </span><span class="koboSpan" id="kobo.1047.3" xmlns="http://www.w3.org/1999/xhtml">The most popular are shown in the following list:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.file</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.console</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.periodicbatching</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.debug</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.rollingfile</span></code><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml"> (deprecated; use </span><code class="inlineCode"><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.file</span></code><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml"> instead)</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.applicationinsights</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml">serilog.sinks.mssqlserver</span></code></li>
</ul>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml">There are more than 470 packages currently listed on Microsoft’s public NuGet feed: </span><a href="https://www.nuget.org/packages?q=serilog.sinks"><span class="url"><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/packages?q=serilog.sinks</span></span></a><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-243"><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml">Logging to the console and a rolling file with Serilog</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml">Use</span><a id="_idIndexMarker505"/><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml"> your</span><a id="_idIndexMarker506"/><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml"> preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml"> to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add a package reference for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml">Serilog</span></code><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">, including sinks for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml">file</span></code><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml"> (which also supports rolling files), as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">"Serilog"</span></span><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml">"3.1.1"</span></span><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">"Serilog.Sinks.Console"</span></span><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">"5.0.0"</span></span><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">"Serilog.Sinks.File"</span></span><span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml">5.0.0"</span></span><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new folder named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml"> project, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml">ProductPageView.cs</span></code><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging.Models</span></span><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml">ProductPageView</span></span><span class="koboSpan" id="kobo.1120.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1121.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1122.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1123.1" xmlns="http://www.w3.org/1999/xhtml"> ProductId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1124.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1125.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1126.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1127.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1128.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1129.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1130.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1130.2" xmlns="http://www.w3.org/1999/xhtml">PageTitle { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1131.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1132.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1133.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1134.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1135.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1136.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1137.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1137.2" xmlns="http://www.w3.org/1999/xhtml">SiteSection { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1138.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1139.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1140.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1141.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1142.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1143.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1144.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements and then import some namespaces for working with Serilog, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1145.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1146.1" xmlns="http://www.w3.org/1999/xhtml"> Serilog; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1147.1" xmlns="http://www.w3.org/1999/xhtml">// To use Log, LoggerConfiguration, RollingInterval.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1148.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1149.1" xmlns="http://www.w3.org/1999/xhtml"> Serilog.Core; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1150.1" xmlns="http://www.w3.org/1999/xhtml">// To use Logger.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1151.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1152.1" xmlns="http://www.w3.org/1999/xhtml"> Serilogging.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1153.1" xmlns="http://www.w3.org/1999/xhtml">// To use ProductPageView.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1154.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1155.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1156.1" xmlns="http://www.w3.org/1999/xhtml">, create a logger configuration that will write to the console as well as </span><a id="_idIndexMarker507"/><span class="koboSpan" id="kobo.1157.1" xmlns="http://www.w3.org/1999/xhtml">configure a rolling interval that means a </span><a id="_idIndexMarker508"/><span class="koboSpan" id="kobo.1158.1" xmlns="http://www.w3.org/1999/xhtml">new file is created each day, and write various levels of log entries, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.1159.1" xmlns="http://www.w3.org/1999/xhtml">// Create a new logger that will write to the console and to</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1160.1" xmlns="http://www.w3.org/1999/xhtml">// a text file, one-file-per-day, named with the date.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1161.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1162.1" xmlns="http://www.w3.org/1999/xhtml"> Logger log = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1163.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1164.1" xmlns="http://www.w3.org/1999/xhtml"> LoggerConfiguration()
    .WriteTo.Console()
    .WriteTo.File(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1165.1" xmlns="http://www.w3.org/1999/xhtml">"log.txt"</span></span><span class="koboSpan" id="kobo.1166.1" xmlns="http://www.w3.org/1999/xhtml">, rollingInterval: RollingInterval.Day)
    .CreateLogger();
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1167.1" xmlns="http://www.w3.org/1999/xhtml">// Assign the new logger to the static entry point for logging.</span></span><span class="koboSpan" id="kobo.1168.1" xmlns="http://www.w3.org/1999/xhtml">
Log.Logger = log;
Log.Information(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1169.1" xmlns="http://www.w3.org/1999/xhtml">"The global logger has been configured."</span></span><span class="koboSpan" id="kobo.1170.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1171.1" xmlns="http://www.w3.org/1999/xhtml">// Log some example entries of differing severity.</span></span><span class="koboSpan" id="kobo.1172.1" xmlns="http://www.w3.org/1999/xhtml">
Log.Warning(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1173.1" xmlns="http://www.w3.org/1999/xhtml">"Danger, Serilog, danger!"</span></span><span class="koboSpan" id="kobo.1174.1" xmlns="http://www.w3.org/1999/xhtml">);
Log.Error(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1175.1" xmlns="http://www.w3.org/1999/xhtml">"This is an error!"</span></span><span class="koboSpan" id="kobo.1176.1" xmlns="http://www.w3.org/1999/xhtml">);
Log.Fatal(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1177.1" xmlns="http://www.w3.org/1999/xhtml">"Fatal problem!"</span></span><span class="koboSpan" id="kobo.1178.1" xmlns="http://www.w3.org/1999/xhtml">);
ProductPageView pageView = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1179.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1180.1" xmlns="http://www.w3.org/1999/xhtml">() { 
  PageTitle = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1181.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="koboSpan" id="kobo.1182.1" xmlns="http://www.w3.org/1999/xhtml">, 
  SiteSection = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1183.1" xmlns="http://www.w3.org/1999/xhtml">"Beverages"</span></span><span class="koboSpan" id="kobo.1184.1" xmlns="http://www.w3.org/1999/xhtml">, 
  ProductId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1185.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.1186.1" xmlns="http://www.w3.org/1999/xhtml"> };
Log.Information(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1187.1" xmlns="http://www.w3.org/1999/xhtml">"{@PageView} occurred at {Viewed}"</span></span><span class="koboSpan" id="kobo.1188.1" xmlns="http://www.w3.org/1999/xhtml">,
  pageView, DateTimeOffset.UtcNow);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1189.1" xmlns="http://www.w3.org/1999/xhtml">// For a log with a buffer, like a text file logger, you</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1190.1" xmlns="http://www.w3.org/1999/xhtml">// must flush before ending the app.</span></span><span class="koboSpan" id="kobo.1191.1" xmlns="http://www.w3.org/1999/xhtml">
Log.CloseAndFlush();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1192.1" xmlns="http://www.w3.org/1999/xhtml">Run </span><a id="_idIndexMarker509"/><span class="koboSpan" id="kobo.1193.1" xmlns="http://www.w3.org/1999/xhtml">the </span><a id="_idIndexMarker510"/><span class="koboSpan" id="kobo.1194.1" xmlns="http://www.w3.org/1999/xhtml">console app and note the messages, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1195.1" xmlns="http://www.w3.org/1999/xhtml">[07:09:43 INF] The global logger has been configured.
</span><span class="koboSpan" id="kobo.1195.2" xmlns="http://www.w3.org/1999/xhtml">[07:09:43 WRN] Danger, Serilog, danger!
</span><span class="koboSpan" id="kobo.1195.3" xmlns="http://www.w3.org/1999/xhtml">[07:09:43 ERR] This is an error!
</span><span class="koboSpan" id="kobo.1195.4" xmlns="http://www.w3.org/1999/xhtml">[07:09:43 FTL] Fatal problem!
</span><span class="koboSpan" id="kobo.1195.5" xmlns="http://www.w3.org/1999/xhtml">[07:09:43 INF] {"ProductId": 1, "PageTitle": "Chai", "SiteSection": "Beverages", "$type": "ProductPageView"} occurred at 09/07/2023 15:08:44 +00:00
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1196.1" xmlns="http://www.w3.org/1999/xhtml">Open the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1197.1" xmlns="http://www.w3.org/1999/xhtml">logYYYYMMDD.txt</span></code><span class="koboSpan" id="kobo.1198.1" xmlns="http://www.w3.org/1999/xhtml"> file, where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1199.1" xmlns="http://www.w3.org/1999/xhtml">YYYY</span></code><span class="koboSpan" id="kobo.1200.1" xmlns="http://www.w3.org/1999/xhtml"> is the year, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1201.1" xmlns="http://www.w3.org/1999/xhtml">MM</span></code><span class="koboSpan" id="kobo.1202.1" xmlns="http://www.w3.org/1999/xhtml"> is the month, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1203.1" xmlns="http://www.w3.org/1999/xhtml">DD</span></code><span class="koboSpan" id="kobo.1204.1" xmlns="http://www.w3.org/1999/xhtml"> is the day, and note it contains the same messages:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1205.1" xmlns="http://www.w3.org/1999/xhtml">For Visual Studio 2022, the log file will be written to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1206.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging\bin\Debug\net8.0</span></code><span class="koboSpan" id="kobo.1207.1" xmlns="http://www.w3.org/1999/xhtml"> folder.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1208.1" xmlns="http://www.w3.org/1999/xhtml">For Visual Studio Code and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1209.1" xmlns="http://www.w3.org/1999/xhtml">dotnet run</span></code><span class="koboSpan" id="kobo.1210.1" xmlns="http://www.w3.org/1999/xhtml">, the log file will be written to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1211.1" xmlns="http://www.w3.org/1999/xhtml">Serilogging</span></code><span class="koboSpan" id="kobo.1212.1" xmlns="http://www.w3.org/1999/xhtml"> folder.</span><div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1213.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.1214.1" xmlns="http://www.w3.org/1999/xhtml">: Learn more details at the following link: </span><a href="https://serilog.net/"><span class="url"><span class="koboSpan" id="kobo.1215.1" xmlns="http://www.w3.org/1999/xhtml">https://serilog.net/</span></span></a><span class="koboSpan" id="kobo.1216.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
</li>
</ul>
</li>
</ol>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1217.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1218.1" xmlns="http://www.w3.org/1999/xhtml">: Disable logging when it is not needed. </span><span class="koboSpan" id="kobo.1218.2" xmlns="http://www.w3.org/1999/xhtml">Logging can get costly fast. </span><span class="koboSpan" id="kobo.1218.3" xmlns="http://www.w3.org/1999/xhtml">For example, one organization was spending $10,000 per month on cloud resources, much more than predicted, and they didn’t know why. </span><span class="koboSpan" id="kobo.1218.4" xmlns="http://www.w3.org/1999/xhtml">It turned out they were logging every SQL statement executed in production. </span><span class="koboSpan" id="kobo.1218.5" xmlns="http://www.w3.org/1999/xhtml">By “flipping a switch” to stop that logging they saved $8,500 per month! </span><span class="koboSpan" id="kobo.1218.6" xmlns="http://www.w3.org/1999/xhtml">You can read Milan Jovanović’s story at the following link: </span><a href="https://www.linkedin.com/posts/milan-jovanovic_i-helped-a-team-save-100k-in-azure-cloud-activity-7109887614664474625-YDiU/"><span class="url"><span class="koboSpan" id="kobo.1219.1" xmlns="http://www.w3.org/1999/xhtml">https://www.linkedin.com/posts/milan-jovanovic_i-helped-a-team-save-100k-in-azure-cloud-activity-7109887614664474625-YDiU/</span></span></a><span class="koboSpan" id="kobo.1220.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-244"><span class="koboSpan" id="kobo.1221.1" xmlns="http://www.w3.org/1999/xhtml">Mapping between objects</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1222.1" xmlns="http://www.w3.org/1999/xhtml">One of the most </span><a id="_idIndexMarker511"/><span class="koboSpan" id="kobo.1223.1" xmlns="http://www.w3.org/1999/xhtml">boring parts of being a programmer is mapping between objects. </span><span class="koboSpan" id="kobo.1223.2" xmlns="http://www.w3.org/1999/xhtml">It is common to need to integrate systems or components that have conceptually similar objects but with different structures. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1224.1" xmlns="http://www.w3.org/1999/xhtml">Models for data are different for different parts of an application. </span><span class="koboSpan" id="kobo.1224.2" xmlns="http://www.w3.org/1999/xhtml">Models that represent data in storage are often </span><a id="_idIndexMarker512"/><span class="koboSpan" id="kobo.1225.1" xmlns="http://www.w3.org/1999/xhtml">called </span><strong class="keyWord"><span class="koboSpan" id="kobo.1226.1" xmlns="http://www.w3.org/1999/xhtml">entity models</span></strong><span class="koboSpan" id="kobo.1227.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1227.2" xmlns="http://www.w3.org/1999/xhtml">Models that represent data that must be passed between layers are often called </span><strong class="keyWord"><span class="koboSpan" id="kobo.1228.1" xmlns="http://www.w3.org/1999/xhtml">data transfer objects </span></strong><span class="koboSpan" id="kobo.1229.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.1230.1" xmlns="http://www.w3.org/1999/xhtml">DTOs</span></strong><span class="koboSpan" id="kobo.1231.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.1231.2" xmlns="http://www.w3.org/1999/xhtml">Models</span><a id="_idIndexMarker513"/><span class="koboSpan" id="kobo.1232.1" xmlns="http://www.w3.org/1999/xhtml"> that represent only the data that must be presented to a user are often </span><a id="_idIndexMarker514"/><span class="koboSpan" id="kobo.1233.1" xmlns="http://www.w3.org/1999/xhtml">called </span><strong class="keyWord"><span class="koboSpan" id="kobo.1234.1" xmlns="http://www.w3.org/1999/xhtml">view models</span></strong><span class="koboSpan" id="kobo.1235.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1235.2" xmlns="http://www.w3.org/1999/xhtml">All these models are likely to have commonalities but different structures.</span></p>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1236.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></strong><span class="koboSpan" id="kobo.1237.1" xmlns="http://www.w3.org/1999/xhtml"> is a</span><a id="_idIndexMarker515"/><span class="koboSpan" id="kobo.1238.1" xmlns="http://www.w3.org/1999/xhtml"> popular package for mapping objects because it has conventions that make the work as easy as possible. </span><span class="koboSpan" id="kobo.1238.2" xmlns="http://www.w3.org/1999/xhtml">For example, if you have a source member called </span><code class="inlineCode"><span class="koboSpan" id="kobo.1239.1" xmlns="http://www.w3.org/1999/xhtml">CompanyName</span></code><span class="koboSpan" id="kobo.1240.1" xmlns="http://www.w3.org/1999/xhtml">, it will be mapped to a destination member with the name </span><code class="inlineCode"><span class="koboSpan" id="kobo.1241.1" xmlns="http://www.w3.org/1999/xhtml">CompanyName</span></code><span class="koboSpan" id="kobo.1242.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1243.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper’s creator, Jimmy Bogard, has written an article about its design philosophy that is worth reading, available at the following link: </span><a href="https://jimmybogard.com/automappers-design-philosophy/"><span class="url"><span class="koboSpan" id="kobo.1244.1" xmlns="http://www.w3.org/1999/xhtml">https://jimmybogard.com/automappers-design-philosophy/</span></span></a><span class="koboSpan" id="kobo.1245.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1246.1" xmlns="http://www.w3.org/1999/xhtml">Let’s see an </span><a id="_idIndexMarker516"/><span class="koboSpan" id="kobo.1247.1" xmlns="http://www.w3.org/1999/xhtml">example of AutoMapper in action. </span><span class="koboSpan" id="kobo.1247.2" xmlns="http://www.w3.org/1999/xhtml">You will create four projects:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1248.1" xmlns="http://www.w3.org/1999/xhtml">A class library for the entity and view models.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1249.1" xmlns="http://www.w3.org/1999/xhtml">A class library to create mapper configurations for reuse in unit tests and actual projects.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1250.1" xmlns="http://www.w3.org/1999/xhtml">A unit test project to test the mappings.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1251.1" xmlns="http://www.w3.org/1999/xhtml">A console app to perform a live mapping.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.1252.1" xmlns="http://www.w3.org/1999/xhtml">We will construct an example object model that represents an e-commerce website customer and their shopping cart with a couple of items, and then map it to a summary view model to present to the user.</span></p>
<h2 class="heading-2" id="_idParaDest-245"><span class="koboSpan" id="kobo.1253.1" xmlns="http://www.w3.org/1999/xhtml">Defining models for an AutoMapper configuration</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1254.1" xmlns="http://www.w3.org/1999/xhtml">To test the</span><a id="_idIndexMarker517"/><span class="koboSpan" id="kobo.1255.1" xmlns="http://www.w3.org/1999/xhtml"> mapping, we will define some </span><code class="inlineCode"><span class="koboSpan" id="kobo.1256.1" xmlns="http://www.w3.org/1999/xhtml">record</span></code><span class="koboSpan" id="kobo.1257.1" xmlns="http://www.w3.org/1999/xhtml"> types. </span><span class="koboSpan" id="kobo.1257.2" xmlns="http://www.w3.org/1999/xhtml">As a reminder, a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1258.1" xmlns="http://www.w3.org/1999/xhtml">record</span></code><span class="koboSpan" id="kobo.1259.1" xmlns="http://www.w3.org/1999/xhtml"> (or </span><code class="inlineCode"><span class="koboSpan" id="kobo.1260.1" xmlns="http://www.w3.org/1999/xhtml">record class</span></code><span class="koboSpan" id="kobo.1261.1" xmlns="http://www.w3.org/1999/xhtml">) is a reference type that has value-based equality. </span><span class="koboSpan" id="kobo.1261.2" xmlns="http://www.w3.org/1999/xhtml">A </span><code class="inlineCode"><span class="koboSpan" id="kobo.1262.1" xmlns="http://www.w3.org/1999/xhtml">class</span></code><span class="koboSpan" id="kobo.1263.1" xmlns="http://www.w3.org/1999/xhtml"> is a reference type that has memory address-based equality (except for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1264.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.1265.1" xmlns="http://www.w3.org/1999/xhtml">, which overrides this behavior).</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1266.1" xmlns="http://www.w3.org/1999/xhtml">It is good practice to always validate your configuration for mappings before using them, so we will start by defining some models and a mapping between them, and then create a unit test for the mappings:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1267.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1268.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.1269.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1270.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.1271.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1272.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1273.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1274.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1275.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1276.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1277.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1278.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1279.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.1280.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1281.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1282.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1283.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1284.1" xmlns="http://www.w3.org/1999/xhtml">Customer.cs</span></code><span class="koboSpan" id="kobo.1285.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents to define an immutable record type named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1286.1" xmlns="http://www.w3.org/1999/xhtml">Customer</span></code><span class="koboSpan" id="kobo.1287.1" xmlns="http://www.w3.org/1999/xhtml"> by using constructor syntax, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1288.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1289.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.1290.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1291.1" xmlns="http://www.w3.org/1999/xhtml">// This record will only have a constructor with the parameters below.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1292.1" xmlns="http://www.w3.org/1999/xhtml">// Objects will be immutable after instantiation using this constructor.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1293.1" xmlns="http://www.w3.org/1999/xhtml">// It will not have a default parameterless constructor.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1294.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1295.1" xmlns="http://www.w3.org/1999/xhtml">record</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1296.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1297.1" xmlns="http://www.w3.org/1999/xhtml">Customer</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1298.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1299.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1300.1" xmlns="http://www.w3.org/1999/xhtml"> FirstName,</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1301.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1302.1" xmlns="http://www.w3.org/1999/xhtml"> LastName</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.1303.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1304.1" xmlns="http://www.w3.org/1999/xhtml">;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1305.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1306.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1307.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1308.1" xmlns="http://www.w3.org/1999/xhtml">LineItem.cs</span></code><span class="koboSpan" id="kobo.1309.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1310.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1311.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.1312.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1313.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1314.1" xmlns="http://www.w3.org/1999/xhtml">record</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1315.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1316.1" xmlns="http://www.w3.org/1999/xhtml">LineItem</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1317.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1318.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1319.1" xmlns="http://www.w3.org/1999/xhtml"> ProductName,</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1320.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1321.1" xmlns="http://www.w3.org/1999/xhtml"> UnitPrice,</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1322.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1323.1" xmlns="http://www.w3.org/1999/xhtml"> Quantity</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.1324.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1325.1" xmlns="http://www.w3.org/1999/xhtml">;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1326.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1327.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1328.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1329.1" xmlns="http://www.w3.org/1999/xhtml">Cart.cs</span></code><span class="koboSpan" id="kobo.1330.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1331.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1332.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.1333.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1334.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1335.1" xmlns="http://www.w3.org/1999/xhtml">record</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1336.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1337.1" xmlns="http://www.w3.org/1999/xhtml">Cart</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1338.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.1339.1" xmlns="http://www.w3.org/1999/xhtml">  Customer Customer,</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.1340.1" xmlns="http://www.w3.org/1999/xhtml">  List&lt;LineItem&gt; Items</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.1341.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1342.1" xmlns="http://www.w3.org/1999/xhtml">;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1343.1" xmlns="http://www.w3.org/1999/xhtml">In</span><a id="_idIndexMarker518"/><span class="koboSpan" id="kobo.1344.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1345.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1346.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1347.1" xmlns="http://www.w3.org/1999/xhtml">Summary.cs</span></code><span class="koboSpan" id="kobo.1348.1" xmlns="http://www.w3.org/1999/xhtml"> in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1349.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.ViewModels</span></code><span class="koboSpan" id="kobo.1350.1" xmlns="http://www.w3.org/1999/xhtml"> namespace (not </span><code class="inlineCode"><span class="koboSpan" id="kobo.1351.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></code><span class="koboSpan" id="kobo.1352.1" xmlns="http://www.w3.org/1999/xhtml">), delete any existing statements, and then define a record type that can have its properties set </span><em class="italic"><span class="koboSpan" id="kobo.1353.1" xmlns="http://www.w3.org/1999/xhtml">after</span></em><span class="koboSpan" id="kobo.1354.1" xmlns="http://www.w3.org/1999/xhtml"> instantiating with a default parameterless constructor, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1355.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1356.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.ViewModels</span></span><span class="koboSpan" id="kobo.1357.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1358.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1359.1" xmlns="http://www.w3.org/1999/xhtml">record</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1360.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1361.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></span><span class="koboSpan" id="kobo.1362.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1363.1" xmlns="http://www.w3.org/1999/xhtml">// These properties can be initialized once but then never changed.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1364.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1365.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1366.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1366.2" xmlns="http://www.w3.org/1999/xhtml">FullName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1367.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1368.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1369.1" xmlns="http://www.w3.org/1999/xhtml">init</span></span><span class="koboSpan" id="kobo.1370.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1371.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1372.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.1373.1" xmlns="http://www.w3.org/1999/xhtml"> Total { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1374.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1375.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1376.1" xmlns="http://www.w3.org/1999/xhtml">init</span></span><span class="koboSpan" id="kobo.1377.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1378.1" xmlns="http://www.w3.org/1999/xhtml">// This record class will have a default parameterless constructor.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1379.1" xmlns="http://www.w3.org/1999/xhtml">// The following commented statement is automatically generated:</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1380.1" xmlns="http://www.w3.org/1999/xhtml">// public Summary() { }</span></span><span class="koboSpan" id="kobo.1381.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1382.1" xmlns="http://www.w3.org/1999/xhtml">For the entity models, we used </span><code class="inlineCode"><span class="koboSpan" id="kobo.1383.1" xmlns="http://www.w3.org/1999/xhtml">record class</span></code><span class="koboSpan" id="kobo.1384.1" xmlns="http://www.w3.org/1999/xhtml"> types defined using the constructor syntax to make them immutable. </span><span class="koboSpan" id="kobo.1384.2" xmlns="http://www.w3.org/1999/xhtml">But an instance of </span><code class="inlineCode"><span class="koboSpan" id="kobo.1385.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></code><span class="koboSpan" id="kobo.1386.1" xmlns="http://www.w3.org/1999/xhtml"> will need to be created using a default parameterless constructor and then its members set by AutoMapper. </span><span class="koboSpan" id="kobo.1386.2" xmlns="http://www.w3.org/1999/xhtml">Therefore, it must be a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1387.1" xmlns="http://www.w3.org/1999/xhtml">record class</span></code><span class="koboSpan" id="kobo.1388.1" xmlns="http://www.w3.org/1999/xhtml"> with public properties that can be set during initialization but not after that. </span><span class="koboSpan" id="kobo.1388.2" xmlns="http://www.w3.org/1999/xhtml">To do this, we use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1389.1" xmlns="http://www.w3.org/1999/xhtml">init</span></code><span class="koboSpan" id="kobo.1390.1" xmlns="http://www.w3.org/1999/xhtml"> keyword.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-246"><span class="koboSpan" id="kobo.1391.1" xmlns="http://www.w3.org/1999/xhtml">Defining mappers for an AutoMapper configuration</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1392.1" xmlns="http://www.w3.org/1999/xhtml">Now we can</span><a id="_idIndexMarker519"/><span class="koboSpan" id="kobo.1393.1" xmlns="http://www.w3.org/1999/xhtml"> define the mappings between models:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1394.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1395.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.1396.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1397.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.1398.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1399.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1400.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1401.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1402.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1403.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1404.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1405.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, add a reference to the latest </span><code class="inlineCode"><span class="koboSpan" id="kobo.1406.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></code><span class="koboSpan" id="kobo.1407.1" xmlns="http://www.w3.org/1999/xhtml"> package, and add a reference to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1408.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1409.1" xmlns="http://www.w3.org/1999/xhtml"> project, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1410.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1411.1" xmlns="http://www.w3.org/1999/xhtml">"AutoMapper"</span></span><span class="koboSpan" id="kobo.1412.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1413.1" xmlns="http://www.w3.org/1999/xhtml">"12.0.1"</span></span><span class="koboSpan" id="kobo.1414.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1415.1" xmlns="http://www.w3.org/1999/xhtml">"..\MappingObjects.Models\MappingObjects.Models.csproj"</span></span><span class="koboSpan" id="kobo.1416.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1417.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1418.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1419.1" xmlns="http://www.w3.org/1999/xhtml"> project to restore packages and compile referenced projects.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1420.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1421.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1422.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1423.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.1424.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1425.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1426.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1427.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1428.1" xmlns="http://www.w3.org/1999/xhtml">CartToSummaryMapper.cs</span></code><span class="koboSpan" id="kobo.1429.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents to create a mapper configuration that maps the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1430.1" xmlns="http://www.w3.org/1999/xhtml">FullName</span></code><span class="koboSpan" id="kobo.1431.1" xmlns="http://www.w3.org/1999/xhtml"> of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1432.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></code><span class="koboSpan" id="kobo.1433.1" xmlns="http://www.w3.org/1999/xhtml"> to a combination of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1434.1" xmlns="http://www.w3.org/1999/xhtml">FirstName</span></code><span class="koboSpan" id="kobo.1435.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1436.1" xmlns="http://www.w3.org/1999/xhtml">LastName</span></code><span class="koboSpan" id="kobo.1437.1" xmlns="http://www.w3.org/1999/xhtml"> from </span><code class="inlineCode"><span class="koboSpan" id="kobo.1438.1" xmlns="http://www.w3.org/1999/xhtml">Customer</span></code><span class="koboSpan" id="kobo.1439.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1440.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1441.1" xmlns="http://www.w3.org/1999/xhtml"> AutoMapper; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1442.1" xmlns="http://www.w3.org/1999/xhtml">// To use MapperConfiguration.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1443.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1444.1" xmlns="http://www.w3.org/1999/xhtml"> AutoMapper.Internal; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1445.1" xmlns="http://www.w3.org/1999/xhtml">// To use the Internal() extension method.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1446.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1447.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1448.1" xmlns="http://www.w3.org/1999/xhtml">// To use Cart.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1449.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1450.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.ViewModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1451.1" xmlns="http://www.w3.org/1999/xhtml">// To use Summary.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1452.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1453.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></span><span class="koboSpan" id="kobo.1454.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1455.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1456.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1457.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1458.1" xmlns="http://www.w3.org/1999/xhtml">CartToSummaryMapper</span></span><span class="koboSpan" id="kobo.1459.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1460.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1461.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1462.1" xmlns="http://www.w3.org/1999/xhtml"> MapperConfiguration </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1463.1" xmlns="http://www.w3.org/1999/xhtml">GetMapperConfiguration</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1464.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1465.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    MapperConfiguration config = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1466.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1467.1" xmlns="http://www.w3.org/1999/xhtml">(cfg =&gt;
    {
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1468.1" xmlns="http://www.w3.org/1999/xhtml">// To fix an issue with the MaxInteger method:</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1469.1" xmlns="http://www.w3.org/1999/xhtml">// https://github.com/AutoMapper/AutoMapper/issues/3988</span></span><span class="koboSpan" id="kobo.1470.1" xmlns="http://www.w3.org/1999/xhtml">
      cfg.Internal().MethodMappingEnabled = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1471.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.1472.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1473.1" xmlns="http://www.w3.org/1999/xhtml">// Configure the mapper using projections.</span></span><span class="koboSpan" id="kobo.1474.1" xmlns="http://www.w3.org/1999/xhtml">
      cfg.CreateMap&lt;Cart, Summary&gt;()
        </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1475.1" xmlns="http://www.w3.org/1999/xhtml">// Map the first and last names formatted to the full name.</span></span><span class="koboSpan" id="kobo.1476.1" xmlns="http://www.w3.org/1999/xhtml">
       .ForMember(dest =&gt; dest.FullName, opt =&gt; opt.MapFrom(src =&gt;
          </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1477.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1478.1" xmlns="http://www.w3.org/1999/xhtml">.Format(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1479.1" xmlns="http://www.w3.org/1999/xhtml">"{0} {1}"</span></span><span class="koboSpan" id="kobo.1480.1" xmlns="http://www.w3.org/1999/xhtml">, 
            src.Customer.FirstName,
            src.Customer.LastName)
        ));
    });
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1481.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.1482.1" xmlns="http://www.w3.org/1999/xhtml"> config;
  }
}
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-247"><span class="koboSpan" id="kobo.1483.1" xmlns="http://www.w3.org/1999/xhtml">Performing tests for an AutoMapper configuration</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1484.1" xmlns="http://www.w3.org/1999/xhtml">Now we can</span><a id="_idIndexMarker520"/><span class="koboSpan" id="kobo.1485.1" xmlns="http://www.w3.org/1999/xhtml"> define unit tests for the mapper:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1486.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1487.1" xmlns="http://www.w3.org/1999/xhtml">xUnit Test Project</span></strong><span class="koboSpan" id="kobo.1488.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1489.1" xmlns="http://www.w3.org/1999/xhtml">xunit</span></code><span class="koboSpan" id="kobo.1490.1" xmlns="http://www.w3.org/1999/xhtml"> named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1491.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></code><span class="koboSpan" id="kobo.1492.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1493.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1494.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1495.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1496.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></code><span class="koboSpan" id="kobo.1497.1" xmlns="http://www.w3.org/1999/xhtml"> project file, add a package reference to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1498.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></code><span class="koboSpan" id="kobo.1499.1" xmlns="http://www.w3.org/1999/xhtml">, as shown highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1500.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1501.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1502.1" xmlns="http://www.w3.org/1999/xhtml">"AutoMapper"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1503.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1504.1" xmlns="http://www.w3.org/1999/xhtml">"12.0.1"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1505.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span><span class="koboSpan" id="kobo.1506.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1507.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Test.Sdk"</span></span><span class="koboSpan" id="kobo.1508.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1509.1" xmlns="http://www.w3.org/1999/xhtml">"17.8.0"</span></span><span class="koboSpan" id="kobo.1510.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1511.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1512.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></code><span class="koboSpan" id="kobo.1513.1" xmlns="http://www.w3.org/1999/xhtml"> project file, add project references to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1514.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Models</span></code><span class="koboSpan" id="kobo.1515.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1516.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1517.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1518.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1519.1" xmlns="http://www.w3.org/1999/xhtml">"..\MappingObjects.Mappers\MappingObjects.Mappers.csproj"</span></span><span class="koboSpan" id="kobo.1520.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1521.1" xmlns="http://www.w3.org/1999/xhtml">"..\MappingObjects.Models\MappingObjects.Models.csproj"</span></span><span class="koboSpan" id="kobo.1522.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1523.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1524.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></code><span class="koboSpan" id="kobo.1525.1" xmlns="http://www.w3.org/1999/xhtml"> project to restore packages and build referenced projects.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1526.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1527.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></code><span class="koboSpan" id="kobo.1528.1" xmlns="http://www.w3.org/1999/xhtml"> project, rename </span><code class="inlineCode"><span class="koboSpan" id="kobo.1529.1" xmlns="http://www.w3.org/1999/xhtml">UnitTest1.cs</span></code><span class="koboSpan" id="kobo.1530.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1531.1" xmlns="http://www.w3.org/1999/xhtml">TestAutoMapperConfig.cs</span></code><span class="koboSpan" id="kobo.1532.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1533.1" xmlns="http://www.w3.org/1999/xhtml">Modify </span><a id="_idIndexMarker521"/><span class="koboSpan" id="kobo.1534.1" xmlns="http://www.w3.org/1999/xhtml">the contents of </span><code class="inlineCode"><span class="koboSpan" id="kobo.1535.1" xmlns="http://www.w3.org/1999/xhtml">TestAutoMapperConfig.cs</span></code><span class="koboSpan" id="kobo.1536.1" xmlns="http://www.w3.org/1999/xhtml"> to get the mapper and then assert that the mapping is complete, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1537.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1538.1" xmlns="http://www.w3.org/1999/xhtml"> AutoMapper; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1539.1" xmlns="http://www.w3.org/1999/xhtml">// To use MapperConfiguration.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1540.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1541.1" xmlns="http://www.w3.org/1999/xhtml"> MappingObjects.Mappers; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1542.1" xmlns="http://www.w3.org/1999/xhtml">// To use CartToSummaryMapper.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1543.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1544.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Tests</span></span><span class="koboSpan" id="kobo.1545.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1546.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1547.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1548.1" xmlns="http://www.w3.org/1999/xhtml">TestAutoMapperConfig</span></span><span class="koboSpan" id="kobo.1549.1" xmlns="http://www.w3.org/1999/xhtml">
{  
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1550.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.1551.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1552.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1553.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1554.1" xmlns="http://www.w3.org/1999/xhtml">TestSummaryMapping</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1555.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1556.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    MapperConfiguration config = CartToSummaryMapper.GetMapperConfiguration();
    config.AssertConfigurationIsValid();
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1557.1" xmlns="http://www.w3.org/1999/xhtml">Run the test:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1558.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio 2022, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.1559.1" xmlns="http://www.w3.org/1999/xhtml">Test</span></strong><span class="koboSpan" id="kobo.1560.1" xmlns="http://www.w3.org/1999/xhtml"> | </span><strong class="screenText"><span class="koboSpan" id="kobo.1561.1" xmlns="http://www.w3.org/1999/xhtml">Run All Tests</span></strong><span class="koboSpan" id="kobo.1562.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1563.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio Code, in </span><strong class="screenText"><span class="koboSpan" id="kobo.1564.1" xmlns="http://www.w3.org/1999/xhtml">Terminal</span></strong><span class="koboSpan" id="kobo.1565.1" xmlns="http://www.w3.org/1999/xhtml">, enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.1566.1" xmlns="http://www.w3.org/1999/xhtml">dotnet test</span></code><span class="koboSpan" id="kobo.1567.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1568.1" xmlns="http://www.w3.org/1999/xhtml">Note the test fails because the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1569.1" xmlns="http://www.w3.org/1999/xhtml">Total</span></code><span class="koboSpan" id="kobo.1570.1" xmlns="http://www.w3.org/1999/xhtml"> member of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1571.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></code><span class="koboSpan" id="kobo.1572.1" xmlns="http://www.w3.org/1999/xhtml"> view model is unmapped, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1573.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.3</span></em><span class="koboSpan" id="kobo.1574.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1575.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_06_03.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1576.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.3: The test fails because the Total member is unmapped</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="9"><span class="koboSpan" id="kobo.1577.1" xmlns="http://www.w3.org/1999/xhtml">In</span><a id="_idIndexMarker522"/><span class="koboSpan" id="kobo.1578.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1579.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Mappers</span></code><span class="koboSpan" id="kobo.1580.1" xmlns="http://www.w3.org/1999/xhtml"> project, in the mapper configuration, after the mapping for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1581.1" xmlns="http://www.w3.org/1999/xhtml">FullName</span></code><span class="koboSpan" id="kobo.1582.1" xmlns="http://www.w3.org/1999/xhtml"> member, add a mapping for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1583.1" xmlns="http://www.w3.org/1999/xhtml">Total</span></code><span class="koboSpan" id="kobo.1584.1" xmlns="http://www.w3.org/1999/xhtml"> member, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1585.1" xmlns="http://www.w3.org/1999/xhtml">cfg.CreateMap&lt;Cart, Summary&gt;()
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1586.1" xmlns="http://www.w3.org/1999/xhtml">// Map the first and last names formatted to the full name.</span></span><span class="koboSpan" id="kobo.1587.1" xmlns="http://www.w3.org/1999/xhtml">
  .ForMember(dest =&gt; dest.FullName, opt =&gt; opt.MapFrom(src =&gt;
    </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1588.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1589.1" xmlns="http://www.w3.org/1999/xhtml">.Format(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1590.1" xmlns="http://www.w3.org/1999/xhtml">"{0} {1}"</span></span><span class="koboSpan" id="kobo.1591.1" xmlns="http://www.w3.org/1999/xhtml">, 
      src.Customer.FirstName, src.Customer.LastName)
  )) </span><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1592.1" xmlns="http://www.w3.org/1999/xhtml">// We have removed a semi-colon from here.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1593.1" xmlns="http://www.w3.org/1999/xhtml">// Map the sum of items to the Total member.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1594.1" xmlns="http://www.w3.org/1999/xhtml">  .ForMember(dest =&gt; dest.Total, opt =&gt; opt.MapFrom(</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1595.1" xmlns="http://www.w3.org/1999/xhtml">    src =&gt; src.Items.Sum(item =&gt; item.UnitPrice * item.Quantity)));</span></strong></span><span class="koboSpan" id="kobo.1596.1" xmlns="http://www.w3.org/1999/xhtml">
});
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1597.1" xmlns="http://www.w3.org/1999/xhtml">Run the test and note that, this time, it passes.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-248"><span class="koboSpan" id="kobo.1598.1" xmlns="http://www.w3.org/1999/xhtml">Performing live mappings between models</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1599.1" xmlns="http://www.w3.org/1999/xhtml">Now that </span><a id="_idIndexMarker523"/><span class="koboSpan" id="kobo.1600.1" xmlns="http://www.w3.org/1999/xhtml">we have validated the configuration of our mapping, we can use it in a live console app:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1601.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1602.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.1603.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1604.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.1605.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1606.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Console</span></code><span class="koboSpan" id="kobo.1607.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1608.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1609.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1610.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1611.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Console</span></code><span class="koboSpan" id="kobo.1612.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1613.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.1614.1" xmlns="http://www.w3.org/1999/xhtml"> class, add a project reference for the two class libraries, and add a package reference for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1615.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></code><span class="koboSpan" id="kobo.1616.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1617.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1618.1" xmlns="http://www.w3.org/1999/xhtml">"..\MappingObjects.Mappers\MappingObjects.Mappers.csproj"</span></span><span class="koboSpan" id="kobo.1619.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1620.1" xmlns="http://www.w3.org/1999/xhtml">"..\MappingObjects.Models\MappingObjects.Models.csproj"</span></span><span class="koboSpan" id="kobo.1621.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1622.1" xmlns="http://www.w3.org/1999/xhtml">"AutoMapper"</span></span><span class="koboSpan" id="kobo.1623.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1624.1" xmlns="http://www.w3.org/1999/xhtml">"12.0.1"</span></span><span class="koboSpan" id="kobo.1625.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1626.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1627.1" xmlns="http://www.w3.org/1999/xhtml">MappingObjects.Console</span></code><span class="koboSpan" id="kobo.1628.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1629.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1630.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1631.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements, add some statements to construct an example object model that represents a customer and their shopping cart with a couple of items, and then map it to a summary view model to present to the user, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1632.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1633.1" xmlns="http://www.w3.org/1999/xhtml"> AutoMapper; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1634.1" xmlns="http://www.w3.org/1999/xhtml">// To use MapperConfiguration, IMapper.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1635.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1636.1" xmlns="http://www.w3.org/1999/xhtml"> MappingObjects.Mappers; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1637.1" xmlns="http://www.w3.org/1999/xhtml">// To use CartToSummaryMapper.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1638.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1639.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1640.1" xmlns="http://www.w3.org/1999/xhtml">// To use Customer, Cart, LineItem.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1641.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1642.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.ViewModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1643.1" xmlns="http://www.w3.org/1999/xhtml">// To use Summary.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1644.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1645.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1646.1" xmlns="http://www.w3.org/1999/xhtml">// To use Encoding.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1647.1" xmlns="http://www.w3.org/1999/xhtml">// Set the console's output encoding to UTF-8 to support</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1648.1" xmlns="http://www.w3.org/1999/xhtml">// Unicode characters like the Euro currency symbol.</span></span><span class="koboSpan" id="kobo.1649.1" xmlns="http://www.w3.org/1999/xhtml">
OutputEncoding = Encoding.UTF8;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1650.1" xmlns="http://www.w3.org/1999/xhtml">// Create an object model from "entity" model types that</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1651.1" xmlns="http://www.w3.org/1999/xhtml">// might have come from a data store like SQL Server.</span></span><span class="koboSpan" id="kobo.1652.1" xmlns="http://www.w3.org/1999/xhtml">
Cart cart = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1653.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1654.1" xmlns="http://www.w3.org/1999/xhtml">(
  Customer: </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1655.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1656.1" xmlns="http://www.w3.org/1999/xhtml">(
    FirstName: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1657.1" xmlns="http://www.w3.org/1999/xhtml">"John"</span></span><span class="koboSpan" id="kobo.1658.1" xmlns="http://www.w3.org/1999/xhtml">,
    LastName: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1659.1" xmlns="http://www.w3.org/1999/xhtml">"Smith"</span></span><span class="koboSpan" id="kobo.1660.1" xmlns="http://www.w3.org/1999/xhtml">
  ), 
  Items: </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1661.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1662.1" xmlns="http://www.w3.org/1999/xhtml">()
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1663.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1664.1" xmlns="http://www.w3.org/1999/xhtml">(ProductName: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1665.1" xmlns="http://www.w3.org/1999/xhtml">"Apples"</span></span><span class="koboSpan" id="kobo.1666.1" xmlns="http://www.w3.org/1999/xhtml">, UnitPrice: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1667.1" xmlns="http://www.w3.org/1999/xhtml">0.49</span></span><span class="koboSpan" id="kobo.1668.1" xmlns="http://www.w3.org/1999/xhtml">M, Quantity: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1669.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.1670.1" xmlns="http://www.w3.org/1999/xhtml">),
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1671.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1672.1" xmlns="http://www.w3.org/1999/xhtml">(ProductName: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1673.1" xmlns="http://www.w3.org/1999/xhtml">"Bananas"</span></span><span class="koboSpan" id="kobo.1674.1" xmlns="http://www.w3.org/1999/xhtml">, UnitPrice: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1675.1" xmlns="http://www.w3.org/1999/xhtml">0.99</span></span><span class="koboSpan" id="kobo.1676.1" xmlns="http://www.w3.org/1999/xhtml">M, Quantity: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1677.1" xmlns="http://www.w3.org/1999/xhtml">4</span></span><span class="koboSpan" id="kobo.1678.1" xmlns="http://www.w3.org/1999/xhtml">)
  }
);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1679.1" xmlns="http://www.w3.org/1999/xhtml">"*** Original data before mapping."</span></span><span class="koboSpan" id="kobo.1680.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1681.1" xmlns="http://www.w3.org/1999/xhtml">$"</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1682.1" xmlns="http://www.w3.org/1999/xhtml">{cart.Customer}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1683.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1684.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1685.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1686.1" xmlns="http://www.w3.org/1999/xhtml"> (LineItem item </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1687.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1688.1" xmlns="http://www.w3.org/1999/xhtml"> cart.Items)
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1689.1" xmlns="http://www.w3.org/1999/xhtml">$"  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1690.1" xmlns="http://www.w3.org/1999/xhtml">{item}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1691.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1692.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1693.1" xmlns="http://www.w3.org/1999/xhtml">// Get the mapper configuration for converting a Cart to a Summary.</span></span><span class="koboSpan" id="kobo.1694.1" xmlns="http://www.w3.org/1999/xhtml">
MapperConfiguration config = CartToSummaryMapper.GetMapperConfiguration();
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1695.1" xmlns="http://www.w3.org/1999/xhtml">// Create a mapper using the configuration.</span></span><span class="koboSpan" id="kobo.1696.1" xmlns="http://www.w3.org/1999/xhtml">
IMapper mapper = config.CreateMapper();
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1697.1" xmlns="http://www.w3.org/1999/xhtml">// Perform the mapping.</span></span><span class="koboSpan" id="kobo.1698.1" xmlns="http://www.w3.org/1999/xhtml">
Summary summary = mapper.Map&lt;Cart, Summary&gt;(cart);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1699.1" xmlns="http://www.w3.org/1999/xhtml">// Output the result.</span></span><span class="koboSpan" id="kobo.1700.1" xmlns="http://www.w3.org/1999/xhtml">
WriteLine();
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1701.1" xmlns="http://www.w3.org/1999/xhtml">"*** After mapping."</span></span><span class="koboSpan" id="kobo.1702.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1703.1" xmlns="http://www.w3.org/1999/xhtml">$"Summary: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1704.1" xmlns="http://www.w3.org/1999/xhtml">{summary.FullName}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1705.1" xmlns="http://www.w3.org/1999/xhtml"> spent </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1706.1" xmlns="http://www.w3.org/1999/xhtml">{summary.Total:C}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1707.1" xmlns="http://www.w3.org/1999/xhtml">."</span></span><span class="koboSpan" id="kobo.1708.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1709.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the successful result, as shown in the following code:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1710.1" xmlns="http://www.w3.org/1999/xhtml">*** Original data before mapping.
</span><span class="koboSpan" id="kobo.1710.2" xmlns="http://www.w3.org/1999/xhtml">Customer { FirstName = John, LastName = Smith }
  LineItem { ProductName = Apples, UnitPrice = 0.49, Quantity = 10 }
  LineItem { ProductName = Bananas, UnitPrice = 0.99, Quantity = 4 }
*** After mapping.
</span><span class="koboSpan" id="kobo.1710.3" xmlns="http://www.w3.org/1999/xhtml">Summary: John Smith spent £8.86.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1711.1" xmlns="http://www.w3.org/1999/xhtml">Optionally, write </span><a id="_idIndexMarker524"/><span class="koboSpan" id="kobo.1712.1" xmlns="http://www.w3.org/1999/xhtml">a unit test to perform a similar check as the preceding code to assert that the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1713.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></code><span class="koboSpan" id="kobo.1714.1" xmlns="http://www.w3.org/1999/xhtml"> has the correct full name and total.</span></li>
</ol>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1715.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1716.1" xmlns="http://www.w3.org/1999/xhtml">: There is a debate about when AutoMapper should be used that you can read about in an article (which has more links at the bottom) at the following link: </span><a href="https://www.anthonysteele.co.uk/AgainstAutoMapper.html"><span class="url"><span class="koboSpan" id="kobo.1717.1" xmlns="http://www.w3.org/1999/xhtml">https://www.anthonysteele.co.uk/AgainstAutoMapper.html</span></span></a><span class="koboSpan" id="kobo.1718.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1719.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.1720.1" xmlns="http://www.w3.org/1999/xhtml">: Learn more details at the following link: </span><a href="https://automapper.org/"><span class="url"><span class="koboSpan" id="kobo.1721.1" xmlns="http://www.w3.org/1999/xhtml">https://automapper.org/</span></span></a><span class="koboSpan" id="kobo.1722.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-249"><span class="koboSpan" id="kobo.1723.1" xmlns="http://www.w3.org/1999/xhtml">Making fluent assertions in unit testing</span></h1>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1724.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></strong><span class="koboSpan" id="kobo.1725.1" xmlns="http://www.w3.org/1999/xhtml"> are </span><a id="_idIndexMarker525"/><span class="koboSpan" id="kobo.1726.1" xmlns="http://www.w3.org/1999/xhtml">a set of extension methods that make writing and reading the code in unit tests and the error messages of failing tests more similar to a natural human language like English.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1727.1" xmlns="http://www.w3.org/1999/xhtml">It works </span><a id="_idIndexMarker526"/><span class="koboSpan" id="kobo.1728.1" xmlns="http://www.w3.org/1999/xhtml">with most unit testing frameworks, including xUnit. </span><span class="koboSpan" id="kobo.1728.2" xmlns="http://www.w3.org/1999/xhtml">When you add a package reference for a test framework, FluentAssertions will automatically find the package and use it for throwing exceptions.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1729.1" xmlns="http://www.w3.org/1999/xhtml">After importing the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1730.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code><span class="koboSpan" id="kobo.1731.1" xmlns="http://www.w3.org/1999/xhtml"> namespace, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1732.1" xmlns="http://www.w3.org/1999/xhtml">Should()</span></code><span class="koboSpan" id="kobo.1733.1" xmlns="http://www.w3.org/1999/xhtml"> extension method on a variable and then one of the hundreds of other extension methods to make assertions in a human-readable way. </span><span class="koboSpan" id="kobo.1733.2" xmlns="http://www.w3.org/1999/xhtml">You can chain multiple assertions using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1734.1" xmlns="http://www.w3.org/1999/xhtml">And()</span></code><span class="koboSpan" id="kobo.1735.1" xmlns="http://www.w3.org/1999/xhtml"> extension method or have separate statements, each calling </span><code class="inlineCode"><span class="koboSpan" id="kobo.1736.1" xmlns="http://www.w3.org/1999/xhtml">Should()</span></code><span class="koboSpan" id="kobo.1737.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<h2 class="heading-2" id="_idParaDest-250"><span class="koboSpan" id="kobo.1738.1" xmlns="http://www.w3.org/1999/xhtml">Making assertions about strings</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1739.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start by </span><a id="_idIndexMarker527"/><span class="koboSpan" id="kobo.1740.1" xmlns="http://www.w3.org/1999/xhtml">making assertions about a single </span><code class="inlineCode"><span class="koboSpan" id="kobo.1741.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.1742.1" xmlns="http://www.w3.org/1999/xhtml"> value:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1743.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.1744.1" xmlns="http://www.w3.org/1999/xhtml">xUnit Test Project</span></strong><span class="koboSpan" id="kobo.1745.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1746.1" xmlns="http://www.w3.org/1999/xhtml">xunit</span></code><span class="koboSpan" id="kobo.1747.1" xmlns="http://www.w3.org/1999/xhtml"> named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1748.1" xmlns="http://www.w3.org/1999/xhtml">FluentTests</span></code><span class="koboSpan" id="kobo.1749.1" xmlns="http://www.w3.org/1999/xhtml"> to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1750.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.1751.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1752.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1753.1" xmlns="http://www.w3.org/1999/xhtml">FluentTests</span></code><span class="koboSpan" id="kobo.1754.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a package reference to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1755.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code><span class="koboSpan" id="kobo.1756.1" xmlns="http://www.w3.org/1999/xhtml">, as highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1757.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1758.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1759.1" xmlns="http://www.w3.org/1999/xhtml">"FluentAssertions"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1760.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1761.1" xmlns="http://www.w3.org/1999/xhtml">"6.12.0"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1762.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span><span class="koboSpan" id="kobo.1763.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1764.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Test.Sdk"</span></span><span class="koboSpan" id="kobo.1765.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1766.1" xmlns="http://www.w3.org/1999/xhtml">"17.8.0"</span></span><span class="koboSpan" id="kobo.1767.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
</span></code></pre>
<div class="note">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1768.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1769.1" xmlns="http://www.w3.org/1999/xhtml">7.0</span></code><span class="koboSpan" id="kobo.1770.1" xmlns="http://www.w3.org/1999/xhtml"> should be available by the time this book is published. </span><span class="koboSpan" id="kobo.1770.2" xmlns="http://www.w3.org/1999/xhtml">You can check at the following link: </span><a href="https://www.nuget.org/packages/FluentAssertions/"><span class="url"><span class="koboSpan" id="kobo.1771.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/packages/FluentAssertions/</span></span></a><span class="koboSpan" id="kobo.1772.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.1773.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1774.1" xmlns="http://www.w3.org/1999/xhtml">FluentTests</span></code><span class="koboSpan" id="kobo.1775.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1776.1" xmlns="http://www.w3.org/1999/xhtml">Rename </span><code class="inlineCode"><span class="koboSpan" id="kobo.1777.1" xmlns="http://www.w3.org/1999/xhtml">UnitTest1.cs</span></code><span class="koboSpan" id="kobo.1778.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1779.1" xmlns="http://www.w3.org/1999/xhtml">FluentExamples.cs</span></code><span class="koboSpan" id="kobo.1780.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1781.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1782.1" xmlns="http://www.w3.org/1999/xhtml">FluentExamples.cs</span></code><span class="koboSpan" id="kobo.1783.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace to make the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1784.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code><span class="koboSpan" id="kobo.1785.1" xmlns="http://www.w3.org/1999/xhtml"> extension methods available and write a test method for a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1786.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.1787.1" xmlns="http://www.w3.org/1999/xhtml"> value, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1788.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1789.1" xmlns="http://www.w3.org/1999/xhtml"> FluentAssertions; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1790.1" xmlns="http://www.w3.org/1999/xhtml">// To use common fluent assertions extension methods.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1791.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1792.1" xmlns="http://www.w3.org/1999/xhtml">FluentTests</span></span><span class="koboSpan" id="kobo.1793.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1794.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1795.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1796.1" xmlns="http://www.w3.org/1999/xhtml">FluentExamples</span></span><span class="koboSpan" id="kobo.1797.1" xmlns="http://www.w3.org/1999/xhtml">
{
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1798.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.1799.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1800.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1801.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1802.1" xmlns="http://www.w3.org/1999/xhtml">TestString</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1803.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1804.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1805.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1806.1" xmlns="http://www.w3.org/1999/xhtml"> city = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1807.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="koboSpan" id="kobo.1808.1" xmlns="http://www.w3.org/1999/xhtml">;
    </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1809.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1810.1" xmlns="http://www.w3.org/1999/xhtml"> expectedCity = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1811.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="koboSpan" id="kobo.1812.1" xmlns="http://www.w3.org/1999/xhtml">;
    city.Should().StartWith(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1813.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1814.1" xmlns="http://www.w3.org/1999/xhtml">Lo"</span></span><span class="koboSpan" id="kobo.1815.1" xmlns="http://www.w3.org/1999/xhtml">)
      .And.EndWith(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1816.1" xmlns="http://www.w3.org/1999/xhtml">"on"</span></span><span class="koboSpan" id="kobo.1817.1" xmlns="http://www.w3.org/1999/xhtml">)
      .And.Contain(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1818.1" xmlns="http://www.w3.org/1999/xhtml">"do"</span></span><span class="koboSpan" id="kobo.1819.1" xmlns="http://www.w3.org/1999/xhtml">)
      .And.HaveLength(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1820.1" xmlns="http://www.w3.org/1999/xhtml">6</span></span><span class="koboSpan" id="kobo.1821.1" xmlns="http://www.w3.org/1999/xhtml">);
     city.Should().NotBeNull()
      .And.Be(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1822.1" xmlns="http://www.w3.org/1999/xhtml">"London"</span></span><span class="koboSpan" id="kobo.1823.1" xmlns="http://www.w3.org/1999/xhtml">)
      .And.BeSameAs(expectedCity)
      .And.BeOfType&lt;</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1824.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1825.1" xmlns="http://www.w3.org/1999/xhtml">&gt;();
    city.Length.Should().Be(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1826.1" xmlns="http://www.w3.org/1999/xhtml">6</span></span><span class="koboSpan" id="kobo.1827.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1828.1" xmlns="http://www.w3.org/1999/xhtml">Run the test:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1829.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio 2022, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.1830.1" xmlns="http://www.w3.org/1999/xhtml">Test</span></strong><span class="koboSpan" id="kobo.1831.1" xmlns="http://www.w3.org/1999/xhtml"> | </span><strong class="screenText"><span class="koboSpan" id="kobo.1832.1" xmlns="http://www.w3.org/1999/xhtml">Run All Tests</span></strong><span class="koboSpan" id="kobo.1833.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1834.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio Code, in </span><strong class="screenText"><span class="koboSpan" id="kobo.1835.1" xmlns="http://www.w3.org/1999/xhtml">Terminal</span></strong><span class="koboSpan" id="kobo.1836.1" xmlns="http://www.w3.org/1999/xhtml">, enter </span><code class="inlineCode"><span class="koboSpan" id="kobo.1837.1" xmlns="http://www.w3.org/1999/xhtml">dotnet test</span></code><span class="koboSpan" id="kobo.1838.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1839.1" xmlns="http://www.w3.org/1999/xhtml">Note </span><a id="_idIndexMarker528"/><span class="koboSpan" id="kobo.1840.1" xmlns="http://www.w3.org/1999/xhtml">the test passes.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1841.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1842.1" xmlns="http://www.w3.org/1999/xhtml">TestString</span></code><span class="koboSpan" id="kobo.1843.1" xmlns="http://www.w3.org/1999/xhtml"> method, for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1844.1" xmlns="http://www.w3.org/1999/xhtml">city</span></code><span class="koboSpan" id="kobo.1845.1" xmlns="http://www.w3.org/1999/xhtml"> variable, delete the last </span><code class="inlineCode"><span class="koboSpan" id="kobo.1846.1" xmlns="http://www.w3.org/1999/xhtml">n</span></code><span class="koboSpan" id="kobo.1847.1" xmlns="http://www.w3.org/1999/xhtml"> in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1848.1" xmlns="http://www.w3.org/1999/xhtml">London</span></code><span class="koboSpan" id="kobo.1849.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1850.1" xmlns="http://www.w3.org/1999/xhtml">Run the test and note it fails, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1851.1" xmlns="http://www.w3.org/1999/xhtml">Expected city "Londo" to end with "on".
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1852.1" xmlns="http://www.w3.org/1999/xhtml">Add the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1853.1" xmlns="http://www.w3.org/1999/xhtml">n</span></code><span class="koboSpan" id="kobo.1854.1" xmlns="http://www.w3.org/1999/xhtml"> back in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1855.1" xmlns="http://www.w3.org/1999/xhtml">London</span></code><span class="koboSpan" id="kobo.1856.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1857.1" xmlns="http://www.w3.org/1999/xhtml">Run the test again to confirm the fix.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-251"><span class="koboSpan" id="kobo.1858.1" xmlns="http://www.w3.org/1999/xhtml">Making assertions about collections and arrays</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1859.1" xmlns="http://www.w3.org/1999/xhtml">Now let’s</span><a id="_idIndexMarker529"/><span class="koboSpan" id="kobo.1860.1" xmlns="http://www.w3.org/1999/xhtml"> continue by making assertions about collections and arrays:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1861.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1862.1" xmlns="http://www.w3.org/1999/xhtml">FluentExamples.cs</span></code><span class="koboSpan" id="kobo.1863.1" xmlns="http://www.w3.org/1999/xhtml">, add a test method to explore collection assertions, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1864.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1865.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.1866.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1867.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1868.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1869.1" xmlns="http://www.w3.org/1999/xhtml">TestCollections</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1870.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1871.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1872.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1873.1" xmlns="http://www.w3.org/1999/xhtml">[] names = { </span><span class="hljs-string"><span class="koboSpan" id="kobo.1874.1" xmlns="http://www.w3.org/1999/xhtml">"Alice"</span></span><span class="koboSpan" id="kobo.1875.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.1876.1" xmlns="http://www.w3.org/1999/xhtml">"Bob"</span></span><span class="koboSpan" id="kobo.1877.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.1878.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1879.1" xmlns="http://www.w3.org/1999/xhtml">Charlie"</span></span><span class="koboSpan" id="kobo.1880.1" xmlns="http://www.w3.org/1999/xhtml"> };
  names.Should().HaveCountLessThan(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1881.1" xmlns="http://www.w3.org/1999/xhtml">4</span></span><span class="koboSpan" id="kobo.1882.1" xmlns="http://www.w3.org/1999/xhtml">,
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.1883.1" xmlns="http://www.w3.org/1999/xhtml">"because the maximum items should be 3 or fewer"</span></span><span class="koboSpan" id="kobo.1884.1" xmlns="http://www.w3.org/1999/xhtml">);
  names.Should().OnlyContain(name =&gt; name.Length &lt;= </span><span class="hljs-number"><span class="koboSpan" id="kobo.1885.1" xmlns="http://www.w3.org/1999/xhtml">6</span></span><span class="koboSpan" id="kobo.1886.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1887.1" xmlns="http://www.w3.org/1999/xhtml">Run the tests and note the collections test fails, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1888.1" xmlns="http://www.w3.org/1999/xhtml">Expected names to contain only items matching (name.Length &lt;= 6), but {"Charlie"} do(es) not match.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1889.1" xmlns="http://www.w3.org/1999/xhtml">Change </span><code class="inlineCode"><span class="koboSpan" id="kobo.1890.1" xmlns="http://www.w3.org/1999/xhtml">Charlie</span></code><span class="koboSpan" id="kobo.1891.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1892.1" xmlns="http://www.w3.org/1999/xhtml">Charly</span></code><span class="koboSpan" id="kobo.1893.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1894.1" xmlns="http://www.w3.org/1999/xhtml">Run </span><a id="_idIndexMarker530"/><span class="koboSpan" id="kobo.1895.1" xmlns="http://www.w3.org/1999/xhtml">the tests and note they succeed.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-252"><span class="koboSpan" id="kobo.1896.1" xmlns="http://www.w3.org/1999/xhtml">Making assertions about dates and times</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1897.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start by</span><a id="_idIndexMarker531"/><span class="koboSpan" id="kobo.1898.1" xmlns="http://www.w3.org/1999/xhtml"> making assertions about date and time values:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1899.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1900.1" xmlns="http://www.w3.org/1999/xhtml">FluentExamples.cs</span></code><span class="koboSpan" id="kobo.1901.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for adding more extension methods for named months and other useful date/time-related functionality, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1902.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1903.1" xmlns="http://www.w3.org/1999/xhtml"> FluentAssertions.Extensions; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1904.1" xmlns="http://www.w3.org/1999/xhtml">// To use February, March extension methods.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1905.1" xmlns="http://www.w3.org/1999/xhtml">Add a test method to explore date/time assertions, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1906.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1907.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.1908.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1909.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1910.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1911.1" xmlns="http://www.w3.org/1999/xhtml">TestDateTimes</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1912.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.1913.1" xmlns="http://www.w3.org/1999/xhtml">
{
  DateTime </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1914.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1915.1" xmlns="http://www.w3.org/1999/xhtml"> = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1916.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1917.1" xmlns="http://www.w3.org/1999/xhtml">(
    hour: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1918.1" xmlns="http://www.w3.org/1999/xhtml">9</span></span><span class="koboSpan" id="kobo.1919.1" xmlns="http://www.w3.org/1999/xhtml">, minute: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1920.1" xmlns="http://www.w3.org/1999/xhtml">30</span></span><span class="koboSpan" id="kobo.1921.1" xmlns="http://www.w3.org/1999/xhtml">, second: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1922.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.1923.1" xmlns="http://www.w3.org/1999/xhtml">,
    day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1924.1" xmlns="http://www.w3.org/1999/xhtml">25</span></span><span class="koboSpan" id="kobo.1925.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1926.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1927.1" xmlns="http://www.w3.org/1999/xhtml">, year: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1928.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1929.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1930.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1931.1" xmlns="http://www.w3.org/1999/xhtml">.Should().Be(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1932.1" xmlns="http://www.w3.org/1999/xhtml">25.</span></span><span class="koboSpan" id="kobo.1933.1" xmlns="http://www.w3.org/1999/xhtml">March(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1934.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1935.1" xmlns="http://www.w3.org/1999/xhtml">).At(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1936.1" xmlns="http://www.w3.org/1999/xhtml">9</span></span><span class="koboSpan" id="kobo.1937.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.1938.1" xmlns="http://www.w3.org/1999/xhtml">30</span></span><span class="koboSpan" id="kobo.1939.1" xmlns="http://www.w3.org/1999/xhtml">));
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1940.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1941.1" xmlns="http://www.w3.org/1999/xhtml">.Should().BeOnOrAfter(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1942.1" xmlns="http://www.w3.org/1999/xhtml">23.</span></span><span class="koboSpan" id="kobo.1943.1" xmlns="http://www.w3.org/1999/xhtml">March(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1944.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1945.1" xmlns="http://www.w3.org/1999/xhtml">));
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1946.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1947.1" xmlns="http://www.w3.org/1999/xhtml">.Should().NotBeSameDateAs(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1948.1" xmlns="http://www.w3.org/1999/xhtml">12.F</span></span><span class="koboSpan" id="kobo.1949.1" xmlns="http://www.w3.org/1999/xhtml">ebruary(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1950.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1951.1" xmlns="http://www.w3.org/1999/xhtml">));
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1952.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1953.1" xmlns="http://www.w3.org/1999/xhtml">.Should().HaveYear(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1954.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1955.1" xmlns="http://www.w3.org/1999/xhtml">);
  DateTime due = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1956.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1957.1" xmlns="http://www.w3.org/1999/xhtml">(
    hour: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1958.1" xmlns="http://www.w3.org/1999/xhtml">11</span></span><span class="koboSpan" id="kobo.1959.1" xmlns="http://www.w3.org/1999/xhtml">, minute: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1960.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.1961.1" xmlns="http://www.w3.org/1999/xhtml">, second: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1962.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.1963.1" xmlns="http://www.w3.org/1999/xhtml">,
    day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1964.1" xmlns="http://www.w3.org/1999/xhtml">25</span></span><span class="koboSpan" id="kobo.1965.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1966.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1967.1" xmlns="http://www.w3.org/1999/xhtml">, year: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1968.1" xmlns="http://www.w3.org/1999/xhtml">2024</span></span><span class="koboSpan" id="kobo.1969.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1970.1" xmlns="http://www.w3.org/1999/xhtml">when</span></span><span class="koboSpan" id="kobo.1971.1" xmlns="http://www.w3.org/1999/xhtml">.Should().BeAtLeast(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1972.1" xmlns="http://www.w3.org/1999/xhtml">2.</span></span><span class="koboSpan" id="kobo.1973.1" xmlns="http://www.w3.org/1999/xhtml">Hours()).Before(due);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1974.1" xmlns="http://www.w3.org/1999/xhtml">Run the </span><a id="_idIndexMarker532"/><span class="koboSpan" id="kobo.1975.1" xmlns="http://www.w3.org/1999/xhtml">tests and note the date/time test fails, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1976.1" xmlns="http://www.w3.org/1999/xhtml">Expected when &lt;2024-03-25 09:30:00&gt; to be at least 2h before &lt;2024-03-25 11:00:00&gt;, but it is behind by 1h and 30m.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1977.1" xmlns="http://www.w3.org/1999/xhtml">For the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1978.1" xmlns="http://www.w3.org/1999/xhtml">due</span></code><span class="koboSpan" id="kobo.1979.1" xmlns="http://www.w3.org/1999/xhtml"> variable, change the hour from </span><code class="inlineCode"><span class="koboSpan" id="kobo.1980.1" xmlns="http://www.w3.org/1999/xhtml">11</span></code><span class="koboSpan" id="kobo.1981.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1982.1" xmlns="http://www.w3.org/1999/xhtml">13</span></code><span class="koboSpan" id="kobo.1983.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1984.1" xmlns="http://www.w3.org/1999/xhtml">Run the tests and note that the date/time test succeeds.</span></li>
</ol>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1985.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.1986.1" xmlns="http://www.w3.org/1999/xhtml">: You can</span><a id="_idIndexMarker533"/><span class="koboSpan" id="kobo.1987.1" xmlns="http://www.w3.org/1999/xhtml"> learn more details about FluentAssertions at the following link: </span><a href="https://fluentassertions.com/"><span class="url"><span class="koboSpan" id="kobo.1988.1" xmlns="http://www.w3.org/1999/xhtml">https://fluentassertions.com/</span></span></a><span class="koboSpan" id="kobo.1989.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-253"><span class="koboSpan" id="kobo.1990.1" xmlns="http://www.w3.org/1999/xhtml">Validating data</span></h1>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1991.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></strong><span class="koboSpan" id="kobo.1992.1" xmlns="http://www.w3.org/1999/xhtml"> allows </span><a id="_idIndexMarker534"/><span class="koboSpan" id="kobo.1993.1" xmlns="http://www.w3.org/1999/xhtml">you to define strongly typed validation rules in a human-readable way.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1994.1" xmlns="http://www.w3.org/1999/xhtml">You create a </span><a id="_idIndexMarker535"/><span class="koboSpan" id="kobo.1995.1" xmlns="http://www.w3.org/1999/xhtml">validator for a type by inheriting from </span><code class="inlineCode"><span class="koboSpan" id="kobo.1996.1" xmlns="http://www.w3.org/1999/xhtml">AbstractValidator&lt;T&gt;</span></code><span class="koboSpan" id="kobo.1997.1" xmlns="http://www.w3.org/1999/xhtml">, where </span><code class="inlineCode"><span class="koboSpan" id="kobo.1998.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.1999.1" xmlns="http://www.w3.org/1999/xhtml"> is the type that you want to validate. </span><span class="koboSpan" id="kobo.1999.2" xmlns="http://www.w3.org/1999/xhtml">In the constructor, you call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2000.1" xmlns="http://www.w3.org/1999/xhtml">RuleFor</span></code><span class="koboSpan" id="kobo.2001.1" xmlns="http://www.w3.org/1999/xhtml"> method to define one or more rules. </span><span class="koboSpan" id="kobo.2001.2" xmlns="http://www.w3.org/1999/xhtml">If a rule should run only in specified scenarios, then you call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2002.1" xmlns="http://www.w3.org/1999/xhtml">When</span></code><span class="koboSpan" id="kobo.2003.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></p>
<h2 class="heading-2" id="_idParaDest-254"><span class="koboSpan" id="kobo.2004.1" xmlns="http://www.w3.org/1999/xhtml">Understanding the built-in validators</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2005.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation ships</span><a id="_idIndexMarker536"/><span class="koboSpan" id="kobo.2006.1" xmlns="http://www.w3.org/1999/xhtml"> with lots of useful built-in validator extension methods for defining rules, as shown in the following partial list, some of which you will explore in the coding task in this section:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2007.1" xmlns="http://www.w3.org/1999/xhtml">Null</span></code><span class="koboSpan" id="kobo.2008.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2009.1" xmlns="http://www.w3.org/1999/xhtml">NotNull</span></code><span class="koboSpan" id="kobo.2010.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2011.1" xmlns="http://www.w3.org/1999/xhtml">Empty</span></code><span class="koboSpan" id="kobo.2012.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2013.1" xmlns="http://www.w3.org/1999/xhtml">NotEmpty</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2014.1" xmlns="http://www.w3.org/1999/xhtml">Equal</span></code><span class="koboSpan" id="kobo.2015.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2016.1" xmlns="http://www.w3.org/1999/xhtml">NotEqual</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2017.1" xmlns="http://www.w3.org/1999/xhtml">Length</span></code><span class="koboSpan" id="kobo.2018.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2019.1" xmlns="http://www.w3.org/1999/xhtml">MaxLength</span></code><span class="koboSpan" id="kobo.2020.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2021.1" xmlns="http://www.w3.org/1999/xhtml">MinLength</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2022.1" xmlns="http://www.w3.org/1999/xhtml">LessThan</span></code><span class="koboSpan" id="kobo.2023.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2024.1" xmlns="http://www.w3.org/1999/xhtml">LessThanOrEqualTo</span></code><span class="koboSpan" id="kobo.2025.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2026.1" xmlns="http://www.w3.org/1999/xhtml">GreaterThan</span></code><span class="koboSpan" id="kobo.2027.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2028.1" xmlns="http://www.w3.org/1999/xhtml">GreaterThanOrEqualTo</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2029.1" xmlns="http://www.w3.org/1999/xhtml">InclusiveBetween</span></code><span class="koboSpan" id="kobo.2030.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2031.1" xmlns="http://www.w3.org/1999/xhtml">ExclusiveBetween</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2032.1" xmlns="http://www.w3.org/1999/xhtml">ScalePrecision</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2033.1" xmlns="http://www.w3.org/1999/xhtml">Must</span></code><span class="koboSpan" id="kobo.2034.1" xmlns="http://www.w3.org/1999/xhtml"> (aka predicate)</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2035.1" xmlns="http://www.w3.org/1999/xhtml">Matches</span></code><span class="koboSpan" id="kobo.2036.1" xmlns="http://www.w3.org/1999/xhtml"> (aka regular expression), </span><code class="inlineCode"><span class="koboSpan" id="kobo.2037.1" xmlns="http://www.w3.org/1999/xhtml">EmailAddress</span></code><span class="koboSpan" id="kobo.2038.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2039.1" xmlns="http://www.w3.org/1999/xhtml">CreditCard</span></code></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2040.1" xmlns="http://www.w3.org/1999/xhtml">IsInEnum</span></code><span class="koboSpan" id="kobo.2041.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2042.1" xmlns="http://www.w3.org/1999/xhtml">IsEnumName</span></code></li>
</ul>
<h2 class="heading-2" id="_idParaDest-255"><span class="koboSpan" id="kobo.2043.1" xmlns="http://www.w3.org/1999/xhtml">Performing custom validation</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2044.1" xmlns="http://www.w3.org/1999/xhtml">The</span><a id="_idIndexMarker537"/><span class="koboSpan" id="kobo.2045.1" xmlns="http://www.w3.org/1999/xhtml"> easiest way to create custom rules is to use </span><code class="inlineCode"><span class="koboSpan" id="kobo.2046.1" xmlns="http://www.w3.org/1999/xhtml">Predicate</span></code><span class="koboSpan" id="kobo.2047.1" xmlns="http://www.w3.org/1999/xhtml"> to write a custom validation function. </span><span class="koboSpan" id="kobo.2047.2" xmlns="http://www.w3.org/1999/xhtml">You can also call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2048.1" xmlns="http://www.w3.org/1999/xhtml">Custom</span></code><span class="koboSpan" id="kobo.2049.1" xmlns="http://www.w3.org/1999/xhtml"> method to get maximum control.</span></p>
<h2 class="heading-2" id="_idParaDest-256"><span class="koboSpan" id="kobo.2050.1" xmlns="http://www.w3.org/1999/xhtml">Customizing validation messages</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2051.1" xmlns="http://www.w3.org/1999/xhtml">There</span><a id="_idIndexMarker538"/><span class="koboSpan" id="kobo.2052.1" xmlns="http://www.w3.org/1999/xhtml"> are a few extension methods that are used to customize the validation messages’ output when data fails to pass the rules:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2053.1" xmlns="http://www.w3.org/1999/xhtml">WithName</span></code><span class="koboSpan" id="kobo.2054.1" xmlns="http://www.w3.org/1999/xhtml">: Change the name used for a property in the message.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2055.1" xmlns="http://www.w3.org/1999/xhtml">WithSeverity</span></code><span class="koboSpan" id="kobo.2056.1" xmlns="http://www.w3.org/1999/xhtml">: Change the default severity from </span><code class="inlineCode"><span class="koboSpan" id="kobo.2057.1" xmlns="http://www.w3.org/1999/xhtml">Error</span></code><span class="koboSpan" id="kobo.2058.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2059.1" xmlns="http://www.w3.org/1999/xhtml">Warning</span></code><span class="koboSpan" id="kobo.2060.1" xmlns="http://www.w3.org/1999/xhtml"> or some other level.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2061.1" xmlns="http://www.w3.org/1999/xhtml">WithErrorCode</span></code><span class="koboSpan" id="kobo.2062.1" xmlns="http://www.w3.org/1999/xhtml">: Assign an error code that can be output in the message.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2063.1" xmlns="http://www.w3.org/1999/xhtml">WithState</span></code><span class="koboSpan" id="kobo.2064.1" xmlns="http://www.w3.org/1999/xhtml">: Add some state that can be used in the message.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2065.1" xmlns="http://www.w3.org/1999/xhtml">WithMessage</span></code><span class="koboSpan" id="kobo.2066.1" xmlns="http://www.w3.org/1999/xhtml">: Customize the format of the default message.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-257"><span class="koboSpan" id="kobo.2067.1" xmlns="http://www.w3.org/1999/xhtml">Defining a model and validator</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2068.1" xmlns="http://www.w3.org/1999/xhtml">Let’s see an</span><a id="_idIndexMarker539"/><span class="koboSpan" id="kobo.2069.1" xmlns="http://www.w3.org/1999/xhtml"> example of FluentValidation in action. </span><span class="koboSpan" id="kobo.2069.2" xmlns="http://www.w3.org/1999/xhtml">You</span><a id="_idIndexMarker540"/><span class="koboSpan" id="kobo.2070.1" xmlns="http://www.w3.org/1999/xhtml"> will create three projects:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2071.1" xmlns="http://www.w3.org/1999/xhtml">A class library for a model to validate that represents an order made by a customer.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2072.1" xmlns="http://www.w3.org/1999/xhtml">A class library for the validator for the model.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2073.1" xmlns="http://www.w3.org/1999/xhtml">A console app to perform a live validation.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2074.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2075.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2076.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2077.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2078.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.2079.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2080.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></code><span class="koboSpan" id="kobo.2081.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2082.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2083.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2084.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2085.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></code><span class="koboSpan" id="kobo.2086.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2087.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2088.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2089.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2090.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></code><span class="koboSpan" id="kobo.2091.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2092.1" xmlns="http://www.w3.org/1999/xhtml">CustomerLevel.cs</span></code><span class="koboSpan" id="kobo.2093.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents to define an </span><code class="inlineCode"><span class="koboSpan" id="kobo.2094.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></code><span class="koboSpan" id="kobo.2095.1" xmlns="http://www.w3.org/1999/xhtml"> with three customer levels, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2096.1" xmlns="http://www.w3.org/1999/xhtml">Bronze</span></code><span class="koboSpan" id="kobo.2097.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.2098.1" xmlns="http://www.w3.org/1999/xhtml">Silver</span></code><span class="koboSpan" id="kobo.2099.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2100.1" xmlns="http://www.w3.org/1999/xhtml">Gold</span></code><span class="koboSpan" id="kobo.2101.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2102.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2103.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></span><span class="koboSpan" id="kobo.2104.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2105.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2106.1" xmlns="http://www.w3.org/1999/xhtml">enum</span></span><span class="koboSpan" id="kobo.2107.1" xmlns="http://www.w3.org/1999/xhtml"> CustomerLevel
{
  Bronze,
  Silver,
  Gold
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2108.1" xmlns="http://www.w3.org/1999/xhtml">In</span><a id="_idIndexMarker541"/><span class="koboSpan" id="kobo.2109.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2110.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></code><span class="koboSpan" id="kobo.2111.1" xmlns="http://www.w3.org/1999/xhtml"> project, add</span><a id="_idIndexMarker542"/><span class="koboSpan" id="kobo.2112.1" xmlns="http://www.w3.org/1999/xhtml"> a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2113.1" xmlns="http://www.w3.org/1999/xhtml">Order.cs</span></code><span class="koboSpan" id="kobo.2114.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2115.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2116.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></span><span class="koboSpan" id="kobo.2117.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2118.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2119.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2120.1" xmlns="http://www.w3.org/1999/xhtml">Order</span></span><span class="koboSpan" id="kobo.2121.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2122.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2123.1" xmlns="http://www.w3.org/1999/xhtml">long</span></span><span class="koboSpan" id="kobo.2124.1" xmlns="http://www.w3.org/1999/xhtml"> OrderId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2125.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2126.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2127.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2128.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2129.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2130.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2131.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2131.2" xmlns="http://www.w3.org/1999/xhtml">CustomerName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2132.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2133.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2134.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2135.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2136.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2137.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2138.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2138.2" xmlns="http://www.w3.org/1999/xhtml">CustomerEmail { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2139.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2140.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2141.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2142.1" xmlns="http://www.w3.org/1999/xhtml">; } 
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2143.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2144.1" xmlns="http://www.w3.org/1999/xhtml"> CustomerLevel CustomerLevel { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2145.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2146.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2147.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2148.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2149.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2150.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.2151.1" xmlns="http://www.w3.org/1999/xhtml"> Total { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2152.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2153.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2154.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2155.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2156.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2157.1" xmlns="http://www.w3.org/1999/xhtml"> DateTime OrderDate { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2158.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2159.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2160.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2161.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2162.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2163.1" xmlns="http://www.w3.org/1999/xhtml"> DateTime ShipDate { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2164.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2165.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2166.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2167.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2168.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2169.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2170.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2171.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.2172.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2173.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2174.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2175.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2176.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2177.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2178.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2179.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a project reference to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2180.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.2181.1" xmlns="http://www.w3.org/1999/xhtml"> project and a package reference to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2182.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></code><span class="koboSpan" id="kobo.2183.1" xmlns="http://www.w3.org/1999/xhtml"> package, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2184.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2185.1" xmlns="http://www.w3.org/1999/xhtml">"FluentValidation"</span></span><span class="koboSpan" id="kobo.2186.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2187.1" xmlns="http://www.w3.org/1999/xhtml">"11.8.1"</span></span><span class="koboSpan" id="kobo.2188.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.2189.1" xmlns="http://www.w3.org/1999/xhtml">"..\FluentValidation.Models\FluentValidation.Models.csproj"</span></span><span class="koboSpan" id="kobo.2190.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2191.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2192.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2193.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2194.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2195.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2196.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2197.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2198.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2199.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2200.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2201.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2202.1" xmlns="http://www.w3.org/1999/xhtml">OrderValidator.cs</span></code><span class="koboSpan" id="kobo.2203.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><a id="_idIndexMarker543"/><span class="koboSpan" id="kobo.2204.1" xmlns="http://www.w3.org/1999/xhtml">modify its contents, as</span><a id="_idIndexMarker544"/><span class="koboSpan" id="kobo.2205.1" xmlns="http://www.w3.org/1999/xhtml"> shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2206.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2207.1" xmlns="http://www.w3.org/1999/xhtml"> FluentValidation.Models;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2208.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2209.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></span><span class="koboSpan" id="kobo.2210.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2211.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2212.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2213.1" xmlns="http://www.w3.org/1999/xhtml">OrderValidator</span></span><span class="koboSpan" id="kobo.2214.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2215.1" xmlns="http://www.w3.org/1999/xhtml">AbstractValidator</span></span><span class="koboSpan" id="kobo.2216.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span><span class="hljs-title"><span class="koboSpan" id="kobo.2217.1" xmlns="http://www.w3.org/1999/xhtml">Order</span></span><span class="koboSpan" id="kobo.2218.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2219.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2220.1" xmlns="http://www.w3.org/1999/xhtml">OrderValidator</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2221.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2222.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    RuleFor(order =&gt; order.OrderId)
      .NotEmpty(); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2223.1" xmlns="http://www.w3.org/1999/xhtml">// Not default(long) which is 0.</span></span><span class="koboSpan" id="kobo.2224.1" xmlns="http://www.w3.org/1999/xhtml">
    RuleFor(order =&gt; order.CustomerName)
      .NotNull()
      .WithName(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2225.1" xmlns="http://www.w3.org/1999/xhtml">"Name"</span></span><span class="koboSpan" id="kobo.2226.1" xmlns="http://www.w3.org/1999/xhtml">); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2227.1" xmlns="http://www.w3.org/1999/xhtml">// Use Name instead of CustomerName in messages.</span></span><span class="koboSpan" id="kobo.2228.1" xmlns="http://www.w3.org/1999/xhtml">
    RuleFor(order =&gt; order.CustomerName)
      .MinimumLength(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2229.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.2230.1" xmlns="http://www.w3.org/1999/xhtml">)
      .WithSeverity(Severity.Warning);
    RuleFor(order =&gt; order.CustomerEmail)
      .NotEmpty()
      .EmailAddress();
    RuleFor(order =&gt; order.CustomerLevel)
      .IsInEnum();
    RuleFor(order =&gt; order.Total)
      .GreaterThan(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2231.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.2232.1" xmlns="http://www.w3.org/1999/xhtml">);
    RuleFor(order =&gt; order.ShipDate)
      .GreaterThan(order =&gt; order.OrderDate);
    When(order =&gt; order.CustomerLevel == CustomerLevel.Gold, () =&gt;
    {
      RuleFor(order =&gt; order.Total).LessThan(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2233.1" xmlns="http://www.w3.org/1999/xhtml">50</span></span><span class="koboSpan" id="kobo.2234.1" xmlns="http://www.w3.org/1999/xhtml">M);
      RuleFor(order =&gt; order.Total).GreaterThanOrEqualTo(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2235.1" xmlns="http://www.w3.org/1999/xhtml">20</span></span><span class="koboSpan" id="kobo.2236.1" xmlns="http://www.w3.org/1999/xhtml">M);
    }).Otherwise(() =&gt;
    {
      RuleFor(order =&gt; order.Total).LessThan(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2237.1" xmlns="http://www.w3.org/1999/xhtml">20</span></span><span class="koboSpan" id="kobo.2238.1" xmlns="http://www.w3.org/1999/xhtml">M);
    });
  }
}
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-258"><span class="koboSpan" id="kobo.2239.1" xmlns="http://www.w3.org/1999/xhtml">Testing the validator</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2240.1" xmlns="http://www.w3.org/1999/xhtml">Now we are</span><a id="_idIndexMarker545"/><span class="koboSpan" id="kobo.2241.1" xmlns="http://www.w3.org/1999/xhtml"> ready to create a console app to test the validator on the model:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2242.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2243.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.2244.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2245.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.2246.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2247.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Console</span></code><span class="koboSpan" id="kobo.2248.1" xmlns="http://www.w3.org/1999/xhtml"> to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2249.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2250.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2251.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2252.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Console</span></code><span class="koboSpan" id="kobo.2253.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2254.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.2255.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add project references for </span><code class="inlineCode"><span class="koboSpan" id="kobo.2256.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Validators</span></code><span class="koboSpan" id="kobo.2257.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2258.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Models</span></code><span class="koboSpan" id="kobo.2259.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2260.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.2261.1" xmlns="http://www.w3.org/1999/xhtml">"..\FluentValidation.Models\FluentValidation.Models.csproj"</span></span><span class="koboSpan" id="kobo.2262.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.2263.1" xmlns="http://www.w3.org/1999/xhtml">"..\FluentValidation.Validators\FluentValidation.Validators.csproj"</span></span><span class="koboSpan" id="kobo.2264.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2265.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2266.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation.Console</span></code><span class="koboSpan" id="kobo.2267.1" xmlns="http://www.w3.org/1999/xhtml"> project to build referenced projects.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2268.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2269.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2270.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements, and then add statements to create an order and</span><a id="_idIndexMarker546"/><span class="koboSpan" id="kobo.2271.1" xmlns="http://www.w3.org/1999/xhtml"> validate it, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2272.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2273.1" xmlns="http://www.w3.org/1999/xhtml"> FluentValidation.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2274.1" xmlns="http://www.w3.org/1999/xhtml">// To use Order.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2275.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2276.1" xmlns="http://www.w3.org/1999/xhtml"> FluentValidation.Results; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2277.1" xmlns="http://www.w3.org/1999/xhtml">// To use ValidationResult.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2278.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2279.1" xmlns="http://www.w3.org/1999/xhtml"> FluentValidation.Validators; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2280.1" xmlns="http://www.w3.org/1999/xhtml">// To use OrderValidator.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2281.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2282.1" xmlns="http://www.w3.org/1999/xhtml"> System.Globalization; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2283.1" xmlns="http://www.w3.org/1999/xhtml">// To use CultureInfo.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2284.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2285.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2286.1" xmlns="http://www.w3.org/1999/xhtml">// To use Encoding.</span></span><span class="koboSpan" id="kobo.2287.1" xmlns="http://www.w3.org/1999/xhtml">
OutputEncoding = Encoding.UTF8; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2288.1" xmlns="http://www.w3.org/1999/xhtml">// Enable Euro symbol.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2289.1" xmlns="http://www.w3.org/1999/xhtml">// Control the culture used for formatting of dates and currency,</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2290.1" xmlns="http://www.w3.org/1999/xhtml">// and for localizing error messages to local language.</span></span><span class="koboSpan" id="kobo.2291.1" xmlns="http://www.w3.org/1999/xhtml">
Thread t = Thread.CurrentThread;
t.CurrentCulture = CultureInfo.GetCultureInfo(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2292.1" xmlns="http://www.w3.org/1999/xhtml">"en-US"</span></span><span class="koboSpan" id="kobo.2293.1" xmlns="http://www.w3.org/1999/xhtml">);
t.CurrentUICulture = t.CurrentCulture;
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2294.1" xmlns="http://www.w3.org/1999/xhtml">$"Current culture: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2295.1" xmlns="http://www.w3.org/1999/xhtml">{t.CurrentCulture.DisplayName}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2296.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2297.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine();
Order order = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2298.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2299.1" xmlns="http://www.w3.org/1999/xhtml">()
{
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2300.1" xmlns="http://www.w3.org/1999/xhtml">// Start with a deliberately invalid order.</span></span><span class="koboSpan" id="kobo.2301.1" xmlns="http://www.w3.org/1999/xhtml">
};
OrderValidator validator = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2302.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2303.1" xmlns="http://www.w3.org/1999/xhtml">();
ValidationResult result = validator.Validate(order);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.2304.1" xmlns="http://www.w3.org/1999/xhtml">// Output the order data.</span></span><span class="koboSpan" id="kobo.2305.1" xmlns="http://www.w3.org/1999/xhtml">
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2306.1" xmlns="http://www.w3.org/1999/xhtml">$"CustomerName:  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2307.1" xmlns="http://www.w3.org/1999/xhtml">{order.CustomerName}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2308.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2309.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2310.1" xmlns="http://www.w3.org/1999/xhtml">$"CustomerEmail: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2311.1" xmlns="http://www.w3.org/1999/xhtml">{order.CustomerEmail}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2312.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2313.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2314.1" xmlns="http://www.w3.org/1999/xhtml">$"CustomerLevel: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2315.1" xmlns="http://www.w3.org/1999/xhtml">{order.CustomerLevel}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2316.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2317.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2318.1" xmlns="http://www.w3.org/1999/xhtml">$"OrderId:       </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2319.1" xmlns="http://www.w3.org/1999/xhtml">{order.OrderId}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2320.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2321.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2322.1" xmlns="http://www.w3.org/1999/xhtml">$"OrderDate:     </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2323.1" xmlns="http://www.w3.org/1999/xhtml">{order.OrderDate}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2324.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2325.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2326.1" xmlns="http://www.w3.org/1999/xhtml">$"ShipDate:      </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2327.1" xmlns="http://www.w3.org/1999/xhtml">{order.ShipDate}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2328.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2329.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2330.1" xmlns="http://www.w3.org/1999/xhtml">$"Total:         </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2331.1" xmlns="http://www.w3.org/1999/xhtml">{order.Total:C}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2332.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2333.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine();
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.2334.1" xmlns="http://www.w3.org/1999/xhtml">// Output if the order is valid and any rules that were broken.</span></span><span class="koboSpan" id="kobo.2335.1" xmlns="http://www.w3.org/1999/xhtml">
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2336.1" xmlns="http://www.w3.org/1999/xhtml">$"IsValid:  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2337.1" xmlns="http://www.w3.org/1999/xhtml">{result.IsValid}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2338.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2339.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2340.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.2341.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2342.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.2343.1" xmlns="http://www.w3.org/1999/xhtml"> item </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2344.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.2345.1" xmlns="http://www.w3.org/1999/xhtml"> result.Errors)
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2346.1" xmlns="http://www.w3.org/1999/xhtml">$"  </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2347.1" xmlns="http://www.w3.org/1999/xhtml">{item.Severity}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2348.1" xmlns="http://www.w3.org/1999/xhtml">: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2349.1" xmlns="http://www.w3.org/1999/xhtml">{item.ErrorMessage}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2350.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2351.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2352.1" xmlns="http://www.w3.org/1999/xhtml">Run the</span><a id="_idIndexMarker547"/><span class="koboSpan" id="kobo.2353.1" xmlns="http://www.w3.org/1999/xhtml"> console app and note the failed rules, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2354.1" xmlns="http://www.w3.org/1999/xhtml">Current culture: English (United States)
CustomerName:
CustomerEmail:
CustomerLevel: Bronze
OrderId:       0
OrderDate:     01/01/0001 12:00:00 AM
ShipDate:      01/01/0001 12:00:00 AM
Total:         $0.00
IsValid:  False
  Error: 'Order Id' must not be empty.
  </span><span class="koboSpan" id="kobo.2354.2" xmlns="http://www.w3.org/1999/xhtml">Error: 'Name' must not be empty.
  </span><span class="koboSpan" id="kobo.2354.3" xmlns="http://www.w3.org/1999/xhtml">Error: 'Customer Email' must not be empty.
  </span><span class="koboSpan" id="kobo.2354.4" xmlns="http://www.w3.org/1999/xhtml">Error: 'Total' must be greater than '0'.
  </span><span class="koboSpan" id="kobo.2354.5" xmlns="http://www.w3.org/1999/xhtml">Error: 'Ship Date' must be greater than '01/01/0001 12:00:00 AM'.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2355.1" xmlns="http://www.w3.org/1999/xhtml">Comment out the two statements that set the culture to see the output in your local language and region. </span><span class="koboSpan" id="kobo.2355.2" xmlns="http://www.w3.org/1999/xhtml">For example, if you are in France (</span><code class="inlineCode"><span class="koboSpan" id="kobo.2356.1" xmlns="http://www.w3.org/1999/xhtml">fr-FR</span></code><span class="koboSpan" id="kobo.2357.1" xmlns="http://www.w3.org/1999/xhtml">), it would look like the following:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2358.1" xmlns="http://www.w3.org/1999/xhtml">Current culture: français (France)
CustomerName:
CustomerEmail:
CustomerLevel: Bronze
OrderId:       0
OrderDate:     01/01/0001 00:00:00
ShipDate:      01/01/0001 00:00:00
Total:         0,00 €
IsValid:  False
  Error: 'Order Id' ne doit pas être vide.
  </span><span class="koboSpan" id="kobo.2358.2" xmlns="http://www.w3.org/1999/xhtml">Error: 'Name' ne doit pas avoir la valeur null.
  </span><span class="koboSpan" id="kobo.2358.3" xmlns="http://www.w3.org/1999/xhtml">Error: 'Customer Email' ne doit pas être vide.
  </span><span class="koboSpan" id="kobo.2358.4" xmlns="http://www.w3.org/1999/xhtml">Error: 'Total' doit être plus grand que '0'.
  </span><span class="koboSpan" id="kobo.2358.5" xmlns="http://www.w3.org/1999/xhtml">Error: 'Ship Date' doit être plus grand que '01/01/0001 00:00:00'.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2359.1" xmlns="http://www.w3.org/1999/xhtml">Set some property values for the order, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2360.1" xmlns="http://www.w3.org/1999/xhtml">Order order = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2361.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2362.1" xmlns="http://www.w3.org/1999/xhtml">()
{
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2363.1" xmlns="http://www.w3.org/1999/xhtml">  OrderId = </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2364.1" xmlns="http://www.w3.org/1999/xhtml">10001</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2365.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2366.1" xmlns="http://www.w3.org/1999/xhtml">  CustomerName = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2367.1" xmlns="http://www.w3.org/1999/xhtml">"Abc"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2368.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2369.1" xmlns="http://www.w3.org/1999/xhtml">  CustomerEmail = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2370.1" xmlns="http://www.w3.org/1999/xhtml">"abc&amp;example.com"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2371.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2372.1" xmlns="http://www.w3.org/1999/xhtml">  CustomerLevel = (CustomerLevel)</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2373.1" xmlns="http://www.w3.org/1999/xhtml">4</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2374.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2375.1" xmlns="http://www.w3.org/1999/xhtml">  OrderDate = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2376.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2377.1" xmlns="http://www.w3.org/1999/xhtml">(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2378.1" xmlns="http://www.w3.org/1999/xhtml">2022</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2379.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2380.1" xmlns="http://www.w3.org/1999/xhtml">12</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2381.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2382.1" xmlns="http://www.w3.org/1999/xhtml">1</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2383.1" xmlns="http://www.w3.org/1999/xhtml">),</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2384.1" xmlns="http://www.w3.org/1999/xhtml">  ShipDate = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2385.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2386.1" xmlns="http://www.w3.org/1999/xhtml">(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2387.1" xmlns="http://www.w3.org/1999/xhtml">2022</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2388.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2389.1" xmlns="http://www.w3.org/1999/xhtml">11</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2390.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2391.1" xmlns="http://www.w3.org/1999/xhtml">5</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2392.1" xmlns="http://www.w3.org/1999/xhtml">),</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2393.1" xmlns="http://www.w3.org/1999/xhtml">  Total = </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.2394.1" xmlns="http://www.w3.org/1999/xhtml">49.99</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2395.1" xmlns="http://www.w3.org/1999/xhtml">M</span></strong></span><span class="koboSpan" id="kobo.2396.1" xmlns="http://www.w3.org/1999/xhtml">
};
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2397.1" xmlns="http://www.w3.org/1999/xhtml">Set the current </span><a id="_idIndexMarker548"/><span class="koboSpan" id="kobo.2398.1" xmlns="http://www.w3.org/1999/xhtml">culture to US English to make sure you see the same output as in this book. </span><span class="koboSpan" id="kobo.2398.2" xmlns="http://www.w3.org/1999/xhtml">You can experiment with your own culture later.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2399.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and note the failed rules, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2400.1" xmlns="http://www.w3.org/1999/xhtml">Current culture: English (United States)
CustomerName:  Abc
CustomerEmail: abc&amp;example.com
CustomerLevel: 4
OrderId:       10001
OrderDate:     12/1/2022 12:00:00 AM
ShipDate:      11/5/2022 12:00:00 AM
Total:         $49.99
IsValid:  False
  Warning: The length of 'Customer Name' must be at least 5 characters. </span><span class="koboSpan" id="kobo.2400.2" xmlns="http://www.w3.org/1999/xhtml">You entered 3 characters.
  </span><span class="koboSpan" id="kobo.2400.3" xmlns="http://www.w3.org/1999/xhtml">Error: 'Customer Email' is not a valid email address.
  </span><span class="koboSpan" id="kobo.2400.4" xmlns="http://www.w3.org/1999/xhtml">Error: 'Customer Level' has a range of values which does not include '4'.
  </span><span class="koboSpan" id="kobo.2400.5" xmlns="http://www.w3.org/1999/xhtml">Error: 'Ship Date' must be greater than '12/1/2022 12:00:00 AM'.
  </span><span class="koboSpan" id="kobo.2400.6" xmlns="http://www.w3.org/1999/xhtml">Error: 'Total' must be less than '20'.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2401.1" xmlns="http://www.w3.org/1999/xhtml">Modify some property values for the order, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2402.1" xmlns="http://www.w3.org/1999/xhtml">Order order = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2403.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2404.1" xmlns="http://www.w3.org/1999/xhtml">()
{
  OrderId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2405.1" xmlns="http://www.w3.org/1999/xhtml">10001</span></span><span class="koboSpan" id="kobo.2406.1" xmlns="http://www.w3.org/1999/xhtml">,
  CustomerName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2407.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2408.1" xmlns="http://www.w3.org/1999/xhtml">Abc</span></span><span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2409.1" xmlns="http://www.w3.org/1999/xhtml">def</span></strong></span><span class="hljs-string"><span class="koboSpan" id="kobo.2410.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2411.1" xmlns="http://www.w3.org/1999/xhtml">,
  CustomerEmail = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2412.1" xmlns="http://www.w3.org/1999/xhtml">"abc</span></span><span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2413.1" xmlns="http://www.w3.org/1999/xhtml">@</span></strong></span><span class="hljs-string"><span class="koboSpan" id="kobo.2414.1" xmlns="http://www.w3.org/1999/xhtml">example.com"</span></span><span class="koboSpan" id="kobo.2415.1" xmlns="http://www.w3.org/1999/xhtml">,
  CustomerLevel = </span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2416.1" xmlns="http://www.w3.org/1999/xhtml">CustomerLevel.Gold</span></strong></span><span class="koboSpan" id="kobo.2417.1" xmlns="http://www.w3.org/1999/xhtml">,
  OrderDate = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2418.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2419.1" xmlns="http://www.w3.org/1999/xhtml">(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2420.1" xmlns="http://www.w3.org/1999/xhtml">2022</span></span><span class="koboSpan" id="kobo.2421.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.2422.1" xmlns="http://www.w3.org/1999/xhtml">12</span></span><span class="koboSpan" id="kobo.2423.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.2424.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.2425.1" xmlns="http://www.w3.org/1999/xhtml">),
  ShipDate = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2426.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2427.1" xmlns="http://www.w3.org/1999/xhtml">(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2428.1" xmlns="http://www.w3.org/1999/xhtml">2022</span></span><span class="koboSpan" id="kobo.2429.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.2430.1" xmlns="http://www.w3.org/1999/xhtml">12</span></span><span class="koboSpan" id="kobo.2431.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.2432.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.2433.1" xmlns="http://www.w3.org/1999/xhtml">),
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2434.1" xmlns="http://www.w3.org/1999/xhtml">// CustomerLevel is Gold so Total can be &gt;20.</span></span><span class="koboSpan" id="kobo.2435.1" xmlns="http://www.w3.org/1999/xhtml">
  Total = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2436.1" xmlns="http://www.w3.org/1999/xhtml">49.99</span></span><span class="koboSpan" id="kobo.2437.1" xmlns="http://www.w3.org/1999/xhtml">M
};
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2438.1" xmlns="http://www.w3.org/1999/xhtml">Run the</span><a id="_idIndexMarker549"/><span class="koboSpan" id="kobo.2439.1" xmlns="http://www.w3.org/1999/xhtml"> console app and note the order is now valid, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2440.1" xmlns="http://www.w3.org/1999/xhtml">IsValid:  True
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-259"><span class="koboSpan" id="kobo.2441.1" xmlns="http://www.w3.org/1999/xhtml">Validating data with ASP.NET Core</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2442.1" xmlns="http://www.w3.org/1999/xhtml">For </span><a id="_idIndexMarker550"/><span class="koboSpan" id="kobo.2443.1" xmlns="http://www.w3.org/1999/xhtml">automatic data validation with ASP.NET Core, FluentValidation supports .NET Core 3.1 and later.</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2444.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.2445.1" xmlns="http://www.w3.org/1999/xhtml">: Learn more details at the following link: </span><a href="https://cecilphillip.com/fluent-validation-rules-with-asp-net-core/"><span class="url"><span class="koboSpan" id="kobo.2446.1" xmlns="http://www.w3.org/1999/xhtml">https://cecilphillip.com/fluent-validation-rules-with-asp-net-core/</span></span></a><span class="koboSpan" id="kobo.2447.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-260"><span class="koboSpan" id="kobo.2448.1" xmlns="http://www.w3.org/1999/xhtml">Generating PDFs</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2449.1" xmlns="http://www.w3.org/1999/xhtml">One of the</span><a id="_idIndexMarker551"/><span class="koboSpan" id="kobo.2450.1" xmlns="http://www.w3.org/1999/xhtml"> most common questions I get when teaching C# and .NET is, “What open-source library is available to generate PDF files?”</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2451.1" xmlns="http://www.w3.org/1999/xhtml">There are many licensed libraries for generating PDF files, but over the years, it has been difficult to find cross-platform open-source ones. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.2452.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF says, “</span><em class="italic"><span class="koboSpan" id="kobo.2453.1" xmlns="http://www.w3.org/1999/xhtml">If you are consuming the QuestPDF library as a Direct Package Dependency for usage in a Closed Source software in the capacity of a for-profit company/individual with more than 1M USD annual gross revenue, you must purchase the QuestPDF Professional or Enterprise License, depending on the number of software developers. </span><span class="koboSpan" id="kobo.2453.2" xmlns="http://www.w3.org/1999/xhtml">Please refer to the QuestPDF License and Pricing webpage for more details. </span><span class="koboSpan" id="kobo.2453.3" xmlns="http://www.w3.org/1999/xhtml">(</span></em><a href="https://www.questpdf.com/pricing.html"><span class="url"><span class="koboSpan" id="kobo.2454.1" xmlns="http://www.w3.org/1999/xhtml">https://www.questpdf.com/pricing.html</span></span></a><em class="italic"><span class="koboSpan" id="kobo.2455.1" xmlns="http://www.w3.org/1999/xhtml">)</span></em><span class="koboSpan" id="kobo.2456.1" xmlns="http://www.w3.org/1999/xhtml">”</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2457.1" xmlns="http://www.w3.org/1999/xhtml">The older 2022.12.X release </span><a id="_idIndexMarker552"/><span class="koboSpan" id="kobo.2458.1" xmlns="http://www.w3.org/1999/xhtml">will always be available under the MIT license, free for commercial usage. </span><span class="koboSpan" id="kobo.2458.2" xmlns="http://www.w3.org/1999/xhtml">If you want to support library development, please consider purchasing the Professional License for version 2023.1.X or later.</span></p>
<h2 class="heading-2" id="_idParaDest-261"><span class="koboSpan" id="kobo.2459.1" xmlns="http://www.w3.org/1999/xhtml">Using QuestPDF on Apple silicon Macs</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2460.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF uses</span><a id="_idIndexMarker553"/><span class="koboSpan" id="kobo.2461.1" xmlns="http://www.w3.org/1999/xhtml"> SkiaSharp, which has</span><a id="_idIndexMarker554"/><span class="koboSpan" id="kobo.2462.1" xmlns="http://www.w3.org/1999/xhtml"> implementations for Windows, Mac, and Linux operating systems. </span><span class="koboSpan" id="kobo.2462.2" xmlns="http://www.w3.org/1999/xhtml">The console app that you create in this section to generate PDFs is therefore cross-platform. </span><span class="koboSpan" id="kobo.2462.3" xmlns="http://www.w3.org/1999/xhtml">But on an Apple silicon Mac, like my Mac mini M1, I had to install the x64 version of .NET SDK and start the project using </span><code class="inlineCode"><span class="koboSpan" id="kobo.2463.1" xmlns="http://www.w3.org/1999/xhtml">dotnet new -a x64</span></code><span class="koboSpan" id="kobo.2464.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.2464.2" xmlns="http://www.w3.org/1999/xhtml">This tells the .NET SDK to use the x64 architecture, otherwise the SkiaSharp libraries give an error because they have not yet been built to target ARM64.</span></p>
<h2 class="heading-2" id="_idParaDest-262"><span class="koboSpan" id="kobo.2465.1" xmlns="http://www.w3.org/1999/xhtml">Creating class libraries to generate PDF documents</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2466.1" xmlns="http://www.w3.org/1999/xhtml">Let’s see an </span><a id="_idIndexMarker555"/><span class="koboSpan" id="kobo.2467.1" xmlns="http://www.w3.org/1999/xhtml">example of QuestPDF in action. </span><span class="koboSpan" id="kobo.2467.2" xmlns="http://www.w3.org/1999/xhtml">You will create three projects:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2468.1" xmlns="http://www.w3.org/1999/xhtml">A class library for a model that represents a catalog of product categories with names and images.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2469.1" xmlns="http://www.w3.org/1999/xhtml">A class library for the document template.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2470.1" xmlns="http://www.w3.org/1999/xhtml">A console app to perform a live generation of a PDF file.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2471.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2472.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2473.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2474.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2475.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.2476.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2477.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></code><span class="koboSpan" id="kobo.2478.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2479.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2480.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2481.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2482.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></code><span class="koboSpan" id="kobo.2483.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2484.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2485.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2486.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2487.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></code><span class="koboSpan" id="kobo.2488.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2489.1" xmlns="http://www.w3.org/1999/xhtml">Category.cs</span></code><span class="koboSpan" id="kobo.2490.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents to define a class with two properties for the name and identifier of a category, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2491.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2492.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></span><span class="koboSpan" id="kobo.2493.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2494.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2495.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2496.1" xmlns="http://www.w3.org/1999/xhtml">Category</span></span><span class="koboSpan" id="kobo.2497.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2498.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2499.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.2500.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2501.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2502.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2503.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2504.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2505.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2506.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2507.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2508.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2509.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2510.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2511.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2512.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2513.1" xmlns="http://www.w3.org/1999/xhtml">!;
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2514.1" xmlns="http://www.w3.org/1999/xhtml">Later, you will create an </span><code class="inlineCode"><span class="koboSpan" id="kobo.2515.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.2516.1" xmlns="http://www.w3.org/1999/xhtml"> folder with filenames that use the pattern </span><code class="inlineCode"><span class="koboSpan" id="kobo.2517.1" xmlns="http://www.w3.org/1999/xhtml">categoryN.jpeg</span></code><span class="koboSpan" id="kobo.2518.1" xmlns="http://www.w3.org/1999/xhtml">, where </span><code class="inlineCode"><span class="koboSpan" id="kobo.2519.1" xmlns="http://www.w3.org/1999/xhtml">N</span></code><span class="koboSpan" id="kobo.2520.1" xmlns="http://www.w3.org/1999/xhtml"> is a number from 1 to 8 that matches the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2521.1" xmlns="http://www.w3.org/1999/xhtml">CategoryId</span></code><span class="koboSpan" id="kobo.2522.1" xmlns="http://www.w3.org/1999/xhtml"> values.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.2523.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2524.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></code><span class="koboSpan" id="kobo.2525.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2526.1" xmlns="http://www.w3.org/1999/xhtml">Catalog.cs</span></code><span class="koboSpan" id="kobo.2527.1" xmlns="http://www.w3.org/1999/xhtml"> and modify its contents to define a class with a property to store the eight categories, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2528.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2529.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Models</span></span><span class="koboSpan" id="kobo.2530.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2531.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2532.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2533.1" xmlns="http://www.w3.org/1999/xhtml">Catalog</span></span><span class="koboSpan" id="kobo.2534.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2535.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2536.1" xmlns="http://www.w3.org/1999/xhtml"> List&lt;Category&gt; Categories { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2537.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2538.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2539.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2540.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2541.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2542.1" xmlns="http://www.w3.org/1999/xhtml">!;
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2543.1" xmlns="http://www.w3.org/1999/xhtml">Use </span><a id="_idIndexMarker556"/><span class="koboSpan" id="kobo.2544.1" xmlns="http://www.w3.org/1999/xhtml">your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2545.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2546.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2547.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.2548.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2549.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></code><span class="koboSpan" id="kobo.2550.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2551.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2552.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2553.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2554.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></code><span class="koboSpan" id="kobo.2555.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a package reference for </span><code class="inlineCode"><span class="koboSpan" id="kobo.2556.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF</span></code><span class="koboSpan" id="kobo.2557.1" xmlns="http://www.w3.org/1999/xhtml"> and a project reference for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2558.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.2559.1" xmlns="http://www.w3.org/1999/xhtml"> class library, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2560.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;!-- The newest version </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2561.1" xmlns="http://www.w3.org/1999/xhtml">with</span></span><span class="koboSpan" id="kobo.2562.1" xmlns="http://www.w3.org/1999/xhtml"> an MIT license. </span><span class="koboSpan" id="kobo.2562.2" xmlns="http://www.w3.org/1999/xhtml">--&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2563.1" xmlns="http://www.w3.org/1999/xhtml">"QuestPDF"</span></span><span class="koboSpan" id="kobo.2564.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2565.1" xmlns="http://www.w3.org/1999/xhtml">"2022.12.6"</span></span><span class="koboSpan" id="kobo.2566.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.2567.1" xmlns="http://www.w3.org/1999/xhtml">"..\GeneratingPdf.Models\GeneratingPdf.Models.csproj"</span></span><span class="koboSpan" id="kobo.2568.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2569.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2570.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></code><span class="koboSpan" id="kobo.2571.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2572.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2573.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></code><span class="koboSpan" id="kobo.2574.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2575.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2576.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2577.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2578.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></code><span class="koboSpan" id="kobo.2579.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2580.1" xmlns="http://www.w3.org/1999/xhtml">CatalogDocument.cs</span></code><span class="koboSpan" id="kobo.2581.1" xmlns="http://www.w3.org/1999/xhtml">. </span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2582.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2583.1" xmlns="http://www.w3.org/1999/xhtml">CatalogDocument.cs</span></code><span class="koboSpan" id="kobo.2584.1" xmlns="http://www.w3.org/1999/xhtml">, define a class that implements the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2585.1" xmlns="http://www.w3.org/1999/xhtml">IDocument</span></code><span class="koboSpan" id="kobo.2586.1" xmlns="http://www.w3.org/1999/xhtml"> interface to define a template with a header and a footer, and then output the eight </span><a id="_idIndexMarker557"/><span class="koboSpan" id="kobo.2587.1" xmlns="http://www.w3.org/1999/xhtml">categories, including name and image, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2588.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2589.1" xmlns="http://www.w3.org/1999/xhtml"> GeneratingPdf.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2590.1" xmlns="http://www.w3.org/1999/xhtml">// Catalog</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2591.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2592.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Drawing; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2593.1" xmlns="http://www.w3.org/1999/xhtml">// DocumentMetadata</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2594.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2595.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Fluent; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2596.1" xmlns="http://www.w3.org/1999/xhtml">// Page</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2597.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2598.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Helpers; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2599.1" xmlns="http://www.w3.org/1999/xhtml">// Colors</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2600.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2601.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Infrastructure; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2602.1" xmlns="http://www.w3.org/1999/xhtml">// IDocument, IDocumentContainer</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2603.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2604.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Document</span></span><span class="koboSpan" id="kobo.2605.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2606.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2607.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2608.1" xmlns="http://www.w3.org/1999/xhtml">CatalogDocument</span></span><span class="koboSpan" id="kobo.2609.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2610.1" xmlns="http://www.w3.org/1999/xhtml">IDocument</span></span><span class="koboSpan" id="kobo.2611.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2612.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2613.1" xmlns="http://www.w3.org/1999/xhtml"> Catalog Model { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2614.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2615.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2616.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2617.1" xmlns="http://www.w3.org/1999/xhtml">CatalogDocument</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2618.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2619.1" xmlns="http://www.w3.org/1999/xhtml">Catalog model</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2620.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2621.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    Model = model;
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2622.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2623.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2624.1" xmlns="http://www.w3.org/1999/xhtml">Compose</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2625.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2626.1" xmlns="http://www.w3.org/1999/xhtml">IDocumentContainer container</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2627.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2628.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    container
      .Page(page =&gt;
      {
        page.Margin(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2629.1" xmlns="http://www.w3.org/1999/xhtml">50</span></span> <span class="hljs-comment"><span class="koboSpan" id="kobo.2630.1" xmlns="http://www.w3.org/1999/xhtml">/* points */</span></span><span class="koboSpan" id="kobo.2631.1" xmlns="http://www.w3.org/1999/xhtml">);
        page.Header()
          .Height(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2632.1" xmlns="http://www.w3.org/1999/xhtml">100</span></span><span class="koboSpan" id="kobo.2633.1" xmlns="http://www.w3.org/1999/xhtml">).Background(Colors.Grey.Lighten1)
          .AlignCenter().Text(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2634.1" xmlns="http://www.w3.org/1999/xhtml">"Catalogue"</span></span><span class="koboSpan" id="kobo.2635.1" xmlns="http://www.w3.org/1999/xhtml">)
          .Style(TextStyle.Default.FontSize(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2636.1" xmlns="http://www.w3.org/1999/xhtml">20</span></span><span class="koboSpan" id="kobo.2637.1" xmlns="http://www.w3.org/1999/xhtml">));
        page.Content()
          .Background(Colors.Grey.Lighten3)
          .Table(table =&gt;
          {
            table.ColumnsDefinition(columns =&gt;
            {
              columns.ConstantColumn(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2638.1" xmlns="http://www.w3.org/1999/xhtml">100</span></span><span class="koboSpan" id="kobo.2639.1" xmlns="http://www.w3.org/1999/xhtml">);
              columns.RelativeColumn();
            });
            </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2640.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.2641.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2642.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.2643.1" xmlns="http://www.w3.org/1999/xhtml"> item </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2644.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.2645.1" xmlns="http://www.w3.org/1999/xhtml"> Model.Categories)
            {
              table.Cell().Text(item.CategoryName);
              </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2646.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2647.1" xmlns="http://www.w3.org/1999/xhtml"> imagePath = Path.Combine(
                Environment.CurrentDirectory, </span><span class="hljs-string"><span class="koboSpan" id="kobo.2648.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2649.1" xmlns="http://www.w3.org/1999/xhtml">images"</span></span><span class="koboSpan" id="kobo.2650.1" xmlns="http://www.w3.org/1999/xhtml">, 
                </span><span class="hljs-string"><span class="koboSpan" id="kobo.2651.1" xmlns="http://www.w3.org/1999/xhtml">$"category</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2652.1" xmlns="http://www.w3.org/1999/xhtml">{item.CategoryId}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2653.1" xmlns="http://www.w3.org/1999/xhtml">.jpeg"</span></span><span class="koboSpan" id="kobo.2654.1" xmlns="http://www.w3.org/1999/xhtml">);
              
              table.Cell().Image(imagePath);
            }
          });
        page.Footer()
          .Height(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2655.1" xmlns="http://www.w3.org/1999/xhtml">50</span></span><span class="koboSpan" id="kobo.2656.1" xmlns="http://www.w3.org/1999/xhtml">).Background(Colors.Grey.Lighten1)
          .AlignCenter().Text(x =&gt;
          {
            x.CurrentPageNumber();
            x.Span(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2657.1" xmlns="http://www.w3.org/1999/xhtml">" of "</span></span><span class="koboSpan" id="kobo.2658.1" xmlns="http://www.w3.org/1999/xhtml">);
            x.TotalPages();
          });
      });
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2659.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2660.1" xmlns="http://www.w3.org/1999/xhtml"> DocumentMetadata </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2661.1" xmlns="http://www.w3.org/1999/xhtml">GetMetadata</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2662.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2663.1" xmlns="http://www.w3.org/1999/xhtml"> =&gt; DocumentMetadata.Default;
}
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-263"><span class="koboSpan" id="kobo.2664.1" xmlns="http://www.w3.org/1999/xhtml">Creating a console app to generate PDF documents</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2665.1" xmlns="http://www.w3.org/1999/xhtml">Now we can </span><a id="_idIndexMarker558"/><span class="koboSpan" id="kobo.2666.1" xmlns="http://www.w3.org/1999/xhtml">create a console app project that will use the class libraries to generate a PDF document:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2667.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2668.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.2669.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2670.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.2671.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2672.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Console</span></code><span class="koboSpan" id="kobo.2673.1" xmlns="http://www.w3.org/1999/xhtml"> to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2674.1" xmlns="http://www.w3.org/1999/xhtml">Chapter06</span></code><span class="koboSpan" id="kobo.2675.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2676.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2677.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Console</span></code><span class="koboSpan" id="kobo.2678.1" xmlns="http://www.w3.org/1999/xhtml"> project, create an </span><code class="inlineCode"><span class="koboSpan" id="kobo.2679.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.2680.1" xmlns="http://www.w3.org/1999/xhtml"> folder and download the eight category images 1 to 8 from the following link to it: </span><a href="https://github.com/markjprice/apps-services-net8/tree/master/images/Categories"><span class="url"><span class="koboSpan" id="kobo.2681.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/tree/master/images/Categories</span></span></a><span class="koboSpan" id="kobo.2682.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2683.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio 2022 or JetBrains Rider, then the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2684.1" xmlns="http://www.w3.org/1999/xhtml">images</span></code><span class="koboSpan" id="kobo.2685.1" xmlns="http://www.w3.org/1999/xhtml"> folder and its files must be copied to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2686.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Console\bin\Debug\net8</span></code><span class="koboSpan" id="kobo.2687.1" xmlns="http://www.w3.org/1999/xhtml"> folder:</span><ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2688.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.2689.1" xmlns="http://www.w3.org/1999/xhtml">Solution Explorer</span></strong><span class="koboSpan" id="kobo.2690.1" xmlns="http://www.w3.org/1999/xhtml">, select all the images.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2691.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.2692.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></strong><span class="koboSpan" id="kobo.2693.1" xmlns="http://www.w3.org/1999/xhtml">, set </span><strong class="screenText"><span class="koboSpan" id="kobo.2694.1" xmlns="http://www.w3.org/1999/xhtml">Copy To Output Directory</span></strong><span class="koboSpan" id="kobo.2695.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><strong class="screenText"><span class="koboSpan" id="kobo.2696.1" xmlns="http://www.w3.org/1999/xhtml">Copy Always</span></strong><span class="koboSpan" id="kobo.2697.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2698.1" xmlns="http://www.w3.org/1999/xhtml">Open the project file and note the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2699.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;</span></code><span class="koboSpan" id="kobo.2700.1" xmlns="http://www.w3.org/1999/xhtml"> entries that will copy the eight images to the correct folder, as partially shown in the following markup:</span></li>
</ol>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2701.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;None Update=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2702.1" xmlns="http://www.w3.org/1999/xhtml">"images\category1.jpeg"</span></span><span class="koboSpan" id="kobo.2703.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
    &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
  &lt;/None&gt;
...
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2704.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2705.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Console</span></code><span class="koboSpan" id="kobo.2706.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, globally and </span><a id="_idIndexMarker559"/><span class="koboSpan" id="kobo.2707.1" xmlns="http://www.w3.org/1999/xhtml">statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2708.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.2709.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add a project reference for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2710.1" xmlns="http://www.w3.org/1999/xhtml">Document</span></code><span class="koboSpan" id="kobo.2711.1" xmlns="http://www.w3.org/1999/xhtml"> template class library, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2712.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
    </span><span class="hljs-string"><span class="koboSpan" id="kobo.2713.1" xmlns="http://www.w3.org/1999/xhtml">"..\GeneratingPdf.Document\GeneratingPdf.Document.csproj"</span></span><span class="koboSpan" id="kobo.2714.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2715.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2716.1" xmlns="http://www.w3.org/1999/xhtml">GeneratingPdf.Console</span></code><span class="koboSpan" id="kobo.2717.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2718.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2719.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2720.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements and then add statements to create a catalog model, pass it to a catalog document, generate a PDF file, and then attempt to open the file using the appropriate operating system command, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2721.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2722.1" xmlns="http://www.w3.org/1999/xhtml"> GeneratingPdf.Document; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2723.1" xmlns="http://www.w3.org/1999/xhtml">// To use CatalogDocument.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2724.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2725.1" xmlns="http://www.w3.org/1999/xhtml"> GeneratingPdf.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2726.1" xmlns="http://www.w3.org/1999/xhtml">// To use Catalog, Category.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2727.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2728.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Fluent; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2729.1" xmlns="http://www.w3.org/1999/xhtml">// To use the GeneratePdf extension method.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2730.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2731.1" xmlns="http://www.w3.org/1999/xhtml"> QuestPDF.Infrastructure; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2732.1" xmlns="http://www.w3.org/1999/xhtml">// To use LicenseType.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2733.1" xmlns="http://www.w3.org/1999/xhtml">// For evaluation purposes, feel free to use the QuestPDF Community </span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2734.1" xmlns="http://www.w3.org/1999/xhtml">// License in a non-production environment.</span></span><span class="koboSpan" id="kobo.2735.1" xmlns="http://www.w3.org/1999/xhtml">
QuestPDF.Settings.License = LicenseType.Community;
</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2736.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2737.1" xmlns="http://www.w3.org/1999/xhtml"> filename = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2738.1" xmlns="http://www.w3.org/1999/xhtml">"catalog.pdf"</span></span><span class="koboSpan" id="kobo.2739.1" xmlns="http://www.w3.org/1999/xhtml">;
Catalog model = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2740.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2741.1" xmlns="http://www.w3.org/1999/xhtml">()
{
  Categories = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2742.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2743.1" xmlns="http://www.w3.org/1999/xhtml">()
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2744.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2745.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2746.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.2747.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2748.1" xmlns="http://www.w3.org/1999/xhtml">"Beverages"</span></span><span class="koboSpan" id="kobo.2749.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2750.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2751.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2752.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.2753.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2754.1" xmlns="http://www.w3.org/1999/xhtml">"Condiments"</span></span><span class="koboSpan" id="kobo.2755.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2756.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2757.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2758.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.2759.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2760.1" xmlns="http://www.w3.org/1999/xhtml">"Confections"</span></span><span class="koboSpan" id="kobo.2761.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2762.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2763.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2764.1" xmlns="http://www.w3.org/1999/xhtml">4</span></span><span class="koboSpan" id="kobo.2765.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2766.1" xmlns="http://www.w3.org/1999/xhtml">"Dairy Products"</span></span><span class="koboSpan" id="kobo.2767.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2768.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2769.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2770.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.2771.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2772.1" xmlns="http://www.w3.org/1999/xhtml">"Grains/Cereals"</span></span><span class="koboSpan" id="kobo.2773.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2774.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2775.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2776.1" xmlns="http://www.w3.org/1999/xhtml">6</span></span><span class="koboSpan" id="kobo.2777.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2778.1" xmlns="http://www.w3.org/1999/xhtml">"Meat/Poultry"</span></span><span class="koboSpan" id="kobo.2779.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2780.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2781.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2782.1" xmlns="http://www.w3.org/1999/xhtml">7</span></span><span class="koboSpan" id="kobo.2783.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2784.1" xmlns="http://www.w3.org/1999/xhtml">"Produce"</span></span><span class="koboSpan" id="kobo.2785.1" xmlns="http://www.w3.org/1999/xhtml">},
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2786.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2787.1" xmlns="http://www.w3.org/1999/xhtml">() { CategoryId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2788.1" xmlns="http://www.w3.org/1999/xhtml">8</span></span><span class="koboSpan" id="kobo.2789.1" xmlns="http://www.w3.org/1999/xhtml">, CategoryName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2790.1" xmlns="http://www.w3.org/1999/xhtml">"Seafood"</span></span><span class="koboSpan" id="kobo.2791.1" xmlns="http://www.w3.org/1999/xhtml">}
  }
};
CatalogDocument document = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2792.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2793.1" xmlns="http://www.w3.org/1999/xhtml">(model);
document.GeneratePdf(filename);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2794.1" xmlns="http://www.w3.org/1999/xhtml">"PDF catalog has been created: {0}"</span></span><span class="koboSpan" id="kobo.2795.1" xmlns="http://www.w3.org/1999/xhtml">,
  Path.Combine(Environment.CurrentDirectory, filename));
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2796.1" xmlns="http://www.w3.org/1999/xhtml">try</span></span><span class="koboSpan" id="kobo.2797.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2798.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2799.1" xmlns="http://www.w3.org/1999/xhtml"> (OperatingSystem.IsWindows())
  {
    System.Diagnostics.Process.Start(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2800.1" xmlns="http://www.w3.org/1999/xhtml">"explorer.exe"</span></span><span class="koboSpan" id="kobo.2801.1" xmlns="http://www.w3.org/1999/xhtml">, filename);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2802.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.2803.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2804.1" xmlns="http://www.w3.org/1999/xhtml">"Open the file manually."</span></span><span class="koboSpan" id="kobo.2805.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2806.1" xmlns="http://www.w3.org/1999/xhtml">catch</span></span><span class="koboSpan" id="kobo.2807.1" xmlns="http://www.w3.org/1999/xhtml"> (Exception ex)
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2808.1" xmlns="http://www.w3.org/1999/xhtml">$"</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2809.1" xmlns="http://www.w3.org/1999/xhtml">{ex.GetType()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2810.1" xmlns="http://www.w3.org/1999/xhtml"> says </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2811.1" xmlns="http://www.w3.org/1999/xhtml">{ex.Message}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2812.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2813.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2814.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.2815.1" xmlns="http://www.w3.org/1999/xhtml">Process</span></code><span class="koboSpan" id="kobo.2816.1" xmlns="http://www.w3.org/1999/xhtml"> class and its </span><code class="inlineCode"><span class="koboSpan" id="kobo.2817.1" xmlns="http://www.w3.org/1999/xhtml">Start</span></code><span class="koboSpan" id="kobo.2818.1" xmlns="http://www.w3.org/1999/xhtml"> method should also be able to start processes on Mac and Linux, but getting the paths right can be tricky, so I’ve left that as an optional exercise for the reader. </span><span class="koboSpan" id="kobo.2818.2" xmlns="http://www.w3.org/1999/xhtml">You can learn more about the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2819.1" xmlns="http://www.w3.org/1999/xhtml">Process</span></code><span class="koboSpan" id="kobo.2820.1" xmlns="http://www.w3.org/1999/xhtml"> class and its </span><code class="inlineCode"><span class="koboSpan" id="kobo.2821.1" xmlns="http://www.w3.org/1999/xhtml">Start</span></code><span class="koboSpan" id="kobo.2822.1" xmlns="http://www.w3.org/1999/xhtml"> method at the following link: </span><a href="https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start"><span class="url"><span class="koboSpan" id="kobo.2823.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start</span></span></a><span class="koboSpan" id="kobo.2824.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="7"><span class="koboSpan" id="kobo.2825.1" xmlns="http://www.w3.org/1999/xhtml">Run the </span><a id="_idIndexMarker560"/><span class="koboSpan" id="kobo.2826.1" xmlns="http://www.w3.org/1999/xhtml">console app and note the PDF file generated, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2827.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.4</span></em><span class="koboSpan" id="kobo.2828.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2829.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_06_04.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2830.1" xmlns="http://www.w3.org/1999/xhtml">Figure 6.4: A PDF file generated from C# code</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2831.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.2832.1" xmlns="http://www.w3.org/1999/xhtml">: Learn more details at the following link: </span><a href="https://www.questpdf.com/"><span class="url"><span class="koboSpan" id="kobo.2833.1" xmlns="http://www.w3.org/1999/xhtml">https://www.questpdf.com/</span></span></a><span class="koboSpan" id="kobo.2834.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-264"><span class="koboSpan" id="kobo.2835.1" xmlns="http://www.w3.org/1999/xhtml">Practicing and exploring</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2836.1" xmlns="http://www.w3.org/1999/xhtml">Test your knowledge and understanding by answering some questions, getting some hands-on practice, and doing deeper research into the topics in this chapter.</span></p>
<h2 class="heading-2" id="_idParaDest-265"><span class="koboSpan" id="kobo.2837.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 6.1 – Test your knowledge</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2838.1" xmlns="http://www.w3.org/1999/xhtml">Use the web to answer the following questions:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2839.1" xmlns="http://www.w3.org/1999/xhtml">What is the most downloaded third-party </span><code class="inlineCode"><span class="koboSpan" id="kobo.2840.1" xmlns="http://www.w3.org/1999/xhtml">NuGet</span></code><span class="koboSpan" id="kobo.2841.1" xmlns="http://www.w3.org/1999/xhtml"> package of all time?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2842.1" xmlns="http://www.w3.org/1999/xhtml">What method do you call on the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2843.1" xmlns="http://www.w3.org/1999/xhtml">ImageSharp Image</span></code><span class="koboSpan" id="kobo.2844.1" xmlns="http://www.w3.org/1999/xhtml"> class to make a change like resizing the image or replacing colors with grayscale?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2845.1" xmlns="http://www.w3.org/1999/xhtml">What is a key benefit of using </span><code class="inlineCode"><span class="koboSpan" id="kobo.2846.1" xmlns="http://www.w3.org/1999/xhtml">Serilog</span></code><span class="koboSpan" id="kobo.2847.1" xmlns="http://www.w3.org/1999/xhtml"> for logging?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2848.1" xmlns="http://www.w3.org/1999/xhtml">What is a Serilog sink?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2849.1" xmlns="http://www.w3.org/1999/xhtml">Should you always use a package like </span><code class="inlineCode"><span class="koboSpan" id="kobo.2850.1" xmlns="http://www.w3.org/1999/xhtml">AutoMapper</span></code><span class="koboSpan" id="kobo.2851.1" xmlns="http://www.w3.org/1999/xhtml"> to map between objects?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2852.1" xmlns="http://www.w3.org/1999/xhtml">Which </span><code class="inlineCode"><span class="koboSpan" id="kobo.2853.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code><span class="koboSpan" id="kobo.2854.1" xmlns="http://www.w3.org/1999/xhtml"> method should you call to start a fluent assertion on a value?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2855.1" xmlns="http://www.w3.org/1999/xhtml">Which </span><code class="inlineCode"><span class="koboSpan" id="kobo.2856.1" xmlns="http://www.w3.org/1999/xhtml">FluentAssertions</span></code><span class="koboSpan" id="kobo.2857.1" xmlns="http://www.w3.org/1999/xhtml"> method should you call to assert that all items in a sequence conform to a condition, like a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2858.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.2859.1" xmlns="http://www.w3.org/1999/xhtml"> item must have less than six characters?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2860.1" xmlns="http://www.w3.org/1999/xhtml">Which </span><code class="inlineCode"><span class="koboSpan" id="kobo.2861.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></code><span class="koboSpan" id="kobo.2862.1" xmlns="http://www.w3.org/1999/xhtml"> class should you inherit from to define a custom validator?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2863.1" xmlns="http://www.w3.org/1999/xhtml">With </span><code class="inlineCode"><span class="koboSpan" id="kobo.2864.1" xmlns="http://www.w3.org/1999/xhtml">FluentValidation</span></code><span class="koboSpan" id="kobo.2865.1" xmlns="http://www.w3.org/1999/xhtml">, how can you set a rule to only apply in certain conditions?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2866.1" xmlns="http://www.w3.org/1999/xhtml">With </span><code class="inlineCode"><span class="koboSpan" id="kobo.2867.1" xmlns="http://www.w3.org/1999/xhtml">QuestPDF</span></code><span class="koboSpan" id="kobo.2868.1" xmlns="http://www.w3.org/1999/xhtml">, which interface must you implement to define a document for a PDF and what methods of that interface must you implement?</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-266"><span class="koboSpan" id="kobo.2869.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 6.2 – Explore topics</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2870.1" xmlns="http://www.w3.org/1999/xhtml">Use the links on the following page to learn more details about the topics covered in this chapter:</span></p>
<p class="normal"><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-6---implementing-popular-third-party-libraries"><span class="url"><span class="koboSpan" id="kobo.2871.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-6---implementing-popular-third-party-libraries</span></span></a></p>
<h1 class="heading-1" id="_idParaDest-267"><span class="koboSpan" id="kobo.2872.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2873.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, you explored some third-party libraries that are popular with .NET developers to perform functions, including:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2874.1" xmlns="http://www.w3.org/1999/xhtml">Manipulating images using a Microsoft-recommended third-party library named ImageSharp.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2875.1" xmlns="http://www.w3.org/1999/xhtml">Making text, numbers, dates, and times friendlier with Humanizer.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2876.1" xmlns="http://www.w3.org/1999/xhtml">Logging structured data with Serilog.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2877.1" xmlns="http://www.w3.org/1999/xhtml">Mapping between objects, for example, entity models to view models.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2878.1" xmlns="http://www.w3.org/1999/xhtml">Making fluent assertions in unit testing.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2879.1" xmlns="http://www.w3.org/1999/xhtml">Validating data in a local culture language-readable way.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2880.1" xmlns="http://www.w3.org/1999/xhtml">Generating a PDF file.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2881.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, we will learn how to handle internationalization with dates and times and localization, including a new type in .NET 8 for making it easier to unit test components with a dependency on the current time.</span></p>
<h1 class="heading-1" id="_idParaDest-268"><span class="koboSpan" id="kobo.2882.1" xmlns="http://www.w3.org/1999/xhtml">Learn more on Discord</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2883.1" xmlns="http://www.w3.org/1999/xhtml">To join the Discord community for this book – where you can share feedback, ask questions to the author, and learn about new releases – follow the QR code below:</span></p>
<p class="normal"><a href="https://packt.link/apps_and_services_dotnet8"><span class="url"><span class="koboSpan" id="kobo.2884.1" xmlns="http://www.w3.org/1999/xhtml">https://packt.link/apps_and_services_dotnet8</span></span></a></p>
<p class="normal"><span class="koboSpan" id="kobo.2885.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/QR_Code3048220001028652625.png"/></span></p>
</div>
</body>
</html>
