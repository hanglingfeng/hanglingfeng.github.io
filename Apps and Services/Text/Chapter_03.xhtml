<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Chapter_03</title>
<link href="../Styles/syntax-highlighting.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/epub.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="Chapter_03" lang="en-US" xml:lang="en-US">
<div class="Basic-Text-Frame" id="_idContainer120">
<h1 class="chapterNumber"><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">3</span></h1>
<h1 class="chapterTitle" id="_idParaDest-127"><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">Building Entity Models for SQL Server Using EF Core</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">This chapter is about managing relational data stored in SQL Server, Azure SQL Database, or Azure SQL Edge</span><a id="_idIndexMarker212"/><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml"> by using the higher-level object-to-data store mapping technology named </span><strong class="keyWord"><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">Entity Framework Core</span></strong><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">EF Core</span></strong><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">). </span><span class="koboSpan" id="kobo.8.2" xmlns="http://www.w3.org/1999/xhtml">Then, you will learn how to store entity models that use inheritance hierarchies using three different mapping strategies. </span><span class="koboSpan" id="kobo.8.3" xmlns="http://www.w3.org/1999/xhtml">Finally, you will build class libraries for a SQL Server database that will be used in code examples throughout the rest of this book.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">This chapter will cover the following topics:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml">Managing SQL Server data with EF Core</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">Mapping inheritance hierarchies with EF Core</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">Building a reusable entity data model</span></li>
</ul>
<h1 class="heading-1" id="_idParaDest-128"><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">Managing data with EF Core</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">EF Core is an </span><strong class="keyWord"><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml">object-relational mapper </span></strong><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">ORM</span></strong><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">) that uses ADO.NET underneath when working with</span><a id="_idIndexMarker213"/><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml"> SQL Server. </span><span class="koboSpan" id="kobo.19.2" xmlns="http://www.w3.org/1999/xhtml">Because</span><a id="_idIndexMarker214"/><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml"> it is a higher-level</span><a id="_idIndexMarker215"/><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml"> technology, it is not as efficient as using ADO.NET directly, but it can be easier for developers to work with because they can treat the data as objects instead of rows in multiple tables. </span><span class="koboSpan" id="kobo.21.2" xmlns="http://www.w3.org/1999/xhtml">This should feel more natural for an object-oriented developer.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">EF Core 8 only</span><a id="_idIndexMarker216"/><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml"> targets .NET 8. </span><span class="koboSpan" id="kobo.23.2" xmlns="http://www.w3.org/1999/xhtml">EF Core 7 targeted .NET 6, so it could</span><a id="_idIndexMarker217"/><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml"> be used with both the </span><strong class="keyWord"><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml">Long Term Support</span></strong><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml">LTS</span></strong><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">) release of .NET 6 and the </span><strong class="keyWord"><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">Standard Term Support</span></strong><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml">STS</span></strong><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">) release of.NET 7, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.1</span></em><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<figure class="mediaobject"><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_03_01.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.1: EF Core 7 targeted .NET 6 or later</span></p>
<p class="normal"><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml">When EF Core 9 is released</span><a id="_idIndexMarker218"/><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml"> in November 2024, we can expect it to target .NET 8 or later, so you</span><a id="_idIndexMarker219"/><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml"> can upgrade EF Core while still getting long-term support for the .NET 8 platform. </span><span class="koboSpan" id="kobo.39.2" xmlns="http://www.w3.org/1999/xhtml">The EF Core team is responsible for making sure that you will be able to swap 8 for 9 in the version number of their packages and your code should still work. </span><span class="koboSpan" id="kobo.39.3" xmlns="http://www.w3.org/1999/xhtml">They are usually very good at that, and they will document any needed changes to your code in the official release notes for EF Core 9.</span></p>
<h2 class="heading-2" id="_idParaDest-129"><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml">Understanding Entity Framework Core</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">As well as traditional RDBMSs like SQL</span><a id="_idIndexMarker220"/><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml"> Server, EF Core supports modern cloud-based, nonrelational, schema-less data stores, such as Azure Cosmos DB and MongoDB, sometimes with third-party providers.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">There are two approaches</span><a id="_idIndexMarker221"/><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml"> to working with EF Core:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml">Database First</span></strong><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">: A database already exists, so you build a model that matches its structure and features.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml">Code First</span></strong><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">: No database exists, so you build a model and then use EF Core to create a database that matches its structure and features.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml">We will use EF Core with an existing database because that is the most common scenario. </span><span class="koboSpan" id="kobo.49.2" xmlns="http://www.w3.org/1999/xhtml">You will also see an example of Code First later in this chapter that will create its database at runtime.</span></p>
<h2 class="heading-2" id="_idParaDest-130"><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">Scaffolding models using an existing database</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml">Scaffolding is the process of using a tool</span><a id="_idIndexMarker222"/><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml"> to create classes that represent the model of an existing database </span><a id="_idIndexMarker223"/><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">using reverse engineering. </span><span class="koboSpan" id="kobo.53.2" xmlns="http://www.w3.org/1999/xhtml">A good scaffolding tool allows you to extend the automatically generated classes and then regenerate those classes without losing your extended classes.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml">If you know that you will never regenerate the classes using the tool, then feel free to change the code for the automatically generated classes as much as you want. </span><span class="koboSpan" id="kobo.54.2" xmlns="http://www.w3.org/1999/xhtml">The code generated by the tool is just the best approximation.</span></p>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml">: Do not be afraid to overrule a tool when you know better. </span><span class="koboSpan" id="kobo.56.2" xmlns="http://www.w3.org/1999/xhtml">For example, when using SQLite for the Northwind database, date/time columns are mapped to </span><code class="inlineCode"><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml"> properties, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">money</span></code><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml"> columns are mapped to </span><code class="inlineCode"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">double</span></code><span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml"> properties. </span><span class="koboSpan" id="kobo.62.2" xmlns="http://www.w3.org/1999/xhtml">In the Northwind database, these would be better mapped to </span><code class="inlineCode"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">DateTime</span></code><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></code><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml"> respectively, but in another database, they might need more flexibility. </span><span class="koboSpan" id="kobo.66.2" xmlns="http://www.w3.org/1999/xhtml">As another example, in the Northwind database, a </span><code class="inlineCode"><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">CustomerId</span></code><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml"> should always be five uppercase alphabetic characters. </span><span class="koboSpan" id="kobo.68.2" xmlns="http://www.w3.org/1999/xhtml">The tool cannot infer this automatically, so you could add a regular expression to validate it. </span><span class="koboSpan" id="kobo.68.3" xmlns="http://www.w3.org/1999/xhtml">Keep in mind that tool behavior is one of the more volatile components of .NET, so these examples may not be valid by the time you read this book.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-131"><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml">Setting up the dotnet-ef tool</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">.NET has a command-line tool</span><a id="_idIndexMarker224"/><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml"> named </span><code class="inlineCode"><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></code><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.73.2" xmlns="http://www.w3.org/1999/xhtml">It can be extended with capabilities useful for working with EF Core. </span><span class="koboSpan" id="kobo.73.3" xmlns="http://www.w3.org/1999/xhtml">It can perform design-time tasks like creating and applying migrations from an older model to a newer model and generating code for a model from an existing database.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml">dotnet</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml">ef</span></code><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml"> command-line tool is not automatically installed. </span><span class="koboSpan" id="kobo.77.2" xmlns="http://www.w3.org/1999/xhtml">You must install this package as either a </span><strong class="keyWord"><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">global</span></strong><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><strong class="keyWord"><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">local tool</span></strong><span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.81.2" xmlns="http://www.w3.org/1999/xhtml">If you have already installed an older version of the tool, then you should uninstall any existing version.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml">Let’s make sure you have the latest version of the tool installed:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">At a command prompt or terminal, check if you have already installed </span><code class="inlineCode"><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml"> as a global tool, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tool list --global
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml">Check in the list if an older version of the tool has been installed, like the one for .NET 7, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml">Package Id                            Version      Commands
-----------------------------------------------------------------
dotnet-ef                             7.0.0        dotnet-ef
microsoft.web.librarymanager.cli      2.1.175      libman
redth.net.maui.check                  0.5.6        maui-check
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml">If an older version is already installed, then uninstall the tool, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tool uninstall --global dotnet-ef
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">Install the latest version, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tool install --global dotnet-ef
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">If necessary, follow any OS-specific instructions to add the </span><code class="inlineCode"><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tools</span></code><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml"> directory to your </span><code class="inlineCode"><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml">PATH</span></code><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml"> environment variable, as described in the output of installing the </span><code class="inlineCode"><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml"> tool.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml">If you want to install a preview version, you can specify a version wildcard, for example, for EF Core 9 previews, as shown in the following command:</span></p>
<p class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tool install --global dotnet-ef --version 9-*</span></code></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">Instead of uninstalling</span><a id="_idIndexMarker225"/><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml"> and then installing, you can update using the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">dotnet tool update --global dotnet-ef
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-132"><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml">Defining EF Core models</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">EF Core uses</span><a id="_idIndexMarker226"/><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml"> a combination of </span><strong class="keyWord"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">conventions</span></strong><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml">, </span><strong class="keyWord"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">annotation attributes</span></strong><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><strong class="keyWord"><span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml">Fluent API</span></strong><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml"> statements to build an </span><strong class="keyWord"><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">entity model</span></strong><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml"> at runtime so that any actions performed on the classes</span><a id="_idIndexMarker227"/><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml"> can later be automatically translated into actions performed on the actual database. </span><span class="koboSpan" id="kobo.116.2" xmlns="http://www.w3.org/1999/xhtml">An </span><strong class="keyWord"><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml">entity class</span></strong><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml"> represents the structure of a table, and an instance of the class</span><a id="_idIndexMarker228"/><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml"> represents a row in that table.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">First, we will review the three ways to define a model, with code examples, and then we will create some classes that implement those techniques.</span></p>
<h2 class="heading-2" id="_idParaDest-133"><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">Using EF Core conventions to define the model</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">The code we will write</span><a id="_idIndexMarker229"/><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml"> will use the following</span><a id="_idIndexMarker230"/><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml"> conventions:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml">The name of a table is assumed to match the name of a </span><code class="inlineCode"><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml">DbSet&lt;T&gt;</span></code><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml"> property in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></code><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml"> class, for example, </span><code class="inlineCode"><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml">The names of the columns are assumed to match the names of properties in the entity model class, for example, </span><code class="inlineCode"><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml">ProductId</span></code><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml"> .NET type is assumed to be an </span><code class="inlineCode"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">nvarchar</span></code><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml"> type in the database.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml">int</span></code><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml"> .NET type is assumed to be an </span><code class="inlineCode"><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml">int</span></code><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml"> type in the database.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml">The primary key is assumed to be a property that is named </span><code class="inlineCode"><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></code><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml">ID</span></code><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.149.2" xmlns="http://www.w3.org/1999/xhtml">Or, when the entity model class is named </span><code class="inlineCode"><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml">, then the property can be named </span><code class="inlineCode"><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml">ProductId</span></code><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml">ProductID</span></code><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.155.2" xmlns="http://www.w3.org/1999/xhtml">If this property is of an integer type or the </span><code class="inlineCode"><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml">Guid</span></code><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml"> type, then it is also assumed to be an </span><code class="inlineCode"><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml">IDENTITY</span></code><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml"> column (a column type that automatically assigns a value when inserting).</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">: There are many other conventions that you should know, and you can even define your own, but that is beyond the scope of this book. </span><span class="koboSpan" id="kobo.161.2" xmlns="http://www.w3.org/1999/xhtml">You can read about</span><a id="_idIndexMarker231"/><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml"> them at the following link: </span><a href="https://learn.microsoft.com/en-us/ef/core/modeling/"><span class="url"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/ef/core/modeling/</span></span></a><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-134"><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml">Using EF Core annotation attributes to define the model</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml">Conventions often aren’t enough to completely</span><a id="_idIndexMarker232"/><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml"> map the classes to the database</span><a id="_idIndexMarker233"/><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml"> objects. </span><span class="koboSpan" id="kobo.168.2" xmlns="http://www.w3.org/1999/xhtml">For example, some databases like SQLite use dynamic column types so the tool has to guess about what property types its columns should map to, based on the current data values in that column.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml">A simple way of adding more smarts to your model is to apply annotation attributes, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.1</span></em><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table001-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml">Attribute</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml">[Required]</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml">Ensures the value is not null.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml">[StringLength(50)]</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml">Ensures the value is up to 50 characters in length.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">[RegularExpression(expression)]</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml">Ensures the value matches the specified regular expression.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml">[Column(TypeName = "money", Name = "UnitPrice")]</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml">Specifies the column type and column name used in the table.</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.1: Common EF Core annotation attributes</span></p>
<p class="normal"><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml">For example, in the database, the maximum length of a product name is 40, and the value cannot be null, as shown highlighted in the following partial DDL code, which defines how to create a table named </span><code class="inlineCode"><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml"> Products (
    ProductId       </span><span class="hljs-type"><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml">INTEGER</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml"> KEY,
    </span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml">ProductName     NVARCHAR (</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">40</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml">) </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml">
    SupplierId      "INT",
    ...
</span><span class="koboSpan" id="kobo.198.2" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml">In a </span><code class="inlineCode"><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml"> class, we could apply attributes to specify this, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">Required</span></span><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml">] 
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">StringLength(40)</span></span><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml"> ProductName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">: If you have nullability checks enabled, then you do not need to decorate a non-nullable reference type with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml">[Required]</span></code><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml"> attribute as shown above. </span><span class="koboSpan" id="kobo.217.2" xmlns="http://www.w3.org/1999/xhtml">This is because the C# nullability will flow to the EF Core model. </span><span class="koboSpan" id="kobo.217.3" xmlns="http://www.w3.org/1999/xhtml">A </span><code class="inlineCode"><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml"> property</span><a id="_idIndexMarker234"/><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml"> will be required; a </span><code class="inlineCode"><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml">string?</span></code><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml"> property will be optional, in other words, nullable. </span><span class="koboSpan" id="kobo.222.2" xmlns="http://www.w3.org/1999/xhtml">You can read more about this at the following link: </span><a href="https://learn.microsoft.com/en-us/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwith-nrt#required-and-optional-properties"><span class="url"><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwith-nrt#required-and-optional-properties</span></span></a><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml">When there isn’t an obvious map between .NET types and database types, an attribute can be used.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml">For example, in the database, the column</span><a id="_idIndexMarker235"/><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml"> type of </span><code class="inlineCode"><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml">UnitPrice</span></code><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml"> for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml"> table</span><a id="_idIndexMarker236"/><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml">money</span></code><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.234.2" xmlns="http://www.w3.org/1999/xhtml">.NET does not have a </span><code class="inlineCode"><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">money</span></code><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml"> type, so it should use </span><code class="inlineCode"><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></code><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml"> instead, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml">Column(TypeName = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml">"money"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.246.2" xmlns="http://www.w3.org/1999/xhtml">UnitPrice { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml">Another example is for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">Categories</span></code><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml"> table, as shown highlighted in the following DDL code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml"> Categories (
    CategoryId   </span><span class="hljs-type"><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">INTEGER</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml"> KEY,
    CategoryName NVARCHAR (</span><span class="hljs-number"><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">15</span></span><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml">,
    </span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">Description  "NTEXT",</span></strong></span><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">
    Picture      "IMAGE"
);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></code><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml"> column can be longer than the maximum 8,000 characters that can be stored in an </span><code class="inlineCode"><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">nvarchar</span></code><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml"> variable, so it needs</span><a id="_idIndexMarker237"/><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml"> to map to </span><code class="inlineCode"><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml">ntext</span></code><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml"> instead, as shown</span><a id="_idIndexMarker238"/><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml"> in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">Column(TypeName = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml">"ntext"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.283.2" xmlns="http://www.w3.org/1999/xhtml">Description { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span></code></pre>
<h2 class="heading-2" id="_idParaDest-135"><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml">Using the EF Core Fluent API to define the model</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml">The last way that the model</span><a id="_idIndexMarker239"/><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml"> can be defined is by using the Fluent API. </span><span class="koboSpan" id="kobo.290.2" xmlns="http://www.w3.org/1999/xhtml">This API</span><a id="_idIndexMarker240"/><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml"> can be used instead of attributes, as well as being used in addition to them. </span><span class="koboSpan" id="kobo.291.2" xmlns="http://www.w3.org/1999/xhtml">One reason you might need to do this is if the entity models need to be defined in a .NET Standard 2.0 class library so they can be used on legacy platforms. </span><span class="koboSpan" id="kobo.291.3" xmlns="http://www.w3.org/1999/xhtml">In this case, the class library should not include references to data annotation libraries. </span><span class="koboSpan" id="kobo.291.4" xmlns="http://www.w3.org/1999/xhtml">Another reason is that your team might have a policy to separate raw data models from validation rules. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">For example, to define the </span><code class="inlineCode"><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml">ProductName</span></code><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml"> property, instead of decorating the property with two attributes, an equivalent Fluent API statement could be written in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></code><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml"> method of the database context class, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.Entity&lt;Product&gt;()
  .Property(product =&gt; product.ProductName)
  .IsRequired() </span><span class="hljs-comment"><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml">// only needed if you have disabled nullability checks</span></span><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">
  .HasMaxLength(</span><span class="hljs-number"><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml">40</span></span><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml">This keeps the entity model class simpler. </span><span class="koboSpan" id="kobo.302.2" xmlns="http://www.w3.org/1999/xhtml">You will see an example of this in the coding task below.</span></p>
<h2 class="heading-2" id="_idParaDest-136"><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml">Understanding data seeding with the Fluent API</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml">Another benefit of the Fluent API</span><a id="_idIndexMarker241"/><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml"> is to provide initial data to populate a database. </span><span class="koboSpan" id="kobo.305.2" xmlns="http://www.w3.org/1999/xhtml">EF Core</span><a id="_idIndexMarker242"/><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml"> automatically works out what insert, update, or delete operations must be executed.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">For example, if we wanted to make sure that a new database has at least one row in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml"> table, then we would call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml">HasData</span></code><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml"> method, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.Entity&lt;Product&gt;()
  .HasData(</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml"> Product
  {
    ProductId = </span><span class="hljs-number"><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml">,
    ProductName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml">,
    UnitPrice = </span><span class="hljs-number"><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">8.99</span></span><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml">M
  });
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">Calls to </span><code class="inlineCode"><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml">HasData</span></code><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml"> take effect either during a data migration executed by the </span><code class="inlineCode"><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml">dotnet ef database update</span></code><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml"> command or when you call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml">Database.EnsureCreated</span></code><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml">Our model will map to an existing</span><a id="_idIndexMarker243"/><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml"> database that is already populated with data, so we will not need</span><a id="_idIndexMarker244"/><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml"> to use this technique in our code.</span></p>
<h2 class="heading-2" id="_idParaDest-137"><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">Defining the Northwind database model</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml">A </span><code class="inlineCode"><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml"> class will be used to represent</span><a id="_idIndexMarker245"/><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml"> the database. </span><span class="koboSpan" id="kobo.335.2" xmlns="http://www.w3.org/1999/xhtml">To use EF Core, the class must inherit from </span><code class="inlineCode"><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></code><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.337.2" xmlns="http://www.w3.org/1999/xhtml">This class understands how to communicate with databases and dynamically generate SQL statements to query and manipulate data.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml">Your </span><code class="inlineCode"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></code><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml">-derived class should have an overridden method named </span><code class="inlineCode"><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">, which will set the database connection string.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml">Inside your </span><code class="inlineCode"><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></code><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml">-derived class, you must define at least one property of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml">DbSet&lt;T&gt;</span></code><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml"> type. </span><span class="koboSpan" id="kobo.347.2" xmlns="http://www.w3.org/1999/xhtml">These properties represent the tables. </span><span class="koboSpan" id="kobo.347.3" xmlns="http://www.w3.org/1999/xhtml">To tell EF Core what columns each table has, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml">DbSet&lt;T&gt;</span></code><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml"> properties use generics to specify a class that represents a row in the table. </span><span class="koboSpan" id="kobo.349.2" xmlns="http://www.w3.org/1999/xhtml">That entity model class has properties that represent its columns.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></code><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">-derived class can optionally have an overridden method named </span><code class="inlineCode"><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></code><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.354.2" xmlns="http://www.w3.org/1999/xhtml">This is where you can write Fluent API statements as an alternative to decorating your entity classes with attributes. </span><span class="koboSpan" id="kobo.354.3" xmlns="http://www.w3.org/1999/xhtml">This can enhance the clarity and maintainability of the model configuration because all of it could be in one place instead of scattered throughout your code base. </span><span class="koboSpan" id="kobo.354.4" xmlns="http://www.w3.org/1999/xhtml">You can also mix and match both techniques, but then you’d lose this primary benefit.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml">If you did not create the Northwind database, or if you deleted it, then you will need to create it now. </span><span class="koboSpan" id="kobo.355.2" xmlns="http://www.w3.org/1999/xhtml">Instructions are in </span><em class="chapterRef"><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 2, Managing Relational Data Using SQL Server</span></em><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">Let’s build the model for the Northwind database in a console app:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a console app project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.EFCore</span></code><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml">Enable native AOT publish</span></strong><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.EFCore</span></code><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml"> project, add package references to the EF Core data provider for SQL</span><a id="_idIndexMarker246"/><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml"> Server, and globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference
    Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.Design"</span></span><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml"> 
    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml">8.0.0"</span></span><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference
    Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.SqlServer"</span></span><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml"> 
    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;Using Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml">"System.Console"</span></span><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml"> Static=</span><span class="hljs-string"><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">"true"</span></span><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml">Build the project to restore packages.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml">The next step assumes a database connection string for a local SQL Server authenticated with Windows integrated security. </span><span class="koboSpan" id="kobo.396.2" xmlns="http://www.w3.org/1999/xhtml">Modify it for Azure SQL Database or Azure SQL Edge with a user ID and password if necessary.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml">At a command prompt or terminal in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.EFCore</span></code><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml"> folder, generate a model for all the tables in a new folder named </span><code class="inlineCode"><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml">dotnet ef dbcontext scaffold "Data Source=.;Initial Catalog=Northwind;Integrated Security=true;TrustServerCertificate=true;" Microsoft.EntityFrameworkCore.SqlServer --output-dir Models --namespace Northwind.Models --data-annotations --context NorthwindDb
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml">Command-line tools need to have their commands entered all in one line. </span><span class="koboSpan" id="kobo.403.2" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml"> tool often needs long commands to be entered. </span><span class="koboSpan" id="kobo.405.2" xmlns="http://www.w3.org/1999/xhtml">I recommend that you type from the print book or copy and paste long commands like this from the eBook into a plain text editor like Notepad. </span><span class="koboSpan" id="kobo.405.3" xmlns="http://www.w3.org/1999/xhtml">Then make sure that the whole command is properly formatted as a single line with correct spacing before you then copy and paste it to the command line. </span><span class="koboSpan" id="kobo.405.4" xmlns="http://www.w3.org/1999/xhtml">Copying and pasting directly from the eBook is likely to include newline characters, missing spaces, and so on that break the command. </span><span class="koboSpan" id="kobo.405.5" xmlns="http://www.w3.org/1999/xhtml">All command lines that must be entered from this book are available to copy from as a single line at the following link: </span><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/command-lines.md"><span class="url"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/command-lines.md</span></span></a><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">Note the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml">The command</span><a id="_idIndexMarker247"/><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml"> action: </span><code class="inlineCode"><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">dbcontext scaffold</span></code><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml">The connection string: This will be different depending on whether you are connecting to a local SQL Server (with or without an instance name) or Azure SQL Database.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml">The database provider: </span><code class="inlineCode"><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.EntityFrameworkCore.SqlServer</span></code><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml">The output folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">--output-dir Models</span></code><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml">The namespace: </span><code class="inlineCode"><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">--namespace Northwind.Models</span></code><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">The use of data annotations as well as the Fluent API: </span><code class="inlineCode"><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml">--data-annotations</span></code><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">Renaming the context from </span><code class="inlineCode"><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">[database_name]Context</span></code><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml">: </span><code class="inlineCode"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">--context NorthwindDb</span></code><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="5"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">Note the build messages and warnings, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml">Build started…
Build succeeded.
</span><span class="koboSpan" id="kobo.432.2" xmlns="http://www.w3.org/1999/xhtml">To protect potentially sensitive information in your connection string, you should move it out of source code. </span><span class="koboSpan" id="kobo.432.3" xmlns="http://www.w3.org/1999/xhtml">You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. </span><span class="koboSpan" id="kobo.432.4" xmlns="http://www.w3.org/1999/xhtml">For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">: Do not commit your project to Git until you have fixed this warning. </span><span class="koboSpan" id="kobo.434.2" xmlns="http://www.w3.org/1999/xhtml">If you used a username and password to connect to your SQL Server database, then that information is now in your source code! </span><span class="koboSpan" id="kobo.434.3" xmlns="http://www.w3.org/1999/xhtml">We will fix this by replacing the fixed connection string with a dynamically generated one that reads the sensitive values from environment variables.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml">Open the </span><code class="inlineCode"><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml"> folder</span><a id="_idIndexMarker248"/><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml"> and note the 28 class files that were automatically generated. </span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">Open </span><code class="inlineCode"><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml">Category.cs</span></code><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml"> and note that it represents a row in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">Categories</span></code><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml"> table, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml"> System;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml"> System.Collections.Generic;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml"> System.ComponentModel.DataAnnotations;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml"> System.ComponentModel.DataAnnotations.Schema;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml">;
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">Index(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml">"CategoryName"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml">, Name = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml">"CategoryName"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml">Category</span></span><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">
{
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml">Key</span></span><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml">; }
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">StringLength(15)</span></span><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml"> CategoryName { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml">!;
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml">Column(TypeName = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">"ntext"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.494.2" xmlns="http://www.w3.org/1999/xhtml">Description { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml">; }
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">Column(TypeName = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml">"image"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></span><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">[]? </span><span class="koboSpan" id="kobo.505.2" xmlns="http://www.w3.org/1999/xhtml">Picture { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml">; }
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">InverseProperty(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">"Category"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">virtual</span></span><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml"> ICollection&lt;Product&gt; Products { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml">; } 
    = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml"> List&lt;Product&gt;();
}
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">Note the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">It decorates the entity class with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml">[Index]</span></code><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml"> attribute that was introduced in EF Core 5. </span><span class="koboSpan" id="kobo.526.2" xmlns="http://www.w3.org/1999/xhtml">This indicates properties that should have an index for its column in the table. </span><span class="koboSpan" id="kobo.526.3" xmlns="http://www.w3.org/1999/xhtml">In earlier versions, only the Fluent API was supported for defining indexes. </span><span class="koboSpan" id="kobo.526.4" xmlns="http://www.w3.org/1999/xhtml">Since we are working with an existing database, this attribute is not needed. </span><span class="koboSpan" id="kobo.526.5" xmlns="http://www.w3.org/1999/xhtml">But if we want to recreate a new empty Northwind database from our code, then this information will be used to create indexes in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">Categories</span></code><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml"> table.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml">The table name in the</span><a id="_idIndexMarker249"/><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml"> database is </span><code class="inlineCode"><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml">Categories</span></code><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml"> but the </span><code class="inlineCode"><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml"> tool used the </span><strong class="keyWord"><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml">Humanizer</span></strong><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml"> third-party library to automatically singularize the class name to </span><code class="inlineCode"><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml">Category</span></code><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml">, which is a more natural name when creating a single entity.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml">The entity class is declared using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></code><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml"> keyword so that you can create a matching </span><code class="inlineCode"><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></code><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml"> class for adding additional code. </span><span class="koboSpan" id="kobo.543.2" xmlns="http://www.w3.org/1999/xhtml">This allows you to rerun the tool and regenerate the entity class without losing that extra code you wrote in your </span><code class="inlineCode"><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></code><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml"> class.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">CategoryId</span></code><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml"> property is decorated with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">[Key]</span></code><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml"> attribute to explicitly indicate that it is the primary key for this entity although its name follows the primary key convention too.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml"> property uses the </span><code class="inlineCode"><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml">[InverseProperty]</span></code><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml"> attribute to define the foreign key relationship to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">Category</span></code><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml"> property on the </span><code class="inlineCode"><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml"> entity class.</span></li>
</ul></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="8"><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">Open </span><code class="inlineCode"><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml">ProductsAboveAveragePrice.cs</span></code><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml"> and note</span><a id="_idIndexMarker250"/><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml"> that it represents a row returned by a database view rather than a table, so it is decorated with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">[Keyless]</span></code><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml"> attribute.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">Open </span><code class="inlineCode"><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb.cs</span></code><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml"> and review the class, as shown in the following edited-for-space code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml"> System;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml"> System.Collections.Generic;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></span><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></span><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml">
  {
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml">DbContextOptions&lt;NorthwindDb&gt; options</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml">    : </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">base</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml">options</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml">
  {
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">virtual</span></span><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;AlphabeticalListOfProduct&gt; 
    AlphabeticalListOfProducts { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">virtual</span></span><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;Category&gt; Categories { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml">; }
...
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml">virtual</span></span><span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;Territory&gt; Territories { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">    DbContextOptionsBuilder optionsBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">#warning To protect potentially sensitive information </span></span><span class="hljs-keyword"><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml"> your connection </span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml">, you should move it </span></span><span class="hljs-keyword"><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml">out</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml"> of source code. </span><span class="koboSpan" id="kobo.634.2" xmlns="http://www.w3.org/1999/xhtml">You can avoid scaffolding the connection </span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml">by</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml"> the Name</span></span><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml">= syntax to read it </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">from</span></span><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml"> configuration - see https:</span><span class="hljs-comment"><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml">//go.microsoft.com/fwlink/?linkid=2131148. </span><span class="koboSpan" id="kobo.642.2" xmlns="http://www.w3.org/1999/xhtml">For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.</span></span><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml">
        =&gt; optionsBuilder.UseSqlServer(</span><span class="hljs-string"><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">"Data Source=.;Initial Catalog=Northwind;Integrated Security=true;TrustServerCertificate=true;"</span></span><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">ModelBuilder modelBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    modelBuilder.Entity&lt;AlphabeticalListOfProduct&gt;(entity =&gt;
    {
      entity.ToView(</span><span class="hljs-string"><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml">"Alphabetical list of products"</span></span><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">);
    });
...
    </span><span class="koboSpan" id="kobo.655.2" xmlns="http://www.w3.org/1999/xhtml">OnModelCreatingPartial(modelBuilder);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreatingPartial</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml">ModelBuilder modelBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml">Note the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></code><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml"> data context</span><a id="_idIndexMarker251"/><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml"> class is </span><code class="inlineCode"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></code><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml"> to allow you to extend it and regenerate it in the future. </span><span class="koboSpan" id="kobo.669.2" xmlns="http://www.w3.org/1999/xhtml">We used the name </span><code class="inlineCode"><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></code><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml"> because </span><code class="inlineCode"><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml"> is used for a namespace.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></code><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml"> has two constructors: a default parameter-less one and one that allows options to be passed in. </span><span class="koboSpan" id="kobo.675.2" xmlns="http://www.w3.org/1999/xhtml">This is useful in apps where you want to specify the connection string at runtime.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml">DbSet&lt;T&gt;</span></code><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml"> properties that represent tables like </span><code class="inlineCode"><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml">Categories</span></code><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml"> method, if options have not been specified in the constructor, then it defaults to using the connection string used during scaffolding. </span><span class="koboSpan" id="kobo.683.2" xmlns="http://www.w3.org/1999/xhtml">It has a compiler warning to remind you that you should not hardcode security information in this connection string.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></code><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml"> method, the Fluent API is used to configure the entity classes, and then a partial method named </span><code class="inlineCode"><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreatingPartial</span></code><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml"> is invoked. </span><span class="koboSpan" id="kobo.688.2" xmlns="http://www.w3.org/1999/xhtml">This allows you to implement that partial method in your own partial </span><code class="inlineCode"><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml"> class to add your own Fluent API configuration, which will not be lost if you regenerate the model classes.</span></li>
</ul> </li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="10"><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml">At the top of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb.cs</span></code><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml"> file, import the namespace for working with ADO.NET types, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">// To use SqlConnectionStringBuilder.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml">Modify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml"> method to dynamically set the connection string and set any sensitive parameters using environment variables, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml">  DbContextOptionsBuilder optionsBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml"> (!optionsBuilder.IsConfigured)
  {
    SqlConnectionStringBuilder builder = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">();
    builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml">// "ServerName\InstanceName" e.g. </span><span class="koboSpan" id="kobo.714.2" xmlns="http://www.w3.org/1999/xhtml">@".\sqlexpress"</span></span><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml">
    builder.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">;
    builder.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml">;
    builder.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml">;
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml">// Because we want to fail faster. </span><span class="koboSpan" id="kobo.722.2" xmlns="http://www.w3.org/1999/xhtml">Default is 15 seconds.</span></span><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml">
    builder.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml">;
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml">// If using Windows Integrated authentication.</span></span><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml">
    builder.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">;
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml">// If using SQL Server authentication.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">// builder.UserID = Environment.GetEnvironmentVariable("MY_SQL_USR");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml">// builder.Password = Environment.GetEnvironmentVariable("MY_SQL_PWD");</span></span><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml">
    optionsBuilder.UseSqlServer(builder.ConnectionString);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">Close the automatically</span><a id="_idIndexMarker252"/><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml"> generated class files.</span></li>
</ol>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">: If you have not worked with environment variables before, then you can learn about them from an online section available at the following link: </span><a href="https://github.com/markjprice/cs12dotnet8/blob/main/docs/ch09-environment-variables.md"><span class="url"><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/cs12dotnet8/blob/main/docs/ch09-environment-variables.md</span></span></a><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-138"><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml">Querying the Northwind model</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">Now we can query</span><a id="_idIndexMarker253"/><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml"> the model:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements. </span><span class="koboSpan" id="kobo.745.2" xmlns="http://www.w3.org/1999/xhtml">Add statements to create an instance of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindDb</span></code><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml"> data context class and use it to query the products table for those that cost more than a given price, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">// To use SqlConnectionStringBuilder.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml">// ToQueryString, GetConnectionString</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">// To use NorthwindDb.</span></span><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">
SqlConnectionStringBuilder builder = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">();
builder.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.Encrypt = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml">;
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">"Connect to:"</span></span><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml">"  1 - SQL Server on local machine"</span></span><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml">"  2 - Azure SQL Database"</span></span><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml">"  3 - Azure SQL Edge"</span></span><span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine();
Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml">"Press a key: "</span></span><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml">);
ConsoleKey key = ReadKey().Key;
WriteLine(); WriteLine();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml"> (key </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.D1 </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.NumPad1)
{
  builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">// Local SQL Server</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">// @".\apps-services-book"; // Local SQL Server with an instance name</span></span><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml"> (key </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.D2 </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.NumPad2)
{
  builder.DataSource = </span><span class="hljs-comment"><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">// Azure SQL Database</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml">"tcp:apps-services-book.database.windows.net,1433"</span></span><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml"> (key </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.D3 </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.NumPad3)
{
  builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">"tcp:127.0.0.1,1433"</span></span><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">// Azure SQL Edge</span></span><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml">
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml">"No data source selected."</span></span><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml">;
}
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml">"Authenticate using:"</span></span><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml">"  1 - Windows Integrated Security"</span></span><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml">"  2 - SQL Login, for example, sa"</span></span><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine();
Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml">"Press a key: "</span></span><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml">);
key = ReadKey().Key;
WriteLine(); WriteLine();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml"> (key </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.D1 </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.NumPad1)
{
  builder.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml"> (key </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.D2 </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml">or</span></span><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml"> ConsoleKey.NumPad2)
{
  Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">"Enter your SQL Server user ID: "</span></span><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.844.2" xmlns="http://www.w3.org/1999/xhtml">userId = ReadLine();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml">.IsNullOrWhiteSpace(userId))
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml">"User ID cannot be empty or null."</span></span><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml">;
  }
  builder.UserID = userId;
  Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">"Enter your SQL Server password: "</span></span><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.856.2" xmlns="http://www.w3.org/1999/xhtml">password = ReadLine();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml">.IsNullOrWhiteSpace(password))
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">"Password cannot be empty or null."</span></span><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml">);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml">;
  }
  builder.Password = password;
  builder.PersistSecurityInfo = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">
{
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml">"No authentication selected."</span></span><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml">;
}
DbContextOptionsBuilder&lt;NorthwindDb&gt; options = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml">();
options.UseSqlServer(builder.ConnectionString);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindDb db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">(options.Options))
{
  Write(</span><span class="hljs-string"><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml">"Enter a unit price: "</span></span><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.882.2" xmlns="http://www.w3.org/1999/xhtml">priceText = ReadLine();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml"> (!</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml">.TryParse(priceText, </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml">out</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">decimal</span></span><span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml"> price))
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml">"You must enter a valid unit price."</span></span><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml">;
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml">// We have to use var because we are projecting into an anonymous type.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml"> products = db.Products
    .Where(p =&gt; p.UnitPrice &gt; price)
    .Select(p =&gt; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml"> { p.ProductId, p.ProductName, p.UnitPrice });
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml">"----------------------------------------------------------"</span></span><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml">"| {0,5} | {1,-35} | {2,8} |"</span></span><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">"Id"</span></span><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml">"Name"</span></span><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-string"><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">"Price"</span></span><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">"----------------------------------------------------------"</span></span><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml"> p </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml"> products)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">"| {0,5} | {1,-35} | {2,8:C} |"</span></span><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">,
      p.ProductId, p.ProductName, p.UnitPrice);
  }
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml">"----------------------------------------------------------"</span></span><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(products.ToQueryString());
  WriteLine();
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml">$"Provider:   </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml">{db.Database.ProviderName}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml">$"Connection: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml">{db.Database.GetConnectionString()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml">Run the console app and </span><a id="_idIndexMarker254"/><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml">note the results, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">Enter a unit price: --
|    Id | Name                                |    Price--
|     9 | Mishi Kobe Niku                     |   £97.00 |
|    18 | Carnarvon Tigers                    |   £62.50 |
|    20 | Sir Rodney's Marmalade              |   £81.00 |
|    29 | Thüringer Rostbratwurst             |  £123.79 |
|    38 | Côte de Blaye                       |  £263.50--
DECLARE @__price_0 decimal(2) = 60.0;
SELECT [p].[ProductId], [p].[ProductName], [p].[UnitPrice]
FROM [Products] AS [p]
WHERE [p].[UnitPrice] &gt; @__price_0
Provider:   Microsoft.EntityFrameworkCore.SqlServer
Connection: Data Source=tcp:apps-services-book.database.windows.net,1433;Initial Catalog=Northwind;Persist Security Info=False;User ID=&lt;censored&gt;;Password=&lt;censored&gt;;Multiple Active Result Sets=False;Encrypt=True;Trust Server Certificate=False;Connection Timeout=10;
</span></code></pre>
</li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml">The output of your connection string will be different.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-139"><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml">Controlling the tracking of entities</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">We need to start</span><a id="_idIndexMarker255"/><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml"> with the definition of entity </span><strong class="keyWord"><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml">identity resolution</span></strong><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.937.2" xmlns="http://www.w3.org/1999/xhtml">EF Core resolves each entity instance by reading its unique</span><a id="_idIndexMarker256"/><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml"> primary key value. </span><span class="koboSpan" id="kobo.938.2" xmlns="http://www.w3.org/1999/xhtml">This ensures no ambiguities about the identities of entities or relationships between them.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml">EF Core can only track entities with keys because it uses a key to uniquely identify the entity in the database. </span><span class="koboSpan" id="kobo.939.2" xmlns="http://www.w3.org/1999/xhtml">Keyless entities, like those returned by views, are never tracked.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml">By default, EF Core assumes that you want to track entities in local memory so that if you make changes, like adding a new entity, modifying an existing entity, or removing an existing entity, then you can call </span><code class="inlineCode"><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml">SaveChanges</span></code><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml"> and all those changes will be made in the underlying data store.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml">If you execute a query within a data context, like getting all customers in Germany, and then execute another query within the same data context, like getting all customers whose name starts with A, if one of those customer entities already exists in the context, it will be identified and not replaced or loaded twice. </span><span class="koboSpan" id="kobo.943.2" xmlns="http://www.w3.org/1999/xhtml">However, if the telephone number of that customer is updated in the database between the executions of the two queries, then the entity being tracked in the data context is not refreshed with the new telephone number.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">If you do not need to track</span><a id="_idIndexMarker257"/><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml"> these changes, or you want to load new instances of an entity for every query execution with the latest data values, even if the entity is already loaded, then you can disable tracking. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">To disable tracking for an individual query, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">AsNoTracking</span></code><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml"> method as part of the query, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml"> products = db.Products
  .AsNoTracking()
  .Where(p =&gt; p.UnitPrice &gt; price)
  .Select(p =&gt; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml"> { p.ProductId, p.ProductName, p.UnitPrice });
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml">To disable tracking by default for the data context, set the change tracker’s query tracking behavior to </span><code class="inlineCode"><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml">NoTracking</span></code><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml">db.ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml">To disable tracking for an individual query, but retain identity resolution, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml">AsNoTrackingWithIdentityResolution</span></code><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml"> method as part of the query, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml"> products = db.Products
  .AsNoTrackingWithIdentityResolution()
  .Where(p =&gt; p.UnitPrice &gt; price)
  .Select(p =&gt; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml"> { p.ProductId, p.ProductName, p.UnitPrice });
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml">To disable tracking but perform identity resolution by default for the data context, set the change tracker’s query-tracking behavior to </span><code class="inlineCode"><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">NoTrackingWithIdentityResolution</span></code><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml">db.ChangeTracker.QueryTrackingBehavior = 
  QueryTrackingBehavior.NoTrackingWithIdentityResolution;
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml">To set defaults for all new instances </span><a id="_idIndexMarker258"/><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml">of a data context, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml"> method, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">UseQueryTrackingBehavior</span></code><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml"> method, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml">DbContextOptionsBuilder optionsBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml">
{
  optionsBuilder.UseSqlServer(connectionString)
    .UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);
}
</span></code></pre>
<h3 class="heading-3" id="_idParaDest-140"><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml">A scenario using default tracking</span></h3>
<p class="normal"><span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml">The default is </span><strong class="keyWord"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml">change tracking</span></strong><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml"> with identity resolution. </span><span class="koboSpan" id="kobo.985.2" xmlns="http://www.w3.org/1999/xhtml">Once an entity</span><a id="_idIndexMarker259"/><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml"> is loaded into the data context, underlying changes are not reflected and only one copy exists. </span><span class="koboSpan" id="kobo.986.2" xmlns="http://www.w3.org/1999/xhtml">Entities have local changes tracked and a call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml">SaveChanges</span></code><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml"> updates the database, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.2</span></em><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table002-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml">Action</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">Entity in data context</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">Row in database</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in database</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers starting with A</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in entity</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml">Save changes</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.2: Default tracking scenario</span></p>
<h3 class="heading-3" id="_idParaDest-141"><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml">The same scenario using no tracking</span></h3>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml">No tracking</span></strong><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml"> and no identity resolution. </span><span class="koboSpan" id="kobo.1015.2" xmlns="http://www.w3.org/1999/xhtml">Every query loads</span><a id="_idIndexMarker260"/><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml"> another instance of a database row into the data context, including underlying changes, allowing duplicates and mixed out-of-date and updated data. </span><span class="koboSpan" id="kobo.1016.2" xmlns="http://www.w3.org/1999/xhtml">No local entity changes are tracked, so </span><code class="inlineCode"><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml">SaveChanges</span></code><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml"> does nothing, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.3</span></em><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table003-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml">Action</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml">Entities in data context</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml">Row in database</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in database</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers starting with A</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in entity</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml">Save changes</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.3: No tracking scenario</span></p>
<h3 class="heading-3" id="_idParaDest-142"><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml">The same scenario using no tracking with identity resolution</span></h3>
<p class="normal"><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml">No tracking with identity</span><a id="_idIndexMarker261"/><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml"> resolution. </span><span class="koboSpan" id="kobo.1052.2" xmlns="http://www.w3.org/1999/xhtml">Once an entity is loaded into the data context, underlying changes are not reflected and only one copy exists. </span><span class="koboSpan" id="kobo.1052.3" xmlns="http://www.w3.org/1999/xhtml">No local entity changes are tracked, so </span><code class="inlineCode"><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml">SaveChanges</span></code><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml"> does nothing, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.4</span></em><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table004-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml">Action</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml">Entities in data context</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml">Row in database</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in database</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers starting with A</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml">Query for customers in Germany</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-4567</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">Change telephone in entity</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml">Save changes</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-1928</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml">Alfred’s Futterkiste, 123-9876</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.4: Identity resolution scenario</span></p>
<h3 class="heading-3" id="_idParaDest-143"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml">Summary of tracking</span></h3>
<p class="normal"><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">Which should you choose? </span><span class="koboSpan" id="kobo.1080.2" xmlns="http://www.w3.org/1999/xhtml">Of course, it depends on your specific scenario.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml">You will sometimes read blogs</span><a id="_idIndexMarker262"/><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml"> that excitedly tell you that you can dramatically improve your EF Core queries by calling </span><code class="inlineCode"><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml">AsNoTracking</span></code><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1084.2" xmlns="http://www.w3.org/1999/xhtml">But if you run a query that returns thousands of entities and then run the same query again within the same data context, you now have thousands of duplicates! </span><span class="koboSpan" id="kobo.1084.3" xmlns="http://www.w3.org/1999/xhtml">This wastes memory and impacts performance.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml">Understand how the three tracking choices work and select the best for your data context or individual queries. </span><span class="koboSpan" id="kobo.1085.2" xmlns="http://www.w3.org/1999/xhtml">In the next topic, you will learn how to map inheritance hierarchies.</span></p>
<h1 class="heading-1" id="_idParaDest-144"><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">Mapping inheritance hierarchies with EF Core</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml">Imagine that you have an inheritance hierarchy</span><a id="_idIndexMarker263"/><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml"> for some C# classes to store information</span><a id="_idIndexMarker264"/><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml"> about students and employees, both of which are types of people. </span><span class="koboSpan" id="kobo.1089.2" xmlns="http://www.w3.org/1999/xhtml">All people have a name and an ID to uniquely identify them, students have a subject they are studying, and employees have a hire date, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml">abstract</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml"> Id { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1104.2" xmlns="http://www.w3.org/1999/xhtml">Name { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></span><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1117.2" xmlns="http://www.w3.org/1999/xhtml">Subject { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1120.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1121.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1122.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1123.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1124.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></span><span class="koboSpan" id="kobo.1125.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.1126.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1127.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1128.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1129.1" xmlns="http://www.w3.org/1999/xhtml"> DateTime HireDate { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1130.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1131.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1132.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1133.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1134.1" xmlns="http://www.w3.org/1999/xhtml">By default, EF Core will map these to a single table using the </span><strong class="keyWord"><span class="koboSpan" id="kobo.1135.1" xmlns="http://www.w3.org/1999/xhtml">table-per-hierarchy </span></strong><span class="koboSpan" id="kobo.1136.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.1137.1" xmlns="http://www.w3.org/1999/xhtml">TPH</span></strong><span class="koboSpan" id="kobo.1138.1" xmlns="http://www.w3.org/1999/xhtml">) mapping strategy. </span><span class="koboSpan" id="kobo.1138.2" xmlns="http://www.w3.org/1999/xhtml">EF Core 5 introduced support for the </span><strong class="keyWord"><span class="koboSpan" id="kobo.1139.1" xmlns="http://www.w3.org/1999/xhtml">table-per-type </span></strong><span class="koboSpan" id="kobo.1140.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.1141.1" xmlns="http://www.w3.org/1999/xhtml">TPT</span></strong><span class="koboSpan" id="kobo.1142.1" xmlns="http://www.w3.org/1999/xhtml">) mapping strategy. </span><span class="koboSpan" id="kobo.1142.2" xmlns="http://www.w3.org/1999/xhtml">EF Core 7 introduced support for the </span><strong class="keyWord"><span class="koboSpan" id="kobo.1143.1" xmlns="http://www.w3.org/1999/xhtml">table-per-concrete-type </span></strong><span class="koboSpan" id="kobo.1144.1" xmlns="http://www.w3.org/1999/xhtml">(</span><strong class="keyWord"><span class="koboSpan" id="kobo.1145.1" xmlns="http://www.w3.org/1999/xhtml">TPC</span></strong><span class="koboSpan" id="kobo.1146.1" xmlns="http://www.w3.org/1999/xhtml">) mapping strategy. </span><span class="koboSpan" id="kobo.1146.2" xmlns="http://www.w3.org/1999/xhtml">Let’s explore</span><a id="_idIndexMarker265"/><span class="koboSpan" id="kobo.1147.1" xmlns="http://www.w3.org/1999/xhtml"> the differences between</span><a id="_idIndexMarker266"/><span class="koboSpan" id="kobo.1148.1" xmlns="http://www.w3.org/1999/xhtml"> these mapping strategies.</span></p>
<h2 class="heading-2" id="_idParaDest-145"><span class="koboSpan" id="kobo.1149.1" xmlns="http://www.w3.org/1999/xhtml">Table-per-hierarchy (TPH) mapping strategy</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1150.1" xmlns="http://www.w3.org/1999/xhtml">For the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1151.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></code><span class="koboSpan" id="kobo.1152.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1153.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></code><span class="koboSpan" id="kobo.1154.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1155.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></code><span class="koboSpan" id="kobo.1156.1" xmlns="http://www.w3.org/1999/xhtml"> hierarchy, TPH will use a single table structure with a discriminator column</span><a id="_idIndexMarker267"/><span class="koboSpan" id="kobo.1157.1" xmlns="http://www.w3.org/1999/xhtml"> to indicate which type of person, a student or employee, the row is, with nullable columns for extra values that only apply to some of the types, as shown highlighted in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1158.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1159.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1160.1" xmlns="http://www.w3.org/1999/xhtml"> [People] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1161.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1162.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1163.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1164.1" xmlns="http://www.w3.org/1999/xhtml">IDENTITY</span></span><span class="koboSpan" id="kobo.1165.1" xmlns="http://www.w3.org/1999/xhtml">,
  [Name] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1166.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1167.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1168.1" xmlns="http://www.w3.org/1999/xhtml">,
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1169.1" xmlns="http://www.w3.org/1999/xhtml">  [Discriminator] nvarchar(max) </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1170.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1171.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1172.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1173.1" xmlns="http://www.w3.org/1999/xhtml">  [Subject] nvarchar(max) </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1174.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1175.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1176.1" xmlns="http://www.w3.org/1999/xhtml">  [HireDate] nvarchar(max) </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1177.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1178.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1179.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1180.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1181.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1182.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1183.1" xmlns="http://www.w3.org/1999/xhtml">Some data in the table might look like </span><em class="italic"><span class="koboSpan" id="kobo.1184.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.5</span></em><span class="koboSpan" id="kobo.1185.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table005-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1186.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1187.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1188.1" xmlns="http://www.w3.org/1999/xhtml">Discriminator</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1189.1" xmlns="http://www.w3.org/1999/xhtml">Subject</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1190.1" xmlns="http://www.w3.org/1999/xhtml">HireDate</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1191.1" xmlns="http://www.w3.org/1999/xhtml">1</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1192.1" xmlns="http://www.w3.org/1999/xhtml">Roman Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1193.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1194.1" xmlns="http://www.w3.org/1999/xhtml">History</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1195.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1196.1" xmlns="http://www.w3.org/1999/xhtml">2</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1197.1" xmlns="http://www.w3.org/1999/xhtml">Kendall Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1198.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1199.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1200.1" xmlns="http://www.w3.org/1999/xhtml">02/04/2014</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1201.1" xmlns="http://www.w3.org/1999/xhtml">3</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1202.1" xmlns="http://www.w3.org/1999/xhtml">Siobhan Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1203.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1204.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1205.1" xmlns="http://www.w3.org/1999/xhtml">12/09/2020</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1206.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.5: Sample data in the People table</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1207.1" xmlns="http://www.w3.org/1999/xhtml">TPH requires the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1208.1" xmlns="http://www.w3.org/1999/xhtml">Discriminator</span></code><span class="koboSpan" id="kobo.1209.1" xmlns="http://www.w3.org/1999/xhtml"> column to store the class name of the type for each row. </span><span class="koboSpan" id="kobo.1209.2" xmlns="http://www.w3.org/1999/xhtml">TPH requires the columns for properties of derived types to be nullable, like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1210.1" xmlns="http://www.w3.org/1999/xhtml">Subject</span></code><span class="koboSpan" id="kobo.1211.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1212.1" xmlns="http://www.w3.org/1999/xhtml">HireDate</span></code><span class="koboSpan" id="kobo.1213.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1213.2" xmlns="http://www.w3.org/1999/xhtml">This will cause an issue if those properties are required (non-null) at the class level. </span><span class="koboSpan" id="kobo.1213.3" xmlns="http://www.w3.org/1999/xhtml">EF Core does not handle this by default.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1214.1" xmlns="http://www.w3.org/1999/xhtml">The main benefits of the TPH mapping</span><a id="_idIndexMarker268"/><span class="koboSpan" id="kobo.1215.1" xmlns="http://www.w3.org/1999/xhtml"> strategy are simplicity and performance, which is why it is used by default.</span></p>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1216.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1217.1" xmlns="http://www.w3.org/1999/xhtml">: If the discriminator column has many different values, then you can improve performance even more by defining an index on the discriminator. </span><span class="koboSpan" id="kobo.1217.2" xmlns="http://www.w3.org/1999/xhtml">But if there are only a few different values, an index may make overall performance worse because it affects updating time. </span><span class="koboSpan" id="kobo.1217.3" xmlns="http://www.w3.org/1999/xhtml">In this case, there are only two potential values, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1218.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></code><span class="koboSpan" id="kobo.1219.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1220.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></code><span class="koboSpan" id="kobo.1221.1" xmlns="http://www.w3.org/1999/xhtml">, so in a table with 100,000 rows, an index would make little difference.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-146"><span class="koboSpan" id="kobo.1222.1" xmlns="http://www.w3.org/1999/xhtml">Table-per-type (TPT) mapping strategy</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1223.1" xmlns="http://www.w3.org/1999/xhtml">For the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1224.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></code><span class="koboSpan" id="kobo.1225.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1226.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></code><span class="koboSpan" id="kobo.1227.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1228.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></code><span class="koboSpan" id="kobo.1229.1" xmlns="http://www.w3.org/1999/xhtml"> hierarchy, TPT will use</span><a id="_idIndexMarker269"/><span class="koboSpan" id="kobo.1230.1" xmlns="http://www.w3.org/1999/xhtml"> a table for every type, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1231.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1232.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1233.1" xmlns="http://www.w3.org/1999/xhtml"> [People] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1234.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1235.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1236.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1237.1" xmlns="http://www.w3.org/1999/xhtml">IDENTITY</span></span><span class="koboSpan" id="kobo.1238.1" xmlns="http://www.w3.org/1999/xhtml">,
  [Name] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1239.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1240.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1241.1" xmlns="http://www.w3.org/1999/xhtml">,
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1242.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1243.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1244.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1245.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1246.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1247.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1248.1" xmlns="http://www.w3.org/1999/xhtml"> [Students] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1249.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1250.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1251.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1252.1" xmlns="http://www.w3.org/1999/xhtml">,
  [Subject] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1253.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1254.1" xmlns="http://www.w3.org/1999/xhtml">,
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1255.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1256.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_Students] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1257.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1258.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1259.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1260.1" xmlns="http://www.w3.org/1999/xhtml"> [FK_Students_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1261.1" xmlns="http://www.w3.org/1999/xhtml">FOREIGN</span></span><span class="koboSpan" id="kobo.1262.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id]) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1263.1" xmlns="http://www.w3.org/1999/xhtml">REFERENCES</span></span><span class="koboSpan" id="kobo.1264.1" xmlns="http://www.w3.org/1999/xhtml"> [People] ([Id])
);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1265.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1266.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1267.1" xmlns="http://www.w3.org/1999/xhtml"> [Employees] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1268.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1269.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1270.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1271.1" xmlns="http://www.w3.org/1999/xhtml">,
  [HireDate] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1272.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1273.1" xmlns="http://www.w3.org/1999/xhtml">,
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1274.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1275.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_Employees] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1276.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1277.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1278.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1279.1" xmlns="http://www.w3.org/1999/xhtml"> [FK_Employees_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1280.1" xmlns="http://www.w3.org/1999/xhtml">FOREIGN</span></span><span class="koboSpan" id="kobo.1281.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id]) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1282.1" xmlns="http://www.w3.org/1999/xhtml">REFERENCES</span></span><span class="koboSpan" id="kobo.1283.1" xmlns="http://www.w3.org/1999/xhtml"> [People] ([Id])
);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1284.1" xmlns="http://www.w3.org/1999/xhtml">Some data in the tables might look like the following:</span></p>
<table class="table-container" id="table006-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1285.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1286.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1287.1" xmlns="http://www.w3.org/1999/xhtml">1</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1288.1" xmlns="http://www.w3.org/1999/xhtml">Roman Roy</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1289.1" xmlns="http://www.w3.org/1999/xhtml">2</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1290.1" xmlns="http://www.w3.org/1999/xhtml">Kendall Roy</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1291.1" xmlns="http://www.w3.org/1999/xhtml">3</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1292.1" xmlns="http://www.w3.org/1999/xhtml">Siobhan Roy</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1293.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.6: People table</span></p>
<table class="table-container" id="table007-2">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1294.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1295.1" xmlns="http://www.w3.org/1999/xhtml">Subject</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1296.1" xmlns="http://www.w3.org/1999/xhtml">1</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1297.1" xmlns="http://www.w3.org/1999/xhtml">History</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1298.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.7: Students table</span></p>
<table class="table-container" id="table008-1">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1299.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1300.1" xmlns="http://www.w3.org/1999/xhtml">HireDate</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1301.1" xmlns="http://www.w3.org/1999/xhtml">2</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1302.1" xmlns="http://www.w3.org/1999/xhtml">02/04/2014</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1303.1" xmlns="http://www.w3.org/1999/xhtml">3</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1304.1" xmlns="http://www.w3.org/1999/xhtml">12/09/2020</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1305.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.8: Employees table</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1306.1" xmlns="http://www.w3.org/1999/xhtml">The main benefit of the TPT mapping strategy is reduced storage due to the full normalization of the data. </span><span class="koboSpan" id="kobo.1306.2" xmlns="http://www.w3.org/1999/xhtml">The main disadvantage is that a single entity is spread over multiple tables and reconstructing it takes more effort and therefore reduces overall performance. </span><span class="koboSpan" id="kobo.1306.3" xmlns="http://www.w3.org/1999/xhtml">TPT is usually a poor</span><a id="_idIndexMarker270"/><span class="koboSpan" id="kobo.1307.1" xmlns="http://www.w3.org/1999/xhtml"> choice, so only use it if the table structure is already normalized and cannot be restructured.</span></p>
<h2 class="heading-2" id="_idParaDest-147"><span class="koboSpan" id="kobo.1308.1" xmlns="http://www.w3.org/1999/xhtml">Table-per-concrete-type (TPC) mapping strategy</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1309.1" xmlns="http://www.w3.org/1999/xhtml">For the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1310.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></code><span class="koboSpan" id="kobo.1311.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1312.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></code><span class="koboSpan" id="kobo.1313.1" xmlns="http://www.w3.org/1999/xhtml">-</span><code class="inlineCode"><span class="koboSpan" id="kobo.1314.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></code><span class="koboSpan" id="kobo.1315.1" xmlns="http://www.w3.org/1999/xhtml"> hierarchy, TPC</span><a id="_idIndexMarker271"/><span class="koboSpan" id="kobo.1316.1" xmlns="http://www.w3.org/1999/xhtml"> will use a table for each non-abstract type, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1317.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1318.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1319.1" xmlns="http://www.w3.org/1999/xhtml"> [Students] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1320.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1321.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1322.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1323.1" xmlns="http://www.w3.org/1999/xhtml">DEFAULT</span></span><span class="koboSpan" id="kobo.1324.1" xmlns="http://www.w3.org/1999/xhtml"> (NEXT </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1325.1" xmlns="http://www.w3.org/1999/xhtml">VALUE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1326.1" xmlns="http://www.w3.org/1999/xhtml">FOR</span></span><span class="koboSpan" id="kobo.1327.1" xmlns="http://www.w3.org/1999/xhtml"> [PersonIds]),
  [Name] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1328.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1329.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1330.1" xmlns="http://www.w3.org/1999/xhtml">,
  [Subject] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1331.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1332.1" xmlns="http://www.w3.org/1999/xhtml">,
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1333.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1334.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_Students] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1335.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1336.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1337.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1338.1" xmlns="http://www.w3.org/1999/xhtml"> [FK_Students_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1339.1" xmlns="http://www.w3.org/1999/xhtml">FOREIGN</span></span><span class="koboSpan" id="kobo.1340.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id]) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1341.1" xmlns="http://www.w3.org/1999/xhtml">REFERENCES</span></span><span class="koboSpan" id="kobo.1342.1" xmlns="http://www.w3.org/1999/xhtml"> [People] ([Id])
);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1343.1" xmlns="http://www.w3.org/1999/xhtml">CREATE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1344.1" xmlns="http://www.w3.org/1999/xhtml">TABLE</span></span><span class="koboSpan" id="kobo.1345.1" xmlns="http://www.w3.org/1999/xhtml"> [Employees] (
  [Id] </span><span class="hljs-type"><span class="koboSpan" id="kobo.1346.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1347.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1348.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1349.1" xmlns="http://www.w3.org/1999/xhtml">DEFAULT</span></span><span class="koboSpan" id="kobo.1350.1" xmlns="http://www.w3.org/1999/xhtml"> (NEXT </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1351.1" xmlns="http://www.w3.org/1999/xhtml">VALUE</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1352.1" xmlns="http://www.w3.org/1999/xhtml">FOR</span></span><span class="koboSpan" id="kobo.1353.1" xmlns="http://www.w3.org/1999/xhtml"> [PersonIds]),
  [Name] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1354.1" xmlns="http://www.w3.org/1999/xhtml">NOT</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1355.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1356.1" xmlns="http://www.w3.org/1999/xhtml">,
  [HireDate] nvarchar(max) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1357.1" xmlns="http://www.w3.org/1999/xhtml">NULL</span></span><span class="koboSpan" id="kobo.1358.1" xmlns="http://www.w3.org/1999/xhtml">,
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1359.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1360.1" xmlns="http://www.w3.org/1999/xhtml"> [PK_Employees] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1361.1" xmlns="http://www.w3.org/1999/xhtml">PRIMARY</span></span><span class="koboSpan" id="kobo.1362.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id])
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1363.1" xmlns="http://www.w3.org/1999/xhtml">CONSTRAINT</span></span><span class="koboSpan" id="kobo.1364.1" xmlns="http://www.w3.org/1999/xhtml"> [FK_Employees_People] </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1365.1" xmlns="http://www.w3.org/1999/xhtml">FOREIGN</span></span><span class="koboSpan" id="kobo.1366.1" xmlns="http://www.w3.org/1999/xhtml"> KEY ([Id]) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1367.1" xmlns="http://www.w3.org/1999/xhtml">REFERENCES</span></span><span class="koboSpan" id="kobo.1368.1" xmlns="http://www.w3.org/1999/xhtml"> [People] ([Id])
);
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1369.1" xmlns="http://www.w3.org/1999/xhtml">Since there is not a single table with an </span><code class="inlineCode"><span class="koboSpan" id="kobo.1370.1" xmlns="http://www.w3.org/1999/xhtml">IDENTITY</span></code><span class="koboSpan" id="kobo.1371.1" xmlns="http://www.w3.org/1999/xhtml"> column to assign </span><code class="inlineCode"><span class="koboSpan" id="kobo.1372.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></code><span class="koboSpan" id="kobo.1373.1" xmlns="http://www.w3.org/1999/xhtml"> values, we can use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1374.1" xmlns="http://www.w3.org/1999/xhtml">(NEXT VALUE FOR [PersonIds])</span></code><span class="koboSpan" id="kobo.1375.1" xmlns="http://www.w3.org/1999/xhtml"> command to define a sequence shared between the two tables so they do not assign the same </span><code class="inlineCode"><span class="koboSpan" id="kobo.1376.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></code><span class="koboSpan" id="kobo.1377.1" xmlns="http://www.w3.org/1999/xhtml"> values.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1378.1" xmlns="http://www.w3.org/1999/xhtml">Some data in the tables might look like the following:</span></p>
<table class="table-container" id="table009">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1379.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1380.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1381.1" xmlns="http://www.w3.org/1999/xhtml">Subject</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1382.1" xmlns="http://www.w3.org/1999/xhtml">1</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1383.1" xmlns="http://www.w3.org/1999/xhtml">Roman Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1384.1" xmlns="http://www.w3.org/1999/xhtml">History</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1385.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.9: Students table</span></p>
<table class="table-container" id="table010">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1386.1" xmlns="http://www.w3.org/1999/xhtml">Id</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1387.1" xmlns="http://www.w3.org/1999/xhtml">Name</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1388.1" xmlns="http://www.w3.org/1999/xhtml">HireDate</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1389.1" xmlns="http://www.w3.org/1999/xhtml">2</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1390.1" xmlns="http://www.w3.org/1999/xhtml">Kendall Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1391.1" xmlns="http://www.w3.org/1999/xhtml">02/04/2014</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1392.1" xmlns="http://www.w3.org/1999/xhtml">3</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1393.1" xmlns="http://www.w3.org/1999/xhtml">Siobhan Roy</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1394.1" xmlns="http://www.w3.org/1999/xhtml">12/09/2020</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1395.1" xmlns="http://www.w3.org/1999/xhtml">Table 3.10: Employees table</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1396.1" xmlns="http://www.w3.org/1999/xhtml">The main benefit of the TPC mapping strategy is performance because when querying a single concrete type, only one table is needed so we avoid expensive joins. </span><span class="koboSpan" id="kobo.1396.2" xmlns="http://www.w3.org/1999/xhtml">It works best for large inheritance hierarchies</span><a id="_idIndexMarker272"/><span class="koboSpan" id="kobo.1397.1" xmlns="http://www.w3.org/1999/xhtml"> of many concrete types, each with many type-specific properties.</span></p>
<h2 class="heading-2" id="_idParaDest-148"><span class="koboSpan" id="kobo.1398.1" xmlns="http://www.w3.org/1999/xhtml">Configuring inheritance hierarchy mapping strategies</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1399.1" xmlns="http://www.w3.org/1999/xhtml">First, all types must be included</span><a id="_idIndexMarker273"/><span class="koboSpan" id="kobo.1400.1" xmlns="http://www.w3.org/1999/xhtml"> in the model, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1401.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1402.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;Person&gt; People { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1403.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1404.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1405.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1406.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1407.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1408.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;Student&gt; Students { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1409.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1410.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1411.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1412.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1413.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1414.1" xmlns="http://www.w3.org/1999/xhtml"> DbSet&lt;Employee&gt; Employees { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1415.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1416.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1417.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1418.1" xmlns="http://www.w3.org/1999/xhtml">; }
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1419.1" xmlns="http://www.w3.org/1999/xhtml">For TPH, you are now finished, because it is the default! </span><span class="koboSpan" id="kobo.1419.2" xmlns="http://www.w3.org/1999/xhtml">If you want to make this explicit, then in the data context class </span><code class="inlineCode"><span class="koboSpan" id="kobo.1420.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></code><span class="koboSpan" id="kobo.1421.1" xmlns="http://www.w3.org/1999/xhtml"> method, call the appropriate “use mapping strategy” method on the base class of the hierarchy. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1422.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></code><span class="koboSpan" id="kobo.1423.1" xmlns="http://www.w3.org/1999/xhtml"> is the base class, so you would call </span><code class="inlineCode"><span class="koboSpan" id="kobo.1424.1" xmlns="http://www.w3.org/1999/xhtml">UseTphMappingStrategy</span></code><span class="koboSpan" id="kobo.1425.1" xmlns="http://www.w3.org/1999/xhtml"> on that entity type, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1426.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.Entity&lt;Person&gt;().UseTphMappingStrategy();
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1427.1" xmlns="http://www.w3.org/1999/xhtml">To use either of the other two mapping strategies, call the appropriate method, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1428.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.Entity&lt;Person&gt;().UseTptMappingStrategy();
modelBuilder.Entity&lt;Person&gt;().UseTpcMappingStrategy();
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1429.1" xmlns="http://www.w3.org/1999/xhtml">Next, you can optionally specify the table name to use for each entity class, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1430.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.Entity&lt;Student&gt;().ToTable(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1431.1" xmlns="http://www.w3.org/1999/xhtml">"Students"</span></span><span class="koboSpan" id="kobo.1432.1" xmlns="http://www.w3.org/1999/xhtml">);
modelBuilder.Entity&lt;Employee&gt;().ToTable(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1433.1" xmlns="http://www.w3.org/1999/xhtml">"Employees"</span></span><span class="koboSpan" id="kobo.1434.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1435.1" xmlns="http://www.w3.org/1999/xhtml">The TPC strategy should have a shared</span><a id="_idIndexMarker274"/><span class="koboSpan" id="kobo.1436.1" xmlns="http://www.w3.org/1999/xhtml"> sequence, so we should configure that too, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1437.1" xmlns="http://www.w3.org/1999/xhtml">modelBuilder.HasSequence&lt;</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1438.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1439.1" xmlns="http://www.w3.org/1999/xhtml">&gt;(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1440.1" xmlns="http://www.w3.org/1999/xhtml">"PersonIds"</span></span><span class="koboSpan" id="kobo.1441.1" xmlns="http://www.w3.org/1999/xhtml">);
modelBuilder.Entity&lt;Person&gt;().UseTpcMappingStrategy()
  .Property(e =&gt; e.Id).HasDefaultValueSql(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1442.1" xmlns="http://www.w3.org/1999/xhtml">"NEXT VALUE FOR [PersonIds]"</span></span><span class="koboSpan" id="kobo.1443.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<h2 class="heading-2" id="_idParaDest-149"><span class="koboSpan" id="kobo.1444.1" xmlns="http://www.w3.org/1999/xhtml">Example of hierarchy mapping strategies</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1445.1" xmlns="http://www.w3.org/1999/xhtml">Now let’s see this in action</span><a id="_idIndexMarker275"/><span class="koboSpan" id="kobo.1446.1" xmlns="http://www.w3.org/1999/xhtml"> using a new database and project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1447.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyMapping</span></code><span class="koboSpan" id="kobo.1448.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1449.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a console app project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1450.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.1451.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.1452.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.1453.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code><span class="koboSpan" id="kobo.1454.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1455.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1456.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.1457.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1458.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1459.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.HierarchyMapping</span></code><span class="koboSpan" id="kobo.1460.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1461.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.1462.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1463.1" xmlns="http://www.w3.org/1999/xhtml">Enable native AOT publish</span></strong><span class="koboSpan" id="kobo.1464.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1465.1" xmlns="http://www.w3.org/1999/xhtml">Configure the startup project to run </span><code class="inlineCode"><span class="koboSpan" id="kobo.1466.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.HierarchyMapping</span></code><span class="koboSpan" id="kobo.1467.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1468.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1469.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.HierarchyMapping</span></code><span class="koboSpan" id="kobo.1470.1" xmlns="http://www.w3.org/1999/xhtml"> project, add package references to the EF Core data provider for SQL Server, and globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1471.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.1472.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1473.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference
    Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1474.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.Design"</span></span><span class="koboSpan" id="kobo.1475.1" xmlns="http://www.w3.org/1999/xhtml"> 
    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1476.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.1477.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference
    Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1478.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.SqlServer"</span></span><span class="koboSpan" id="kobo.1479.1" xmlns="http://www.w3.org/1999/xhtml"> 
    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1480.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.1481.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;Using Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1482.1" xmlns="http://www.w3.org/1999/xhtml">"System.Console"</span></span><span class="koboSpan" id="kobo.1483.1" xmlns="http://www.w3.org/1999/xhtml"> Static=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1484.1" xmlns="http://www.w3.org/1999/xhtml">"true"</span></span><span class="koboSpan" id="kobo.1485.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1486.1" xmlns="http://www.w3.org/1999/xhtml">Build the project to restore packages.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1487.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1488.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Console.HierarchyMapping</span></code><span class="koboSpan" id="kobo.1489.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new folder named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1490.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1491.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1492.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1493.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1494.1" xmlns="http://www.w3.org/1999/xhtml">, add a new class</span><a id="_idIndexMarker276"/><span class="koboSpan" id="kobo.1495.1" xmlns="http://www.w3.org/1999/xhtml"> file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1496.1" xmlns="http://www.w3.org/1999/xhtml">Person.cs</span></code><span class="koboSpan" id="kobo.1497.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1498.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1499.1" xmlns="http://www.w3.org/1999/xhtml"> System.ComponentModel.DataAnnotations; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1500.1" xmlns="http://www.w3.org/1999/xhtml">// To use [Required].</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1501.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1502.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.1503.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1504.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1505.1" xmlns="http://www.w3.org/1999/xhtml">abstract</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1506.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1507.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1508.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1509.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1510.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1511.1" xmlns="http://www.w3.org/1999/xhtml"> Id { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1512.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1513.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1514.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1515.1" xmlns="http://www.w3.org/1999/xhtml">; }
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1516.1" xmlns="http://www.w3.org/1999/xhtml">Required</span></span><span class="koboSpan" id="kobo.1517.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1518.1" xmlns="http://www.w3.org/1999/xhtml">StringLength(40)</span></span><span class="koboSpan" id="kobo.1519.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1520.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1521.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1522.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1522.2" xmlns="http://www.w3.org/1999/xhtml">Name { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1523.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1524.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1525.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1526.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1527.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1528.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1529.1" xmlns="http://www.w3.org/1999/xhtml">, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1530.1" xmlns="http://www.w3.org/1999/xhtml">Student.cs</span></code><span class="koboSpan" id="kobo.1531.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1532.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1533.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.1534.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1535.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1536.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1537.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></span><span class="koboSpan" id="kobo.1538.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.1539.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1540.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1541.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1542.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1543.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1543.2" xmlns="http://www.w3.org/1999/xhtml">Subject { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1544.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1545.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1546.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1547.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1548.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1549.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1550.1" xmlns="http://www.w3.org/1999/xhtml">, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1551.1" xmlns="http://www.w3.org/1999/xhtml">Employee.cs</span></code><span class="koboSpan" id="kobo.1552.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1553.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1554.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.1555.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1556.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1557.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1558.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></span><span class="koboSpan" id="kobo.1559.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.1560.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="koboSpan" id="kobo.1561.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1562.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1563.1" xmlns="http://www.w3.org/1999/xhtml"> DateTime HireDate { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1564.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1565.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1566.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1567.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1568.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1569.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1570.1" xmlns="http://www.w3.org/1999/xhtml">, add a new class</span><a id="_idIndexMarker277"/><span class="koboSpan" id="kobo.1571.1" xmlns="http://www.w3.org/1999/xhtml"> file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1572.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb.cs</span></code><span class="koboSpan" id="kobo.1573.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1574.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1575.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1576.1" xmlns="http://www.w3.org/1999/xhtml">// To use DbSet&lt;T&gt;.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1577.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1578.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Models</span></span><span class="koboSpan" id="kobo.1579.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1580.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1581.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1582.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb</span></span><span class="koboSpan" id="kobo.1583.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.1584.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></span><span class="koboSpan" id="kobo.1585.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1586.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1587.1" xmlns="http://www.w3.org/1999/xhtml">DbSet</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1588.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1589.1" xmlns="http://www.w3.org/1999/xhtml">Person</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1590.1" xmlns="http://www.w3.org/1999/xhtml">&gt;? </span><span class="koboSpan" id="kobo.1590.2" xmlns="http://www.w3.org/1999/xhtml">People</span></span><span class="koboSpan" id="kobo.1591.1" xmlns="http://www.w3.org/1999/xhtml"> { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1592.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1593.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1594.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1595.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1596.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1597.1" xmlns="http://www.w3.org/1999/xhtml">DbSet</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1598.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1599.1" xmlns="http://www.w3.org/1999/xhtml">Student</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1600.1" xmlns="http://www.w3.org/1999/xhtml">&gt;? </span><span class="koboSpan" id="kobo.1600.2" xmlns="http://www.w3.org/1999/xhtml">Students</span></span><span class="koboSpan" id="kobo.1601.1" xmlns="http://www.w3.org/1999/xhtml"> { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1602.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1603.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1604.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1605.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1606.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1607.1" xmlns="http://www.w3.org/1999/xhtml">DbSet</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1608.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1609.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1610.1" xmlns="http://www.w3.org/1999/xhtml">&gt;? </span><span class="koboSpan" id="kobo.1610.2" xmlns="http://www.w3.org/1999/xhtml">Employees</span></span><span class="koboSpan" id="kobo.1611.1" xmlns="http://www.w3.org/1999/xhtml"> { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1612.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1613.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1614.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1615.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1616.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1617.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1618.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1619.1" xmlns="http://www.w3.org/1999/xhtml">DbContextOptions&lt;HierarchyDb&gt; options</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1620.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span>
<span class="hljs-function"><span class="koboSpan" id="kobo.1621.1" xmlns="http://www.w3.org/1999/xhtml">      : </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1622.1" xmlns="http://www.w3.org/1999/xhtml">base</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1623.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1624.1" xmlns="http://www.w3.org/1999/xhtml">options</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1625.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1626.1" xmlns="http://www.w3.org/1999/xhtml">
  {
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1627.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1628.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1629.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1630.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1631.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1632.1" xmlns="http://www.w3.org/1999/xhtml">ModelBuilder modelBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1633.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1634.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    modelBuilder.Entity&lt;Person&gt;()
      .UseTphMappingStrategy();
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1635.1" xmlns="http://www.w3.org/1999/xhtml">// Populate database with sample data.</span></span><span class="koboSpan" id="kobo.1636.1" xmlns="http://www.w3.org/1999/xhtml">
    Student p1 = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1637.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1638.1" xmlns="http://www.w3.org/1999/xhtml">() { Id = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1639.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.1640.1" xmlns="http://www.w3.org/1999/xhtml">, Name = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1641.1" xmlns="http://www.w3.org/1999/xhtml">"Roman Roy"</span></span><span class="koboSpan" id="kobo.1642.1" xmlns="http://www.w3.org/1999/xhtml">, 
      Subject = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1643.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1644.1" xmlns="http://www.w3.org/1999/xhtml">History"</span></span><span class="koboSpan" id="kobo.1645.1" xmlns="http://www.w3.org/1999/xhtml"> };
    Employee p2 = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1646.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1647.1" xmlns="http://www.w3.org/1999/xhtml">() { Id = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1648.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.1649.1" xmlns="http://www.w3.org/1999/xhtml">, Name = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1650.1" xmlns="http://www.w3.org/1999/xhtml">"Kendall Roy"</span></span><span class="koboSpan" id="kobo.1651.1" xmlns="http://www.w3.org/1999/xhtml">, 
      HireDate = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1652.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1653.1" xmlns="http://www.w3.org/1999/xhtml">(year: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1654.1" xmlns="http://www.w3.org/1999/xhtml">2014</span></span><span class="koboSpan" id="kobo.1655.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1656.1" xmlns="http://www.w3.org/1999/xhtml">4</span></span><span class="koboSpan" id="kobo.1657.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1658.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.1659.1" xmlns="http://www.w3.org/1999/xhtml">) };
    Employee p3 = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1660.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1661.1" xmlns="http://www.w3.org/1999/xhtml">() { Id = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1662.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1663.1" xmlns="http://www.w3.org/1999/xhtml">, Name = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1664.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1665.1" xmlns="http://www.w3.org/1999/xhtml">Siobhan Roy"</span></span><span class="koboSpan" id="kobo.1666.1" xmlns="http://www.w3.org/1999/xhtml">, 
      HireDate = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1667.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1668.1" xmlns="http://www.w3.org/1999/xhtml">(year: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1669.1" xmlns="http://www.w3.org/1999/xhtml">2020</span></span><span class="koboSpan" id="kobo.1670.1" xmlns="http://www.w3.org/1999/xhtml">, month: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1671.1" xmlns="http://www.w3.org/1999/xhtml">9</span></span><span class="koboSpan" id="kobo.1672.1" xmlns="http://www.w3.org/1999/xhtml">, day: </span><span class="hljs-number"><span class="koboSpan" id="kobo.1673.1" xmlns="http://www.w3.org/1999/xhtml">12</span></span><span class="koboSpan" id="kobo.1674.1" xmlns="http://www.w3.org/1999/xhtml">) };
    modelBuilder.Entity&lt;Student&gt;().HasData(p1);
    modelBuilder.Entity&lt;Employee&gt;().HasData(p2, p3);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1675.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1676.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1677.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing</span><a id="_idIndexMarker278"/><span class="koboSpan" id="kobo.1678.1" xmlns="http://www.w3.org/1999/xhtml"> statements. </span><span class="koboSpan" id="kobo.1678.2" xmlns="http://www.w3.org/1999/xhtml">Add statements to configure the connection string for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1679.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb</span></code><span class="koboSpan" id="kobo.1680.1" xmlns="http://www.w3.org/1999/xhtml"> data context and then use it to delete and then create a database named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1681.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyMapping</span></code><span class="koboSpan" id="kobo.1682.1" xmlns="http://www.w3.org/1999/xhtml"> (not </span><code class="inlineCode"><span class="koboSpan" id="kobo.1683.1" xmlns="http://www.w3.org/1999/xhtml">Northwind</span></code><span class="koboSpan" id="kobo.1684.1" xmlns="http://www.w3.org/1999/xhtml">!), show the automatically generated SQL script, and then output the students, employees, and people, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1685.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1686.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1687.1" xmlns="http://www.w3.org/1999/xhtml">// To use SqlConnectionStringBuilder.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1688.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1689.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Extensions.Options;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1690.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1691.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1692.1" xmlns="http://www.w3.org/1999/xhtml">// GenerateCreateScript()</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1693.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1694.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1695.1" xmlns="http://www.w3.org/1999/xhtml">// HierarchyDb, Person, Student, Employee</span></span><span class="koboSpan" id="kobo.1696.1" xmlns="http://www.w3.org/1999/xhtml">
DbContextOptionsBuilder&lt;HierarchyDb&gt; options = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1697.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1698.1" xmlns="http://www.w3.org/1999/xhtml">();
SqlConnectionStringBuilder builder = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1699.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1700.1" xmlns="http://www.w3.org/1999/xhtml">();
builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1701.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.1702.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1703.1" xmlns="http://www.w3.org/1999/xhtml">// "ServerName\InstanceName" e.g. </span><span class="koboSpan" id="kobo.1703.2" xmlns="http://www.w3.org/1999/xhtml">@".\sqlexpress"</span></span><span class="koboSpan" id="kobo.1704.1" xmlns="http://www.w3.org/1999/xhtml">
builder.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1705.1" xmlns="http://www.w3.org/1999/xhtml">"HierarchyMapping"</span></span><span class="koboSpan" id="kobo.1706.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1707.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.1708.1" xmlns="http://www.w3.org/1999/xhtml">;
builder.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1709.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.1710.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1711.1" xmlns="http://www.w3.org/1999/xhtml">// Because we want to fail faster. </span><span class="koboSpan" id="kobo.1711.2" xmlns="http://www.w3.org/1999/xhtml">Default is 15 seconds.</span></span><span class="koboSpan" id="kobo.1712.1" xmlns="http://www.w3.org/1999/xhtml">
builder.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.1713.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1714.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1715.1" xmlns="http://www.w3.org/1999/xhtml">// If using Windows Integrated authentication.</span></span><span class="koboSpan" id="kobo.1716.1" xmlns="http://www.w3.org/1999/xhtml">
builder.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.1717.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.1718.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1719.1" xmlns="http://www.w3.org/1999/xhtml">// If using SQL Server authentication.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1720.1" xmlns="http://www.w3.org/1999/xhtml">// builder.UserID = Environment.GetEnvironmentVariable("MY_SQL_USR");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1721.1" xmlns="http://www.w3.org/1999/xhtml">// builder.Password = Environment.GetEnvironmentVariable("MY_SQL_PWD");</span></span><span class="koboSpan" id="kobo.1722.1" xmlns="http://www.w3.org/1999/xhtml">
options.UseSqlServer(builder.ConnectionString);
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1723.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1724.1" xmlns="http://www.w3.org/1999/xhtml"> (HierarchyDb db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1725.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1726.1" xmlns="http://www.w3.org/1999/xhtml">(options.Options))
{
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1727.1" xmlns="http://www.w3.org/1999/xhtml">bool</span></span><span class="koboSpan" id="kobo.1728.1" xmlns="http://www.w3.org/1999/xhtml"> deleted = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1729.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1730.1" xmlns="http://www.w3.org/1999/xhtml"> db.Database.EnsureDeletedAsync();
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1731.1" xmlns="http://www.w3.org/1999/xhtml">$"Database deleted: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1732.1" xmlns="http://www.w3.org/1999/xhtml">{deleted}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1733.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1734.1" xmlns="http://www.w3.org/1999/xhtml">);
  
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1735.1" xmlns="http://www.w3.org/1999/xhtml">bool</span></span><span class="koboSpan" id="kobo.1736.1" xmlns="http://www.w3.org/1999/xhtml"> created = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1737.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1738.1" xmlns="http://www.w3.org/1999/xhtml"> db.Database.EnsureCreatedAsync();
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1739.1" xmlns="http://www.w3.org/1999/xhtml">$"Database created: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1740.1" xmlns="http://www.w3.org/1999/xhtml">{created}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1741.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1742.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1743.1" xmlns="http://www.w3.org/1999/xhtml">"SQL script used to create the database:"</span></span><span class="koboSpan" id="kobo.1744.1" xmlns="http://www.w3.org/1999/xhtml">);
  WriteLine(db.Database.GenerateCreateScript());
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1745.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1746.1" xmlns="http://www.w3.org/1999/xhtml"> (db.Students </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1747.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.1748.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1749.1" xmlns="http://www.w3.org/1999/xhtml"> || !db.Students.Any())
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1750.1" xmlns="http://www.w3.org/1999/xhtml">"There are no students."</span></span><span class="koboSpan" id="kobo.1751.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1752.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.1753.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1754.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1755.1" xmlns="http://www.w3.org/1999/xhtml"> (Student student </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1756.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1757.1" xmlns="http://www.w3.org/1999/xhtml"> db.Students)
    {
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1758.1" xmlns="http://www.w3.org/1999/xhtml">"{0} studies {1}"</span></span><span class="koboSpan" id="kobo.1759.1" xmlns="http://www.w3.org/1999/xhtml">,
        student.Name, student.Subject);
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1760.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1761.1" xmlns="http://www.w3.org/1999/xhtml"> (db.Employees </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1762.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.1763.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1764.1" xmlns="http://www.w3.org/1999/xhtml"> || !db.Employees.Any())
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1765.1" xmlns="http://www.w3.org/1999/xhtml">"There are no employees."</span></span><span class="koboSpan" id="kobo.1766.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1767.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.1768.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1769.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1770.1" xmlns="http://www.w3.org/1999/xhtml"> (Employee employee </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1771.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1772.1" xmlns="http://www.w3.org/1999/xhtml"> db.Employees)
    {
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1773.1" xmlns="http://www.w3.org/1999/xhtml">"{0} was hired on {1}"</span></span><span class="koboSpan" id="kobo.1774.1" xmlns="http://www.w3.org/1999/xhtml">,
        employee.Name, employee.HireDate);
    }
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1775.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1776.1" xmlns="http://www.w3.org/1999/xhtml"> (db.People </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1777.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.1778.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.1779.1" xmlns="http://www.w3.org/1999/xhtml"> || !db.People.Any())
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1780.1" xmlns="http://www.w3.org/1999/xhtml">"There are no people."</span></span><span class="koboSpan" id="kobo.1781.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1782.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.1783.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1784.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></span><span class="koboSpan" id="kobo.1785.1" xmlns="http://www.w3.org/1999/xhtml"> (Person person </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1786.1" xmlns="http://www.w3.org/1999/xhtml">in</span></span><span class="koboSpan" id="kobo.1787.1" xmlns="http://www.w3.org/1999/xhtml"> db.People)
    {
      WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1788.1" xmlns="http://www.w3.org/1999/xhtml">"{0} has ID of {1}"</span></span><span class="koboSpan" id="kobo.1789.1" xmlns="http://www.w3.org/1999/xhtml">,
        person.Name, person.Id);
    }
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1790.1" xmlns="http://www.w3.org/1999/xhtml">Start the console app, and note the results</span><a id="_idIndexMarker279"/><span class="koboSpan" id="kobo.1791.1" xmlns="http://www.w3.org/1999/xhtml"> including the single table named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1792.1" xmlns="http://www.w3.org/1999/xhtml">People</span></code><span class="koboSpan" id="kobo.1793.1" xmlns="http://www.w3.org/1999/xhtml"> that is created, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1794.1" xmlns="http://www.w3.org/1999/xhtml">Database deleted: False
Database created: True
SQL script used to create the database:
CREATE TABLE [People] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(40) NOT NULL,
    [Discriminator] nvarchar(8) NOT NULL,
    [HireDate] datetime2 NULL,
    [Subject] nvarchar(max) NULL,
    CONSTRAINT [PK_People] PRIMARY KEY ([Id])
);
GO
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Discriminator', N'Name', N'Subject') AND [object_id] = OBJECT_ID(N'[People]'))
    SET IDENTITY_INSERT [People] ON;
INSERT INTO [People] ([Id], [Discriminator], [Name], [Subject])
VALUES (1, N'Student', N'Roman Roy', N'History');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Discriminator', N'Name', N'Subject') AND [object_id] = OBJECT_ID(N'[People]'))
    SET IDENTITY_INSERT [People] OFF;
GO
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Discriminator', N'HireDate', N'Name') AND [object_id] = OBJECT_ID(N'[People]'))
    SET IDENTITY_INSERT [People] ON;
INSERT INTO [People] ([Id], [Discriminator], [HireDate], [Name])
VALUES (2, N'Employee', '2014-04-02T00:00:00.0000000', N'Kendall Roy'),
(3, N'Employee', '2020-09-12T00:00:00.0000000', N'Siobhan Roy');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'Discriminator', N'HireDate', N'Name') AND [object_id] = OBJECT_ID(N'[People]'))
    SET IDENTITY_INSERT [People] OFF;
GO
Roman Roy studies History
Kendall Roy was hired on 02/04/2014 00:00:00
Siobhan Roy was hired on 12/09/2020 00:00:00
Roman Roy has ID of 1
Kendall Roy has ID of 2
Siobhan Roy has ID of 3
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1795.1" xmlns="http://www.w3.org/1999/xhtml">In your preferred database tool, view the contents</span><a id="_idIndexMarker280"/><span class="koboSpan" id="kobo.1796.1" xmlns="http://www.w3.org/1999/xhtml"> of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1797.1" xmlns="http://www.w3.org/1999/xhtml">People</span></code><span class="koboSpan" id="kobo.1798.1" xmlns="http://www.w3.org/1999/xhtml"> table, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1799.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.2</span></em><span class="koboSpan" id="kobo.1800.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1801.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_03_02.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1802.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.2: The People table when using the TPH mapping strategy</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="13"><span class="koboSpan" id="kobo.1803.1" xmlns="http://www.w3.org/1999/xhtml">Close the connection to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1804.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyMapping</span></code><span class="koboSpan" id="kobo.1805.1" xmlns="http://www.w3.org/1999/xhtml"> database.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1806.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1807.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb.cs</span></code><span class="koboSpan" id="kobo.1808.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the method call that configures TPH and add a call to the method that configures TPT, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1809.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1810.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1811.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1812.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1813.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1814.1" xmlns="http://www.w3.org/1999/xhtml">ModelBuilder modelBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1815.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1816.1" xmlns="http://www.w3.org/1999/xhtml">
{
  modelBuilder.Entity&lt;Person&gt;()
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1817.1" xmlns="http://www.w3.org/1999/xhtml">// .UseTphMappingStrategy();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1818.1" xmlns="http://www.w3.org/1999/xhtml">    .UseTptMappingStrategy();</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1819.1" xmlns="http://www.w3.org/1999/xhtml">Start the console app, and note</span><a id="_idIndexMarker281"/><span class="koboSpan" id="kobo.1820.1" xmlns="http://www.w3.org/1999/xhtml"> the results including the three tables named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1821.1" xmlns="http://www.w3.org/1999/xhtml">People</span></code><span class="koboSpan" id="kobo.1822.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1823.1" xmlns="http://www.w3.org/1999/xhtml">Students</span></code><span class="koboSpan" id="kobo.1824.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1825.1" xmlns="http://www.w3.org/1999/xhtml">Employees</span></code><span class="koboSpan" id="kobo.1826.1" xmlns="http://www.w3.org/1999/xhtml"> that are created, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1827.1" xmlns="http://www.w3.org/1999/xhtml">Database deleted: True
Database created: True
SQL script used to create the database:
CREATE TABLE [People] (
    [Id] int NOT NULL IDENTITY,
    [Name] nvarchar(40) NOT NULL,
    CONSTRAINT [PK_People] PRIMARY KEY ([Id])
);
GO
CREATE TABLE [Employees] (
    [Id] int NOT NULL,
    [HireDate] datetime2 NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Employees_People_Id] FOREIGN KEY ([Id]) REFERENCES [People] ([Id])
);
GO
CREATE TABLE [Students] (
    [Id] int NOT NULL,
    [Subject] nvarchar(max) NULL,
    CONSTRAINT [PK_Students] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_Students_People_Id] FOREIGN KEY ([Id]) REFERENCES [People] ([Id])
);
GO
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1828.1" xmlns="http://www.w3.org/1999/xhtml">In your preferred database tool, view the contents of the tables, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1829.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.3</span></em><span class="koboSpan" id="kobo.1830.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1831.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_03_03.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1832.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.3: The tables when using the TPT mapping strategy</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="17"><span class="koboSpan" id="kobo.1833.1" xmlns="http://www.w3.org/1999/xhtml">Close the connection to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1834.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyMapping</span></code><span class="koboSpan" id="kobo.1835.1" xmlns="http://www.w3.org/1999/xhtml"> database.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1836.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1837.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyDb.cs</span></code><span class="koboSpan" id="kobo.1838.1" xmlns="http://www.w3.org/1999/xhtml">, comment out the method call that configures TPT. </span><span class="koboSpan" id="kobo.1838.2" xmlns="http://www.w3.org/1999/xhtml">Add a call to the method that configures TPC</span><a id="_idIndexMarker282"/><span class="koboSpan" id="kobo.1839.1" xmlns="http://www.w3.org/1999/xhtml"> and configure a sequence to track assigned ID values starting at four because we always add three sample rows, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1840.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1841.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1842.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1843.1" xmlns="http://www.w3.org/1999/xhtml">OnModelCreating</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1844.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1845.1" xmlns="http://www.w3.org/1999/xhtml">ModelBuilder modelBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1846.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1847.1" xmlns="http://www.w3.org/1999/xhtml">
{
  modelBuilder.Entity&lt;Person&gt;()
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1848.1" xmlns="http://www.w3.org/1999/xhtml">// .UseTphMappingStrategy();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1849.1" xmlns="http://www.w3.org/1999/xhtml">// .UseTptMappingStrategy();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1850.1" xmlns="http://www.w3.org/1999/xhtml">    .UseTpcMappingStrategy()</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1851.1" xmlns="http://www.w3.org/1999/xhtml">    .Property(person =&gt; person.Id)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1852.1" xmlns="http://www.w3.org/1999/xhtml">    .HasDefaultValueSql(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1853.1" xmlns="http://www.w3.org/1999/xhtml">"</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1854.1" xmlns="http://www.w3.org/1999/xhtml">NEXT VALUE FOR [PersonIds]"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1855.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1856.1" xmlns="http://www.w3.org/1999/xhtml">  modelBuilder.HasSequence&lt;</span></strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.1857.1" xmlns="http://www.w3.org/1999/xhtml">int</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1858.1" xmlns="http://www.w3.org/1999/xhtml">&gt;(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1859.1" xmlns="http://www.w3.org/1999/xhtml">"PersonIds"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1860.1" xmlns="http://www.w3.org/1999/xhtml">, builder =&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1861.1" xmlns="http://www.w3.org/1999/xhtml">  {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1862.1" xmlns="http://www.w3.org/1999/xhtml">    builder.StartsAt(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1863.1" xmlns="http://www.w3.org/1999/xhtml">4</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1864.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1865.1" xmlns="http://www.w3.org/1999/xhtml">  });</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1866.1" xmlns="http://www.w3.org/1999/xhtml">Start the console app, and note the results including the two tables named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1867.1" xmlns="http://www.w3.org/1999/xhtml">Students</span></code><span class="koboSpan" id="kobo.1868.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1869.1" xmlns="http://www.w3.org/1999/xhtml">Employees</span></code><span class="koboSpan" id="kobo.1870.1" xmlns="http://www.w3.org/1999/xhtml"> that are created as well as the shared sequence that starts at 4, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1871.1" xmlns="http://www.w3.org/1999/xhtml">CREATE SEQUENCE [PersonIds] AS int START WITH 4 INCREMENT BY 1 NO MINVALUE NO MAXVALUE NO CYCLE;
GO
CREATE TABLE [Employees] (
    [Id] int NOT NULL DEFAULT (NEXT VALUE FOR [PersonIds]),
    [Name] nvarchar(40) NOT NULL,
    [HireDate] datetime2 NOT NULL,
    CONSTRAINT [PK_Employees] PRIMARY KEY ([Id])
);
GO
CREATE TABLE [Students] (
    [Id] int NOT NULL DEFAULT (NEXT VALUE FOR [PersonIds]),
    [Name] nvarchar(40) NOT NULL,
    [Subject] nvarchar(max) NULL,
    CONSTRAINT [PK_Students] PRIMARY KEY ([Id])
);
GO
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1872.1" xmlns="http://www.w3.org/1999/xhtml">In your preferred database</span><a id="_idIndexMarker283"/><span class="koboSpan" id="kobo.1873.1" xmlns="http://www.w3.org/1999/xhtml"> tool, view the contents of the tables, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1874.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.4</span></em><span class="koboSpan" id="kobo.1875.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1876.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_03_04.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1877.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.4: The tables when using the TPC mapping strategy</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="21"><span class="koboSpan" id="kobo.1878.1" xmlns="http://www.w3.org/1999/xhtml">Close the connection to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1879.1" xmlns="http://www.w3.org/1999/xhtml">HierarchyMapping</span></code><span class="koboSpan" id="kobo.1880.1" xmlns="http://www.w3.org/1999/xhtml"> database.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1881.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1882.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1883.1" xmlns="http://www.w3.org/1999/xhtml">, after the statement to write the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1884.1" xmlns="http://www.w3.org/1999/xhtml">database create</span></code><span class="koboSpan" id="kobo.1885.1" xmlns="http://www.w3.org/1999/xhtml"> script to the console, add some statements to add two new people using the current database context, as shown highlighted</span><a id="_idIndexMarker284"/><span class="koboSpan" id="kobo.1886.1" xmlns="http://www.w3.org/1999/xhtml"> in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1887.1" xmlns="http://www.w3.org/1999/xhtml">WriteLine(db.Database.GenerateCreateScript());
</span><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1888.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1889.1" xmlns="http://www.w3.org/1999/xhtml"> ((db.Employees </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1890.1" xmlns="http://www.w3.org/1999/xhtml">is</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1891.1" xmlns="http://www.w3.org/1999/xhtml">not</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.1892.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1893.1" xmlns="http://www.w3.org/1999/xhtml">) &amp;&amp; (db.Students </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1894.1" xmlns="http://www.w3.org/1999/xhtml">is</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1895.1" xmlns="http://www.w3.org/1999/xhtml">not</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.1896.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1897.1" xmlns="http://www.w3.org/1999/xhtml">))</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1898.1" xmlns="http://www.w3.org/1999/xhtml">{</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1899.1" xmlns="http://www.w3.org/1999/xhtml">  db.Students.Add(</span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1900.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1901.1" xmlns="http://www.w3.org/1999/xhtml"> Student { Name = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1902.1" xmlns="http://www.w3.org/1999/xhtml">"Connor Roy"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1903.1" xmlns="http://www.w3.org/1999/xhtml">, </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1904.1" xmlns="http://www.w3.org/1999/xhtml">    Subject = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1905.1" xmlns="http://www.w3.org/1999/xhtml">"Politics"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1906.1" xmlns="http://www.w3.org/1999/xhtml"> });</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1907.1" xmlns="http://www.w3.org/1999/xhtml">  db.Employees.Add(</span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1908.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1909.1" xmlns="http://www.w3.org/1999/xhtml"> Employee { Name = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1910.1" xmlns="http://www.w3.org/1999/xhtml">"Kerry Castellabate"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1911.1" xmlns="http://www.w3.org/1999/xhtml">, </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1912.1" xmlns="http://www.w3.org/1999/xhtml">    HireDate = DateTime.UtcNow });</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.1913.1" xmlns="http://www.w3.org/1999/xhtml">int</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1914.1" xmlns="http://www.w3.org/1999/xhtml"> result = db.SaveChanges();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1915.1" xmlns="http://www.w3.org/1999/xhtml">  WriteLine(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1916.1" xmlns="http://www.w3.org/1999/xhtml">$"</span></strong><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.1917.1" xmlns="http://www.w3.org/1999/xhtml">{result}</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1918.1" xmlns="http://www.w3.org/1999/xhtml"> people added."</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1919.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1920.1" xmlns="http://www.w3.org/1999/xhtml">}</span></strong></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1921.1" xmlns="http://www.w3.org/1999/xhtml">Start the console app, and note the results, including the two new people added using the database context with IDs that start at 4, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1922.1" xmlns="http://www.w3.org/1999/xhtml">2 people added.
</span><span class="koboSpan" id="kobo.1922.2" xmlns="http://www.w3.org/1999/xhtml">Roman Roy studies History
Connor Roy studies Politics
Kendall Roy was hired on 02/04/2014 00:00:00
Siobhan Roy was hired on 12/09/2020 00:00:00
Kerry Castellabate was hired on 19/05/2023 10:13:53
Kendall Roy has ID of 2
Siobhan Roy has ID of 3
Kerry Castellabate has ID of 4
Roman Roy has ID of 1
Connor Roy has ID of 5
</span></code></pre>
</li>
</ol>
<p class="normal"><span class="koboSpan" id="kobo.1923.1" xmlns="http://www.w3.org/1999/xhtml">You’ve now seen how an object-relational mapper like EF Core can define an object inheritance hierarchy and map it in three different ways to an underlying database structure with one or more related tables. </span><span class="koboSpan" id="kobo.1923.2" xmlns="http://www.w3.org/1999/xhtml">You’ve also seen how Code First works especially well with this since it is so easy</span><a id="_idIndexMarker285"/><span class="koboSpan" id="kobo.1924.1" xmlns="http://www.w3.org/1999/xhtml"> to delete and recreate the database each time the project starts.</span></p>
<h1 class="heading-1" id="_idParaDest-150"><span class="koboSpan" id="kobo.1925.1" xmlns="http://www.w3.org/1999/xhtml">Building a reusable entity data model</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1926.1" xmlns="http://www.w3.org/1999/xhtml">Practical applications</span><a id="_idIndexMarker286"/><span class="koboSpan" id="kobo.1927.1" xmlns="http://www.w3.org/1999/xhtml"> usually need to work with data in a relational database or another data store. </span><span class="koboSpan" id="kobo.1927.2" xmlns="http://www.w3.org/1999/xhtml">Earlier in this chapter, we defined EF Core models in the same console app project that we used them in. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1928.1" xmlns="http://www.w3.org/1999/xhtml">Now, we will define an entity data model for the Northwind database as a pair of reusable class libraries. </span><span class="koboSpan" id="kobo.1928.2" xmlns="http://www.w3.org/1999/xhtml">One part of the pair will define the entities, like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1929.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.1930.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1931.1" xmlns="http://www.w3.org/1999/xhtml">Customer</span></code><span class="koboSpan" id="kobo.1932.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1932.2" xmlns="http://www.w3.org/1999/xhtml">The second part of the pair will define the tables in the database and the default configuration for how to connect to the database, and use the Fluent API to configure additional options for the model. </span><span class="koboSpan" id="kobo.1932.3" xmlns="http://www.w3.org/1999/xhtml">This pair of class libraries will be used in many of the apps and services that you create in subsequent chapters.</span></p>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1933.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1934.1" xmlns="http://www.w3.org/1999/xhtml">: You should create a separate class library project for your entity data models. </span><span class="koboSpan" id="kobo.1934.2" xmlns="http://www.w3.org/1999/xhtml">This allows easier sharing between backend web servers and frontend desktop, mobile, and Blazor clients.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-151"><span class="koboSpan" id="kobo.1935.1" xmlns="http://www.w3.org/1999/xhtml">Creating a class library for entity models using SQL Server</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1936.1" xmlns="http://www.w3.org/1999/xhtml">You will now create</span><a id="_idIndexMarker287"/><span class="koboSpan" id="kobo.1937.1" xmlns="http://www.w3.org/1999/xhtml"> the entity</span><a id="_idIndexMarker288"/><span class="koboSpan" id="kobo.1938.1" xmlns="http://www.w3.org/1999/xhtml"> models using</span><a id="_idIndexMarker289"/><span class="koboSpan" id="kobo.1939.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1940.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.1941.1" xmlns="http://www.w3.org/1999/xhtml"> tool:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1942.1" xmlns="http://www.w3.org/1999/xhtml">Add a new project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1943.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.1944.1" xmlns="http://www.w3.org/1999/xhtml">Class Library </span></strong><span class="koboSpan" id="kobo.1945.1" xmlns="http://www.w3.org/1999/xhtml">/ </span><code class="inlineCode"><span class="koboSpan" id="kobo.1946.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.1947.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1948.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1949.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.1950.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1951.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1952.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.1953.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1954.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1955.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.1956.1" xmlns="http://www.w3.org/1999/xhtml"> project, treat warnings as errors, and add package references for the SQL Server database provider and EF Core design-time support, as shown highlighted in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1957.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk="Microsoft.NET.Sdk"&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.1958.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.1959.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1960.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.1961.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1962.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.1963.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1964.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1965.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1966.1" xmlns="http://www.w3.org/1999/xhtml">      Include="Microsoft.EntityFrameworkCore.SqlServer" Version="</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1967.1" xmlns="http://www.w3.org/1999/xhtml">8.0.0</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1968.1" xmlns="http://www.w3.org/1999/xhtml">" /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1969.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1970.1" xmlns="http://www.w3.org/1999/xhtml">      Include="Microsoft.EntityFrameworkCore.Design" Version="</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1971.1" xmlns="http://www.w3.org/1999/xhtml">8.0.0</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1972.1" xmlns="http://www.w3.org/1999/xhtml">"&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1973.1" xmlns="http://www.w3.org/1999/xhtml">      &lt;PrivateAssets&gt;all&lt;/PrivateAssets&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1974.1" xmlns="http://www.w3.org/1999/xhtml">      &lt;IncludeAssets&gt;runtime; build; native; contentfiles; analyzers; buildtransitive&lt;/IncludeAssets&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1975.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;/PackageReference&gt;  </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1976.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span><span class="koboSpan" id="kobo.1977.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;/Project&gt;
</span></code></pre>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1978.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.1979.1" xmlns="http://www.w3.org/1999/xhtml">: If you are unfamiliar with how packages like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1980.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.EntityFrameworkCore.Design</span></code><span class="koboSpan" id="kobo.1981.1" xmlns="http://www.w3.org/1999/xhtml"> can manage their assets, then you can learn</span><a id="_idIndexMarker290"/><span class="koboSpan" id="kobo.1982.1" xmlns="http://www.w3.org/1999/xhtml"> more at the following link: </span><a href="https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#controlling-dependency-assets"><span class="url"><span class="koboSpan" id="kobo.1983.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/nuget/consume-packages/package-references-in-project-files#controlling-dependency-assets</span></span></a><span class="koboSpan" id="kobo.1984.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.1985.1" xmlns="http://www.w3.org/1999/xhtml">Delete the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1986.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.1987.1" xmlns="http://www.w3.org/1999/xhtml"> file.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1988.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1989.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.1990.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1991.1" xmlns="http://www.w3.org/1999/xhtml">Open</span><a id="_idIndexMarker291"/><span class="koboSpan" id="kobo.1992.1" xmlns="http://www.w3.org/1999/xhtml"> a command </span><a id="_idIndexMarker292"/><span class="koboSpan" id="kobo.1993.1" xmlns="http://www.w3.org/1999/xhtml">prompt or terminal</span><a id="_idIndexMarker293"/><span class="koboSpan" id="kobo.1994.1" xmlns="http://www.w3.org/1999/xhtml"> for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1995.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.1996.1" xmlns="http://www.w3.org/1999/xhtml"> folder.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1997.1" xmlns="http://www.w3.org/1999/xhtml">The next step assumes a database connection string for a local SQL Server authenticated with Windows integrated security. </span><span class="koboSpan" id="kobo.1997.2" xmlns="http://www.w3.org/1999/xhtml">Modify it for Azure SQL Database or Azure SQL Edge with a user ID and password if necessary.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.1998.1" xmlns="http://www.w3.org/1999/xhtml">At the command line, generate entity class models for all tables, as shown in the following commands:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1999.1" xmlns="http://www.w3.org/1999/xhtml">dotnet ef dbcontext scaffold "Data Source=.;Initial Catalog=Northwind;Integrated Security=true;TrustServerCertificate=True;" Microsoft.EntityFrameworkCore.SqlServer --namespace Northwind.EntityModels --data-annotations
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.2000.1" xmlns="http://www.w3.org/1999/xhtml">Note the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2001.1" xmlns="http://www.w3.org/1999/xhtml">The command to perform: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2002.1" xmlns="http://www.w3.org/1999/xhtml">dbcontext scaffold</span></code><span class="koboSpan" id="kobo.2003.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2004.1" xmlns="http://www.w3.org/1999/xhtml">The connection string: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2005.1" xmlns="http://www.w3.org/1999/xhtml">"</span></code><code class="inlineCode"><span class="koboSpan" id="kobo.2006.1" xmlns="http://www.w3.org/1999/xhtml">Data Source=.;Initial Catalog=Northwind;Integrated Security=true;TrustServerCertificate=True;"</span></code><span class="koboSpan" id="kobo.2007.1" xmlns="http://www.w3.org/1999/xhtml"> .</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2008.1" xmlns="http://www.w3.org/1999/xhtml">The database provider: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2009.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.EntityFrameworkCore.SqlServer</span></code><span class="koboSpan" id="kobo.2010.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2011.1" xmlns="http://www.w3.org/1999/xhtml">The namespace for the generated classes: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2012.1" xmlns="http://www.w3.org/1999/xhtml">--namespace Northwind.EntityModels</span></code><span class="koboSpan" id="kobo.2013.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2014.1" xmlns="http://www.w3.org/1999/xhtml">To use data annotations as well as the Fluent API: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2015.1" xmlns="http://www.w3.org/1999/xhtml">--data-annotations</span></code><span class="koboSpan" id="kobo.2016.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="7"><span class="koboSpan" id="kobo.2017.1" xmlns="http://www.w3.org/1999/xhtml">Note that </span><a id="_idIndexMarker294"/><span class="koboSpan" id="kobo.2018.1" xmlns="http://www.w3.org/1999/xhtml">28 classes</span><a id="_idIndexMarker295"/><span class="koboSpan" id="kobo.2019.1" xmlns="http://www.w3.org/1999/xhtml"> were generated, from </span><code class="inlineCode"><span class="koboSpan" id="kobo.2020.1" xmlns="http://www.w3.org/1999/xhtml">AlphabeticalListOfProduct.cs</span></code><span class="koboSpan" id="kobo.2021.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2022.1" xmlns="http://www.w3.org/1999/xhtml">Territory.cs</span></code><span class="koboSpan" id="kobo.2023.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2024.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2025.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext.cs</span></code><span class="koboSpan" id="kobo.2026.1" xmlns="http://www.w3.org/1999/xhtml">, delete the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2027.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.2028.1" xmlns="http://www.w3.org/1999/xhtml"> method including the warning and connection</span><a id="_idIndexMarker296"/><span class="koboSpan" id="kobo.2029.1" xmlns="http://www.w3.org/1999/xhtml"> string.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2030.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2031.1" xmlns="http://www.w3.org/1999/xhtml">Customer.cs</span></code><span class="koboSpan" id="kobo.2032.1" xmlns="http://www.w3.org/1999/xhtml">, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2033.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.2034.1" xmlns="http://www.w3.org/1999/xhtml"> tool correctly identified that the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2035.1" xmlns="http://www.w3.org/1999/xhtml">CustomerId</span></code><span class="koboSpan" id="kobo.2036.1" xmlns="http://www.w3.org/1999/xhtml"> column is the primary key and it is limited to a maximum of five characters, but we also want the values to always be uppercase. </span><span class="koboSpan" id="kobo.2036.2" xmlns="http://www.w3.org/1999/xhtml">So, add a regular expression to validate its primary key value to only allow uppercase Western characters, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2037.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2038.1" xmlns="http://www.w3.org/1999/xhtml">Key</span></span><span class="koboSpan" id="kobo.2039.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2040.1" xmlns="http://www.w3.org/1999/xhtml">StringLength(5)</span></span><span class="koboSpan" id="kobo.2041.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2042.1" xmlns="http://www.w3.org/1999/xhtml">[</span></strong><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.2043.1" xmlns="http://www.w3.org/1999/xhtml">RegularExpression(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2044.1" xmlns="http://www.w3.org/1999/xhtml">"[A-Z]{5}"</span></strong><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.2045.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2046.1" xmlns="http://www.w3.org/1999/xhtml">]  </span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2047.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2048.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2049.1" xmlns="http://www.w3.org/1999/xhtml"> CustomerId { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2050.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2051.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2052.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2053.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2054.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2055.1" xmlns="http://www.w3.org/1999/xhtml">!;
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-152"><span class="koboSpan" id="kobo.2056.1" xmlns="http://www.w3.org/1999/xhtml">Creating a class library for the data context using SQL Server</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2057.1" xmlns="http://www.w3.org/1999/xhtml">Next, you will move the context model</span><a id="_idIndexMarker297"/><span class="koboSpan" id="kobo.2058.1" xmlns="http://www.w3.org/1999/xhtml"> that represents the database</span><a id="_idIndexMarker298"/><span class="koboSpan" id="kobo.2059.1" xmlns="http://www.w3.org/1999/xhtml"> to a separate class</span><a id="_idIndexMarker299"/><span class="koboSpan" id="kobo.2060.1" xmlns="http://www.w3.org/1999/xhtml"> library:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2061.1" xmlns="http://www.w3.org/1999/xhtml">Add a new project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2062.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.2063.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2064.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2065.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code><span class="koboSpan" id="kobo.2066.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2067.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2068.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2069.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2070.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2071.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.2072.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2073.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2074.1" xmlns="http://www.w3.org/1999/xhtml">DataContext</span></code><span class="koboSpan" id="kobo.2075.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a project reference to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2076.1" xmlns="http://www.w3.org/1999/xhtml">EntityModels</span></code><span class="koboSpan" id="kobo.2077.1" xmlns="http://www.w3.org/1999/xhtml"> project, and add a package reference to the EF Core data provider for SQL Server, as shown in the following markup:</span></li>
</ul>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2078.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference 
    Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2079.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.SqlServer"</span></span><span class="koboSpan" id="kobo.2080.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2081.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.2082.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
&lt;ItemGroup&gt;
  &lt;ProjectReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2083.1" xmlns="http://www.w3.org/1999/xhtml">"..\Northwind.Common.EntityModels</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2084.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.EntityModels.SqlServer.csproj"</span></span><span class="koboSpan" id="kobo.2085.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2086.1" xmlns="http://www.w3.org/1999/xhtml">Warning!</span></strong><span class="koboSpan" id="kobo.2087.1" xmlns="http://www.w3.org/1999/xhtml"> The path to the project reference should not have a line break in your project file.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="2"><span class="koboSpan" id="kobo.2088.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2089.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2090.1" xmlns="http://www.w3.org/1999/xhtml"> project, delete the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2091.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2092.1" xmlns="http://www.w3.org/1999/xhtml"> file.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2093.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2094.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2095.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2096.1" xmlns="http://www.w3.org/1999/xhtml">Move the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2097.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext.cs</span></code><span class="koboSpan" id="kobo.2098.1" xmlns="http://www.w3.org/1999/xhtml"> file from the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2099.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.2100.1" xmlns="http://www.w3.org/1999/xhtml"> project/folder to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2101.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2102.1" xmlns="http://www.w3.org/1999/xhtml"> project/folder.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2103.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2104.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2105.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a class named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2106.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContextExtensions.cs</span></code><span class="koboSpan" id="kobo.2107.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents to define an extension method</span><a id="_idIndexMarker300"/><span class="koboSpan" id="kobo.2108.1" xmlns="http://www.w3.org/1999/xhtml"> that adds the Northwind</span><a id="_idIndexMarker301"/><span class="koboSpan" id="kobo.2109.1" xmlns="http://www.w3.org/1999/xhtml"> database context</span><a id="_idIndexMarker302"/><span class="koboSpan" id="kobo.2110.1" xmlns="http://www.w3.org/1999/xhtml"> to a collection of dependency services, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2111.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2112.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2113.1" xmlns="http://www.w3.org/1999/xhtml">// SqlConnectionStringBuilder</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2114.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2115.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2116.1" xmlns="http://www.w3.org/1999/xhtml">// UseSqlServer</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2117.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2118.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Extensions.DependencyInjection; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2119.1" xmlns="http://www.w3.org/1999/xhtml">// IServiceCollection</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2120.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2121.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.2122.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2123.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2124.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2125.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2126.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContextExtensions</span></span><span class="koboSpan" id="kobo.2127.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2128.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"> </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2129.1" xmlns="http://www.w3.org/1999/xhtml">&lt;summary&gt;</span></span>
<span class="hljs-doctag"><span class="koboSpan" id="kobo.2130.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"><span class="koboSpan" id="kobo.2131.1" xmlns="http://www.w3.org/1999/xhtml"> Adds NorthwindContext to the specified IServiceCollection. </span><span class="koboSpan" id="kobo.2131.2" xmlns="http://www.w3.org/1999/xhtml">Uses the SqlServer database provider.</span></span>
<span class="hljs-doctag"><span class="koboSpan" id="kobo.2132.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"> </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2133.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/summary&gt;</span></span>
<span class="hljs-doctag"><span class="koboSpan" id="kobo.2134.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"> </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2135.1" xmlns="http://www.w3.org/1999/xhtml">&lt;param name="services"&gt;</span></span><span class="hljs-comment"><span class="koboSpan" id="kobo.2136.1" xmlns="http://www.w3.org/1999/xhtml">The service collection.</span></span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2137.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/param&gt;</span></span>
<span class="hljs-doctag"><span class="koboSpan" id="kobo.2138.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"> </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2139.1" xmlns="http://www.w3.org/1999/xhtml">&lt;param name="connectionString"&gt;</span></span><span class="hljs-comment"><span class="koboSpan" id="kobo.2140.1" xmlns="http://www.w3.org/1999/xhtml">Set to override the default.</span></span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2141.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/param&gt;</span></span>
<span class="hljs-doctag"><span class="koboSpan" id="kobo.2142.1" xmlns="http://www.w3.org/1999/xhtml">///</span></span><span class="hljs-comment"> </span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2143.1" xmlns="http://www.w3.org/1999/xhtml">&lt;returns&gt;</span></span><span class="hljs-comment"><span class="koboSpan" id="kobo.2144.1" xmlns="http://www.w3.org/1999/xhtml">An IServiceCollection that can be used to add more services.</span></span><span class="hljs-doctag"><span class="koboSpan" id="kobo.2145.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/returns&gt;</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2146.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2147.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2148.1" xmlns="http://www.w3.org/1999/xhtml"> IServiceCollection </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2149.1" xmlns="http://www.w3.org/1999/xhtml">AddNorthwindContext</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2150.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2151.1" xmlns="http://www.w3.org/1999/xhtml">this</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2152.1" xmlns="http://www.w3.org/1999/xhtml"> IServiceCollection services,</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2153.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2154.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2154.2" xmlns="http://www.w3.org/1999/xhtml">connectionString = </span></span><span class="hljs-literal"><span class="koboSpan" id="kobo.2155.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2156.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2157.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2158.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2159.1" xmlns="http://www.w3.org/1999/xhtml"> (connectionString == </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2160.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2161.1" xmlns="http://www.w3.org/1999/xhtml">)
    {
      SqlConnectionStringBuilder builder = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2162.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2163.1" xmlns="http://www.w3.org/1999/xhtml">();
      builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2164.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.2165.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2166.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.2167.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2168.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2169.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2170.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2171.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2172.1" xmlns="http://www.w3.org/1999/xhtml">// If using Azure SQL Edge.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2173.1" xmlns="http://www.w3.org/1999/xhtml">// builder.DataSource = "tcp:127.0.0.1,1433";</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2174.1" xmlns="http://www.w3.org/1999/xhtml">// Because we want to fail fast. </span><span class="koboSpan" id="kobo.2174.2" xmlns="http://www.w3.org/1999/xhtml">Default is 15 seconds.</span></span><span class="koboSpan" id="kobo.2175.1" xmlns="http://www.w3.org/1999/xhtml">
      builder.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2176.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.2177.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2178.1" xmlns="http://www.w3.org/1999/xhtml">// If using Windows Integrated authentication.</span></span><span class="koboSpan" id="kobo.2179.1" xmlns="http://www.w3.org/1999/xhtml">
      builder.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2180.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2181.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2182.1" xmlns="http://www.w3.org/1999/xhtml">// If using SQL Server authentication.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2183.1" xmlns="http://www.w3.org/1999/xhtml">// builder.UserID = Environment.GetEnvironmentVariable("MY_SQL_USR");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2184.1" xmlns="http://www.w3.org/1999/xhtml">// builder.Password = Environment.GetEnvironmentVariable("MY_SQL_PWD");</span></span><span class="koboSpan" id="kobo.2185.1" xmlns="http://www.w3.org/1999/xhtml">
      connectionString = builder.ConnectionString;
    }
    services.AddDbContext&lt;NorthwindContext&gt;(options =&gt;
    {
      options.UseSqlServer(connectionString);
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2186.1" xmlns="http://www.w3.org/1999/xhtml">// Log to console when executing EF Core commands.</span></span><span class="koboSpan" id="kobo.2187.1" xmlns="http://www.w3.org/1999/xhtml">
      options.LogTo(Console.WriteLine,
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2188.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2189.1" xmlns="http://www.w3.org/1999/xhtml">[] { Microsoft.EntityFrameworkCore
          .Diagnostics.RelationalEventId.CommandExecuting });
    },
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2190.1" xmlns="http://www.w3.org/1999/xhtml">// Register with a transient lifetime to avoid concurrency </span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2191.1" xmlns="http://www.w3.org/1999/xhtml">// issues with Blazor Server projects.</span></span><span class="koboSpan" id="kobo.2192.1" xmlns="http://www.w3.org/1999/xhtml">
    contextLifetime: ServiceLifetime.Transient, 
    optionsLifetime: ServiceLifetime.Transient);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2193.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2194.1" xmlns="http://www.w3.org/1999/xhtml"> services;
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2195.1" xmlns="http://www.w3.org/1999/xhtml">Build the</span><a id="_idIndexMarker303"/><span class="koboSpan" id="kobo.2196.1" xmlns="http://www.w3.org/1999/xhtml"> two class libraries</span><a id="_idIndexMarker304"/><span class="koboSpan" id="kobo.2197.1" xmlns="http://www.w3.org/1999/xhtml"> and fix any compiler</span><a id="_idIndexMarker305"/><span class="koboSpan" id="kobo.2198.1" xmlns="http://www.w3.org/1999/xhtml"> errors.</span></li>
</ol>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2199.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.2200.1" xmlns="http://www.w3.org/1999/xhtml">: We have provided an optional argument for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2201.1" xmlns="http://www.w3.org/1999/xhtml">AddNorthwindContext</span></code><span class="koboSpan" id="kobo.2202.1" xmlns="http://www.w3.org/1999/xhtml"> method so that we can override the SQL Server database connection string. </span><span class="koboSpan" id="kobo.2202.2" xmlns="http://www.w3.org/1999/xhtml">This will allow us more flexibility, for example, to load these values from a configuration file.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-153"><span class="koboSpan" id="kobo.2203.1" xmlns="http://www.w3.org/1999/xhtml">Calculated properties on entity creation</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2204.1" xmlns="http://www.w3.org/1999/xhtml">EF Core 7 added an </span><code class="inlineCode"><span class="koboSpan" id="kobo.2205.1" xmlns="http://www.w3.org/1999/xhtml">IMaterializationInterceptor</span></code><span class="koboSpan" id="kobo.2206.1" xmlns="http://www.w3.org/1999/xhtml"> interface that allows interception before and after</span><a id="_idIndexMarker306"/><span class="koboSpan" id="kobo.2207.1" xmlns="http://www.w3.org/1999/xhtml"> an entity is created, and when properties are initialized. </span><span class="koboSpan" id="kobo.2207.2" xmlns="http://www.w3.org/1999/xhtml">This is useful for calculated values. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.2208.1" xmlns="http://www.w3.org/1999/xhtml">For example, when a service or client app requests entities to show to the user, it might want to cache a copy of the entity for a period of time. </span><span class="koboSpan" id="kobo.2208.2" xmlns="http://www.w3.org/1999/xhtml">To do this, it needs to know when the entity was last refreshed. </span><span class="koboSpan" id="kobo.2208.3" xmlns="http://www.w3.org/1999/xhtml">It would be useful if this information was automatically generated and stored with each entity at the time of loading.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2209.1" xmlns="http://www.w3.org/1999/xhtml">To achieve this goal, we must complete four steps:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2210.1" xmlns="http://www.w3.org/1999/xhtml">First, define an interface with the extra property.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2211.1" xmlns="http://www.w3.org/1999/xhtml">Next, at least one entity model class must implement the interface.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2212.1" xmlns="http://www.w3.org/1999/xhtml">Then, define a class that implements the interceptor interface with a method named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2213.1" xmlns="http://www.w3.org/1999/xhtml">InitializedInstance</span></code><span class="koboSpan" id="kobo.2214.1" xmlns="http://www.w3.org/1999/xhtml"> that will execute on any entity, and if that entity implements the custom interface with the extra property, then it will set its value.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2215.1" xmlns="http://www.w3.org/1999/xhtml">Finally, we must create an instance of the interceptor and register it in the data context class.</span></li>
</ol>
<p class="normal"><span class="koboSpan" id="kobo.2216.1" xmlns="http://www.w3.org/1999/xhtml">Now let’s implement this for Northwind </span><code class="inlineCode"><span class="koboSpan" id="kobo.2217.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></code><span class="koboSpan" id="kobo.2218.1" xmlns="http://www.w3.org/1999/xhtml"> entities:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2219.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2220.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.2221.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2222.1" xmlns="http://www.w3.org/1999/xhtml">IHasLastRefreshed.cs</span></code><span class="koboSpan" id="kobo.2223.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents to define the interface, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2224.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2225.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.2226.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2227.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2228.1" xmlns="http://www.w3.org/1999/xhtml">interface</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2229.1" xmlns="http://www.w3.org/1999/xhtml">IHasLastRefreshed</span></span><span class="koboSpan" id="kobo.2230.1" xmlns="http://www.w3.org/1999/xhtml">
{
  DateTimeOffset LastRefreshed { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2231.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2232.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2233.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2234.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2235.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2236.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.SqlServer</span></code><span class="koboSpan" id="kobo.2237.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2238.1" xmlns="http://www.w3.org/1999/xhtml">EmployeePartial.cs</span></code><span class="koboSpan" id="kobo.2239.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents to implement the interface, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2240.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2241.1" xmlns="http://www.w3.org/1999/xhtml"> System.ComponentModel.DataAnnotations.Schema; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2242.1" xmlns="http://www.w3.org/1999/xhtml">// [NotMapped]</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2243.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2244.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.2245.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2246.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2247.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2248.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2249.1" xmlns="http://www.w3.org/1999/xhtml">Employee</span></span> <span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2250.1" xmlns="http://www.w3.org/1999/xhtml">: </span></strong><strong class="hljs-title-slc"><span class="koboSpan" id="kobo.2251.1" xmlns="http://www.w3.org/1999/xhtml">IHasLastRefreshed</span></strong></span><span class="koboSpan" id="kobo.2252.1" xmlns="http://www.w3.org/1999/xhtml">
{
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2253.1" xmlns="http://www.w3.org/1999/xhtml">  [</span></strong><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.2254.1" xmlns="http://www.w3.org/1999/xhtml">NotMapped</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2255.1" xmlns="http://www.w3.org/1999/xhtml">]</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2256.1" xmlns="http://www.w3.org/1999/xhtml">public</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2257.1" xmlns="http://www.w3.org/1999/xhtml"> DateTimeOffset LastRefreshed { </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2258.1" xmlns="http://www.w3.org/1999/xhtml">get</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2259.1" xmlns="http://www.w3.org/1999/xhtml">; </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2260.1" xmlns="http://www.w3.org/1999/xhtml">set</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2261.1" xmlns="http://www.w3.org/1999/xhtml">; }</span></strong></span><span class="koboSpan" id="kobo.2262.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2263.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.2264.1" xmlns="http://www.w3.org/1999/xhtml">: Add extension code like this to a separate partial entity class file so that you can later regenerate the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2265.1" xmlns="http://www.w3.org/1999/xhtml">Employee.cs</span></code><span class="koboSpan" id="kobo.2266.1" xmlns="http://www.w3.org/1999/xhtml"> file using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2267.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.2268.1" xmlns="http://www.w3.org/1999/xhtml"> tool without overwriting your additional code.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.2269.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2270.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2271.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2272.1" xmlns="http://www.w3.org/1999/xhtml">SetLastRefreshedInterceptor.cs</span></code><span class="koboSpan" id="kobo.2273.1" xmlns="http://www.w3.org/1999/xhtml">, and modify its contents to define the interceptor, as shown</span><a id="_idIndexMarker307"/><span class="koboSpan" id="kobo.2274.1" xmlns="http://www.w3.org/1999/xhtml"> in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.2275.1" xmlns="http://www.w3.org/1999/xhtml">// IMaterializationInterceptor, MaterializationInterceptionData</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2276.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2277.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore.Diagnostics;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2278.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2279.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.2280.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2281.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2282.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2283.1" xmlns="http://www.w3.org/1999/xhtml">SetLastRefreshedInterceptor</span></span><span class="koboSpan" id="kobo.2284.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2285.1" xmlns="http://www.w3.org/1999/xhtml">IMaterializationInterceptor</span></span><span class="koboSpan" id="kobo.2286.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2287.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2288.1" xmlns="http://www.w3.org/1999/xhtml">object</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2289.1" xmlns="http://www.w3.org/1999/xhtml">InitializedInstance</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2290.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.2291.1" xmlns="http://www.w3.org/1999/xhtml">    MaterializationInterceptionData materializationData,</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2292.1" xmlns="http://www.w3.org/1999/xhtml">object</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2293.1" xmlns="http://www.w3.org/1999/xhtml"> entity</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2294.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2295.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2296.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2297.1" xmlns="http://www.w3.org/1999/xhtml"> (entity </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2298.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.2299.1" xmlns="http://www.w3.org/1999/xhtml"> IHasLastRefreshed entityWithLastRefreshed)
    {
      entityWithLastRefreshed.LastRefreshed = DateTimeOffset.UtcNow;
    }
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2300.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2301.1" xmlns="http://www.w3.org/1999/xhtml"> entity;
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2302.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2303.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2304.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.2305.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext.cs</span></code><span class="koboSpan" id="kobo.2306.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing </span><code class="inlineCode"><span class="koboSpan" id="kobo.2307.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.2308.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2309.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2310.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2311.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2312.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContextPartial.cs</span></code><span class="koboSpan" id="kobo.2313.1" xmlns="http://www.w3.org/1999/xhtml">, then declare</span><a id="_idIndexMarker308"/><span class="koboSpan" id="kobo.2314.1" xmlns="http://www.w3.org/1999/xhtml"> and register the interceptor in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2315.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></code><span class="koboSpan" id="kobo.2316.1" xmlns="http://www.w3.org/1999/xhtml"> method, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2317.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2318.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2319.1" xmlns="http://www.w3.org/1999/xhtml">// SqlConnectionStringBuilder</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2320.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2321.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.EntityFrameworkCore; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2322.1" xmlns="http://www.w3.org/1999/xhtml">// DbContext</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2323.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2324.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></span><span class="koboSpan" id="kobo.2325.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2326.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2327.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2328.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2329.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext</span></span><span class="koboSpan" id="kobo.2330.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2331.1" xmlns="http://www.w3.org/1999/xhtml">DbContext</span></span><span class="koboSpan" id="kobo.2332.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2333.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2334.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2335.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.2336.1" xmlns="http://www.w3.org/1999/xhtml"> SetLastRefreshedInterceptor
    setLastRefreshedInterceptor = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2337.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2338.1" xmlns="http://www.w3.org/1999/xhtml">();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2339.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2340.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2341.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2342.1" xmlns="http://www.w3.org/1999/xhtml">OnConfiguring</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2343.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2344.1" xmlns="http://www.w3.org/1999/xhtml">DbContextOptionsBuilder optionsBuilder</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2345.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2346.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2347.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2348.1" xmlns="http://www.w3.org/1999/xhtml"> (!optionsBuilder.IsConfigured)
    {
      SqlConnectionStringBuilder builder = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2349.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2350.1" xmlns="http://www.w3.org/1999/xhtml">();
      builder.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2351.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.2352.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2353.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind"</span></span><span class="koboSpan" id="kobo.2354.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2355.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2356.1" xmlns="http://www.w3.org/1999/xhtml">;
      builder.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2357.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2358.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2359.1" xmlns="http://www.w3.org/1999/xhtml">// Because we want to fail fast. </span><span class="koboSpan" id="kobo.2359.2" xmlns="http://www.w3.org/1999/xhtml">Default is 15 seconds.</span></span><span class="koboSpan" id="kobo.2360.1" xmlns="http://www.w3.org/1999/xhtml">
      builder.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.2361.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.2362.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2363.1" xmlns="http://www.w3.org/1999/xhtml">// If using Windows Integrated authentication.</span></span><span class="koboSpan" id="kobo.2364.1" xmlns="http://www.w3.org/1999/xhtml">
      builder.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2365.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2366.1" xmlns="http://www.w3.org/1999/xhtml">;
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2367.1" xmlns="http://www.w3.org/1999/xhtml">// If using SQL Server authentication.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2368.1" xmlns="http://www.w3.org/1999/xhtml">// builder.UserID = Environment.GetEnvironmentVariable("MY_SQL_USR");</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2369.1" xmlns="http://www.w3.org/1999/xhtml">// builder.Password = Environment.GetEnvironmentVariable("MY_SQL_PWD");</span></span><span class="koboSpan" id="kobo.2370.1" xmlns="http://www.w3.org/1999/xhtml">
      optionsBuilder.UseSqlServer(builder.ConnectionString);
    }
    optionsBuilder.AddInterceptors(setLastRefreshedInterceptor);
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2371.1" xmlns="http://www.w3.org/1999/xhtml">Save</span><a id="_idIndexMarker309"/><span class="koboSpan" id="kobo.2372.1" xmlns="http://www.w3.org/1999/xhtml"> the changes.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-154"><span class="koboSpan" id="kobo.2373.1" xmlns="http://www.w3.org/1999/xhtml">Creating a test project to check the integration of the class libraries</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2374.1" xmlns="http://www.w3.org/1999/xhtml">Since we will not be creating</span><a id="_idIndexMarker310"/><span class="koboSpan" id="kobo.2375.1" xmlns="http://www.w3.org/1999/xhtml"> a client project in this chapter that uses</span><a id="_idIndexMarker311"/><span class="koboSpan" id="kobo.2376.1" xmlns="http://www.w3.org/1999/xhtml"> the EF Core model, we should create a test project to make sure the database context and entity models integrate correctly:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2377.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred coding tool to add a new </span><strong class="screenText"><span class="koboSpan" id="kobo.2378.1" xmlns="http://www.w3.org/1999/xhtml">xUnit Test Project [C#]</span></strong><span class="koboSpan" id="kobo.2379.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2380.1" xmlns="http://www.w3.org/1999/xhtml">xunit</span></code><span class="koboSpan" id="kobo.2381.1" xmlns="http://www.w3.org/1999/xhtml"> project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2382.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.Tests</span></code><span class="koboSpan" id="kobo.2383.1" xmlns="http://www.w3.org/1999/xhtml"> to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2384.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.2385.1" xmlns="http://www.w3.org/1999/xhtml"> solution.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2386.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2387.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.Tests.csproj</span></code><span class="koboSpan" id="kobo.2388.1" xmlns="http://www.w3.org/1999/xhtml">, modify the configuration to treat warnings as errors and to add an item group with a project reference to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2389.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.DataContext.SqlServer</span></code><span class="koboSpan" id="kobo.2390.1" xmlns="http://www.w3.org/1999/xhtml"> project, as shown</span><a id="_idIndexMarker312"/><span class="koboSpan" id="kobo.2391.1" xmlns="http://www.w3.org/1999/xhtml"> in the following</span><a id="_idIndexMarker313"/><span class="koboSpan" id="kobo.2392.1" xmlns="http://www.w3.org/1999/xhtml"> markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2393.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2394.1" xmlns="http://www.w3.org/1999/xhtml">"..\Northwind.Common.DataContext</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2395.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.DataContext.SqlServer.csproj"</span></span><span class="koboSpan" id="kobo.2396.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2397.1" xmlns="http://www.w3.org/1999/xhtml">Warning!</span></strong><span class="koboSpan" id="kobo.2398.1" xmlns="http://www.w3.org/1999/xhtml"> The path to the project reference should not have a line break in your project file.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.2399.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2400.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.Tests</span></code><span class="koboSpan" id="kobo.2401.1" xmlns="http://www.w3.org/1999/xhtml"> project to build and restore project dependencies.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-155"><span class="koboSpan" id="kobo.2402.1" xmlns="http://www.w3.org/1999/xhtml">Writing unit tests for entity models</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2403.1" xmlns="http://www.w3.org/1999/xhtml">A well-written</span><a id="_idIndexMarker314"/><span class="koboSpan" id="kobo.2404.1" xmlns="http://www.w3.org/1999/xhtml"> unit test will have</span><a id="_idIndexMarker315"/><span class="koboSpan" id="kobo.2405.1" xmlns="http://www.w3.org/1999/xhtml"> three parts:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.2406.1" xmlns="http://www.w3.org/1999/xhtml">Arrange</span></strong><span class="koboSpan" id="kobo.2407.1" xmlns="http://www.w3.org/1999/xhtml">: This part will declare and instantiate variables for input and output.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.2408.1" xmlns="http://www.w3.org/1999/xhtml">Act</span></strong><span class="koboSpan" id="kobo.2409.1" xmlns="http://www.w3.org/1999/xhtml">: This part will execute the unit that you are testing. </span><span class="koboSpan" id="kobo.2409.2" xmlns="http://www.w3.org/1999/xhtml">In our case, that means calling the method that we want to test.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.2410.1" xmlns="http://www.w3.org/1999/xhtml">Assert</span></strong><span class="koboSpan" id="kobo.2411.1" xmlns="http://www.w3.org/1999/xhtml">: This part will make one or more assertions about the output. </span><span class="koboSpan" id="kobo.2411.2" xmlns="http://www.w3.org/1999/xhtml">An assertion is a belief that, if not true, indicates a failed test. </span><span class="koboSpan" id="kobo.2411.3" xmlns="http://www.w3.org/1999/xhtml">For example, when adding 2 and 2, we would expect the result to be 4.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2412.1" xmlns="http://www.w3.org/1999/xhtml">Now, we will write some unit tests for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2413.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext</span></code><span class="koboSpan" id="kobo.2414.1" xmlns="http://www.w3.org/1999/xhtml"> and entity model classes:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2415.1" xmlns="http://www.w3.org/1999/xhtml">Rename the file </span><code class="inlineCode"><span class="koboSpan" id="kobo.2416.1" xmlns="http://www.w3.org/1999/xhtml">UnitTest1.cs</span></code><span class="koboSpan" id="kobo.2417.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2418.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindEntityModelsTests.cs</span></code><span class="koboSpan" id="kobo.2419.1" xmlns="http://www.w3.org/1999/xhtml"> and then open it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2420.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio Code, rename the class to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2421.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindEntityModelsTests</span></code><span class="koboSpan" id="kobo.2422.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.2422.2" xmlns="http://www.w3.org/1999/xhtml">(Visual Studio prompts you to rename the class when you rename the file.)</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2423.1" xmlns="http://www.w3.org/1999/xhtml">Modify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2424.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindEntityModelsTests</span></code><span class="koboSpan" id="kobo.2425.1" xmlns="http://www.w3.org/1999/xhtml"> class to import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2426.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.EntityModels</span></code><span class="koboSpan" id="kobo.2427.1" xmlns="http://www.w3.org/1999/xhtml"> namespace and have some test methods for ensuring the context class can connect, ensuring the provider is SQL Server, and ensuring the first </span><a id="_idIndexMarker316"/><span class="koboSpan" id="kobo.2428.1" xmlns="http://www.w3.org/1999/xhtml">product is named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2429.1" xmlns="http://www.w3.org/1999/xhtml">Chai</span></code><span class="koboSpan" id="kobo.2430.1" xmlns="http://www.w3.org/1999/xhtml">, as shown</span><a id="_idIndexMarker317"/><span class="koboSpan" id="kobo.2431.1" xmlns="http://www.w3.org/1999/xhtml"> in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2432.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2433.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2434.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2435.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.Tests</span></span><span class="koboSpan" id="kobo.2436.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2437.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2438.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2439.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindEntityModelsTests</span></span><span class="koboSpan" id="kobo.2440.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2441.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.2442.1" xmlns="http://www.w3.org/1999/xhtml">]
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2443.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2444.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2445.1" xmlns="http://www.w3.org/1999/xhtml">CanConnectIsTrue</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2446.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2447.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2448.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2449.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindContext db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2450.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2451.1" xmlns="http://www.w3.org/1999/xhtml">()) </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2452.1" xmlns="http://www.w3.org/1999/xhtml">// arrange</span></span><span class="koboSpan" id="kobo.2453.1" xmlns="http://www.w3.org/1999/xhtml">
      {
        </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2454.1" xmlns="http://www.w3.org/1999/xhtml">bool</span></span><span class="koboSpan" id="kobo.2455.1" xmlns="http://www.w3.org/1999/xhtml"> canConnect = db.Database.CanConnect(); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2456.1" xmlns="http://www.w3.org/1999/xhtml">// act</span></span><span class="koboSpan" id="kobo.2457.1" xmlns="http://www.w3.org/1999/xhtml">
        Assert.True(canConnect); </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2458.1" xmlns="http://www.w3.org/1999/xhtml">// assert</span></span><span class="koboSpan" id="kobo.2459.1" xmlns="http://www.w3.org/1999/xhtml">
      }
    }
    [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2460.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.2461.1" xmlns="http://www.w3.org/1999/xhtml">]
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2462.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2463.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2464.1" xmlns="http://www.w3.org/1999/xhtml">ProviderIsSqlServer</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2465.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2466.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2467.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2468.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindContext db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2469.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2470.1" xmlns="http://www.w3.org/1999/xhtml">())
      {
        </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2471.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2472.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2472.2" xmlns="http://www.w3.org/1999/xhtml">provider = db.Database.ProviderName;
        Assert.Equal(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2473.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.EntityFrameworkCore.SqlServer"</span></span><span class="koboSpan" id="kobo.2474.1" xmlns="http://www.w3.org/1999/xhtml">, provider);
      }
    }
    [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2475.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.2476.1" xmlns="http://www.w3.org/1999/xhtml">]
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2477.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2478.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2479.1" xmlns="http://www.w3.org/1999/xhtml">ProductId1IsChai</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2480.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2481.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2482.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2483.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindContext db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2484.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2485.1" xmlns="http://www.w3.org/1999/xhtml">())
      {
        Product product1 = db.Products.Single(p =&gt; p.ProductId == </span><span class="hljs-number"><span class="koboSpan" id="kobo.2486.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.2487.1" xmlns="http://www.w3.org/1999/xhtml">);
        Assert.Equal(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2488.1" xmlns="http://www.w3.org/1999/xhtml">"Chai"</span></span><span class="koboSpan" id="kobo.2489.1" xmlns="http://www.w3.org/1999/xhtml">, product1.ProductName);
      }
    }
    [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2490.1" xmlns="http://www.w3.org/1999/xhtml">Fact</span></span><span class="koboSpan" id="kobo.2491.1" xmlns="http://www.w3.org/1999/xhtml">]
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2492.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2493.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2494.1" xmlns="http://www.w3.org/1999/xhtml">EmployeeHasLastRefreshedIn10sWindow</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2495.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2496.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2497.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2498.1" xmlns="http://www.w3.org/1999/xhtml"> (NorthwindContext db = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2499.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2500.1" xmlns="http://www.w3.org/1999/xhtml">())
      {
        Employee employee1 = db.Employees.Single(p =&gt; p.EmployeeId == </span><span class="hljs-number"><span class="koboSpan" id="kobo.2501.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.2502.1" xmlns="http://www.w3.org/1999/xhtml">);
        DateTimeOffset now = DateTimeOffset.UtcNow;
        Assert.InRange(actual: employee1.LastRefreshed,
          low: now.Subtract(TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2503.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.2504.1" xmlns="http://www.w3.org/1999/xhtml">)),
          high: now.AddSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2505.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.2506.1" xmlns="http://www.w3.org/1999/xhtml">));
      }
    }
  }
}
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-156"><span class="koboSpan" id="kobo.2507.1" xmlns="http://www.w3.org/1999/xhtml">Running unit tests using Visual Studio 2022</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2508.1" xmlns="http://www.w3.org/1999/xhtml">Now we are ready</span><a id="_idIndexMarker318"/><span class="koboSpan" id="kobo.2509.1" xmlns="http://www.w3.org/1999/xhtml"> to run the unit tests and see</span><a id="_idIndexMarker319"/><span class="koboSpan" id="kobo.2510.1" xmlns="http://www.w3.org/1999/xhtml"> the results:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2511.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio 2022, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.2512.1" xmlns="http://www.w3.org/1999/xhtml">Test</span></strong><span class="koboSpan" id="kobo.2513.1" xmlns="http://www.w3.org/1999/xhtml"> | </span><strong class="screenText"><span class="koboSpan" id="kobo.2514.1" xmlns="http://www.w3.org/1999/xhtml">Run All Tests</span></strong><span class="koboSpan" id="kobo.2515.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2516.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.2517.1" xmlns="http://www.w3.org/1999/xhtml">Test Explorer</span></strong><span class="koboSpan" id="kobo.2518.1" xmlns="http://www.w3.org/1999/xhtml">, note that the results indicate that four tests ran, and all passed, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2519.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.5</span></em><span class="koboSpan" id="kobo.2520.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2521.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_03_05.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2522.1" xmlns="http://www.w3.org/1999/xhtml">Figure 3.5: All unit tests passed</span></p>
<h2 class="heading-2" id="_idParaDest-157"><span class="koboSpan" id="kobo.2523.1" xmlns="http://www.w3.org/1999/xhtml">Running unit tests using Visual Studio Code</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2524.1" xmlns="http://www.w3.org/1999/xhtml">Now we are ready</span><a id="_idIndexMarker320"/><span class="koboSpan" id="kobo.2525.1" xmlns="http://www.w3.org/1999/xhtml"> to run the unit tests and see</span><a id="_idIndexMarker321"/><span class="koboSpan" id="kobo.2526.1" xmlns="http://www.w3.org/1999/xhtml"> the results:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2527.1" xmlns="http://www.w3.org/1999/xhtml">In Visual Studio Code, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2528.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Common.EntityModels.Tests</span></code><span class="koboSpan" id="kobo.2529.1" xmlns="http://www.w3.org/1999/xhtml"> project’s </span><strong class="screenText"><span class="koboSpan" id="kobo.2530.1" xmlns="http://www.w3.org/1999/xhtml">TERMINAL</span></strong><span class="koboSpan" id="kobo.2531.1" xmlns="http://www.w3.org/1999/xhtml"> window, run the tests, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2532.1" xmlns="http://www.w3.org/1999/xhtml">dotnet test
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2533.1" xmlns="http://www.w3.org/1999/xhtml">If you are using </span><strong class="screenText"><span class="koboSpan" id="kobo.2534.1" xmlns="http://www.w3.org/1999/xhtml">C# Dev Kit</span></strong><span class="koboSpan" id="kobo.2535.1" xmlns="http://www.w3.org/1999/xhtml">, then you can also build the test project and then run the tests from the </span><strong class="screenText"><span class="koboSpan" id="kobo.2536.1" xmlns="http://www.w3.org/1999/xhtml">Testing</span></strong><span class="koboSpan" id="kobo.2537.1" xmlns="http://www.w3.org/1999/xhtml"> section in the </span><strong class="screenText"><span class="koboSpan" id="kobo.2538.1" xmlns="http://www.w3.org/1999/xhtml">Primary Side Bar</span></strong><span class="koboSpan" id="kobo.2539.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="2"><span class="koboSpan" id="kobo.2540.1" xmlns="http://www.w3.org/1999/xhtml">In the output, note that the results</span><a id="_idIndexMarker322"/><span class="koboSpan" id="kobo.2541.1" xmlns="http://www.w3.org/1999/xhtml"> indicate that four tests</span><a id="_idIndexMarker323"/><span class="koboSpan" id="kobo.2542.1" xmlns="http://www.w3.org/1999/xhtml"> ran, and all passed.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2543.1" xmlns="http://www.w3.org/1999/xhtml">As an optional task, can you think of other tests you could write to make sure the database context and entity models are correct?</span></p>
</div></li>
</ol>
<h1 class="heading-1" id="_idParaDest-158"><span class="koboSpan" id="kobo.2544.1" xmlns="http://www.w3.org/1999/xhtml">Practicing and exploring</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2545.1" xmlns="http://www.w3.org/1999/xhtml">Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with deeper research.</span></p>
<h2 class="heading-2" id="_idParaDest-159"><span class="koboSpan" id="kobo.2546.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 3.1 – Test your knowledge</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2547.1" xmlns="http://www.w3.org/1999/xhtml">Answer the following questions:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2548.1" xmlns="http://www.w3.org/1999/xhtml">What can the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2549.1" xmlns="http://www.w3.org/1999/xhtml">dotnet-ef</span></code><span class="koboSpan" id="kobo.2550.1" xmlns="http://www.w3.org/1999/xhtml"> tool be used for?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2551.1" xmlns="http://www.w3.org/1999/xhtml">What type would you use for the property that represents a table, for example, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2552.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.2553.1" xmlns="http://www.w3.org/1999/xhtml"> property of a data context?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2554.1" xmlns="http://www.w3.org/1999/xhtml">What type would you use for the property that represents a one-to-many relationship, for example, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2555.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.2556.1" xmlns="http://www.w3.org/1999/xhtml"> property of a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2557.1" xmlns="http://www.w3.org/1999/xhtml">Category</span></code><span class="koboSpan" id="kobo.2558.1" xmlns="http://www.w3.org/1999/xhtml"> entity?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2559.1" xmlns="http://www.w3.org/1999/xhtml">What is the EF Core convention for primary keys?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2560.1" xmlns="http://www.w3.org/1999/xhtml">Why might you choose the Fluent API in preference to annotation attributes?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2561.1" xmlns="http://www.w3.org/1999/xhtml">Why might you implement the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2562.1" xmlns="http://www.w3.org/1999/xhtml">IMaterializationInterceptor</span></code><span class="koboSpan" id="kobo.2563.1" xmlns="http://www.w3.org/1999/xhtml"> interface in an entity type?</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-160"><span class="koboSpan" id="kobo.2564.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 3.2 – Practice benchmarking ADO.NET against EF Core</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2565.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2566.1" xmlns="http://www.w3.org/1999/xhtml">Chapter03</span></code><span class="koboSpan" id="kobo.2567.1" xmlns="http://www.w3.org/1999/xhtml"> solution, create a console app named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2568.1" xmlns="http://www.w3.org/1999/xhtml">Ch03Ex02_ADONETvsEFCore</span></code><span class="koboSpan" id="kobo.2569.1" xmlns="http://www.w3.org/1999/xhtml"> that uses Benchmark.NET to compare retrieving all the products from the Northwind database using ADO.NET (</span><code class="inlineCode"><span class="koboSpan" id="kobo.2570.1" xmlns="http://www.w3.org/1999/xhtml">SqlClient</span></code><span class="koboSpan" id="kobo.2571.1" xmlns="http://www.w3.org/1999/xhtml">) and using EF Core.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2572.1" xmlns="http://www.w3.org/1999/xhtml">You can learn how to use Benchmark.NET by reading the online-only section </span><em class="chapterRef"><span class="koboSpan" id="kobo.2573.1" xmlns="http://www.w3.org/1999/xhtml">Benchmarking Performance and Testing</span></em><span class="koboSpan" id="kobo.2574.1" xmlns="http://www.w3.org/1999/xhtml"> at the following link: </span><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/ch01-benchmarking.md"><span class="url"><span class="koboSpan" id="kobo.2575.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/ch01-benchmarking.md</span></span></a><span class="koboSpan" id="kobo.2576.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-161"><span class="koboSpan" id="kobo.2577.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 3.3 – Review performance choices</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2578.1" xmlns="http://www.w3.org/1999/xhtml">The data tier can have an outsized influence on the overall performance of an app or service. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.2579.1" xmlns="http://www.w3.org/1999/xhtml">Docs: </span><a href="https://learn.microsoft.com/en-us/ef/core/performance/"><span class="url"><span class="koboSpan" id="kobo.2580.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/ef/core/performance/</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-162"><span class="koboSpan" id="kobo.2581.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 3.4 – Explore topics</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2582.1" xmlns="http://www.w3.org/1999/xhtml">Use the links on the following page to learn more details about the topics covered in this chapter:</span></p>
<p class="normal"><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-3---building-entity-models-for-sql-server-using-ef-core"><span class="url"><span class="koboSpan" id="kobo.2583.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-3---building-entity-models-for-sql-server-using-ef-core</span></span></a></p>
<h1 class="heading-1" id="_idParaDest-163"><span class="koboSpan" id="kobo.2584.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2585.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, you learned:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2586.1" xmlns="http://www.w3.org/1999/xhtml">How to execute a simple query and process the results using the slower but more object-oriented EF Core.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2587.1" xmlns="http://www.w3.org/1999/xhtml">How to configure and decide between three mapping strategies for type hierarchies.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2588.1" xmlns="http://www.w3.org/1999/xhtml">How to implement calculated properties on entity creation.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2589.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, you will learn how to use cloud-native data storage with Azure Cosmos DB.</span></p>
</div>
<div id="_idContainer122">
<h1 class="heading-1" id="_idParaDest-164"><span class="koboSpan" id="kobo.2590.1" xmlns="http://www.w3.org/1999/xhtml">Learn more on Discord</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2591.1" xmlns="http://www.w3.org/1999/xhtml">To join the Discord community for this book – where you can share feedback, ask questions to the author, and learn about new releases – follow the QR code below:</span></p>
<p class="normal"><a href="https://packt.link/apps_and_services_dotnet8"><span class="url"><span class="koboSpan" id="kobo.2592.1" xmlns="http://www.w3.org/1999/xhtml">https://packt.link/apps_and_services_dotnet8</span></span></a></p>
<p class="normal"><span class="koboSpan" id="kobo.2593.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/QR_Code3048220001028652625.png"/></span></p>
</div>
</body>
</html>
