<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title>Chapter_09</title>
<link href="../Styles/syntax-highlighting.css" rel="stylesheet" type="text/css"/>
<link href="../Styles/epub.css" rel="stylesheet" type="text/css"/>
<!-- kobo-style -->
<style id="koboSpanStyle" type="text/css" xmlns="http://www.w3.org/1999/xhtml">.koboSpan { -webkit-text-combine: inherit; }</style>
</head>
<body id="Chapter_09" lang="en-US" xml:lang="en-US">
<div class="Basic-Text-Frame" id="_idContainer314">
<h1 class="chapterNumber"><span class="koboSpan" id="kobo.1.1" xmlns="http://www.w3.org/1999/xhtml">9</span></h1>
<h1 class="chapterTitle" id="_idParaDest-342"><span class="koboSpan" id="kobo.2.1" xmlns="http://www.w3.org/1999/xhtml">Caching, Queuing, and Resilient Background Services</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, you will be introduced to multiple technologies and techniques that will improve the scalability and reliability of your services, no matter what service technology you choose to implement them with.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.4.1" xmlns="http://www.w3.org/1999/xhtml">This chapter will cover the following topics:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.5.1" xmlns="http://www.w3.org/1999/xhtml">Understanding service architecture</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.6.1" xmlns="http://www.w3.org/1999/xhtml">Caching with ASP.NET Core</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.7.1" xmlns="http://www.w3.org/1999/xhtml">Fault tolerance with Polly</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.8.1" xmlns="http://www.w3.org/1999/xhtml">Queuing with RabbitMQ</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.9.1" xmlns="http://www.w3.org/1999/xhtml">Implementing long-running background services</span></li>
</ul>
<h1 class="heading-1" id="_idParaDest-343"><span class="koboSpan" id="kobo.10.1" xmlns="http://www.w3.org/1999/xhtml">Understanding service architecture</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.11.1" xmlns="http://www.w3.org/1999/xhtml">In </span><em class="chapterRef"><span class="koboSpan" id="kobo.12.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 8</span></em><span class="koboSpan" id="kobo.13.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.14.1" xmlns="http://www.w3.org/1999/xhtml">Building and Securing Web Services Using Minimal APIs</span></em><span class="koboSpan" id="kobo.15.1" xmlns="http://www.w3.org/1999/xhtml">, you learned how to build a web service using ASP.NET Core Minimal APIs. </span><span class="koboSpan" id="kobo.15.2" xmlns="http://www.w3.org/1999/xhtml">Before looking at alternative technologies to </span><a id="_idIndexMarker858"/><span class="koboSpan" id="kobo.16.1" xmlns="http://www.w3.org/1999/xhtml">build services, it is worth taking a step back and reviewing service architecture and what causes bottlenecks in service performance and scalability.</span></p>
<h2 class="heading-2" id="_idParaDest-344"><span class="koboSpan" id="kobo.17.1" xmlns="http://www.w3.org/1999/xhtml">What parts of a system are slowest?</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.18.1" xmlns="http://www.w3.org/1999/xhtml">Traditionally, the </span><a id="_idIndexMarker859"/><span class="koboSpan" id="kobo.19.1" xmlns="http://www.w3.org/1999/xhtml">slowest parts of a system are:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.20.1" xmlns="http://www.w3.org/1999/xhtml">The network (slowest)</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.21.1" xmlns="http://www.w3.org/1999/xhtml">The disk</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.22.1" xmlns="http://www.w3.org/1999/xhtml">Memory</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.23.1" xmlns="http://www.w3.org/1999/xhtml">CPU cache memory (fastest)</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.24.1" xmlns="http://www.w3.org/1999/xhtml">Each step can be 5 to 10 times slower than the next.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.25.1" xmlns="http://www.w3.org/1999/xhtml">However, networks are much faster than they used to be, and systems often run within remote data centers. </span><span class="koboSpan" id="kobo.25.2" xmlns="http://www.w3.org/1999/xhtml">Imagine your service needs some data. </span><span class="koboSpan" id="kobo.25.3" xmlns="http://www.w3.org/1999/xhtml">Is it faster to read from the local server disk or to</span><a id="_idIndexMarker860"/><span class="koboSpan" id="kobo.26.1" xmlns="http://www.w3.org/1999/xhtml"> make a call to another server?</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.27.1" xmlns="http://www.w3.org/1999/xhtml">Server-to-server call within the same data center: 500,000 nanoseconds (ns)</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.28.1" xmlns="http://www.w3.org/1999/xhtml">Disk seek: 10,000,000 ns</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-345"><span class="koboSpan" id="kobo.29.1" xmlns="http://www.w3.org/1999/xhtml">Numbers every (developer) should know</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.30.1" xmlns="http://www.w3.org/1999/xhtml">Jeff Dean, a Google Fellow, quotes</span><a id="_idIndexMarker861"/><span class="koboSpan" id="kobo.31.1" xmlns="http://www.w3.org/1999/xhtml"> in his presentations the actual times in nanoseconds (ns) for various technologies to access or read data. </span><span class="koboSpan" id="kobo.31.2" xmlns="http://www.w3.org/1999/xhtml">They are shown in </span><em class="italic"><span class="koboSpan" id="kobo.32.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.1</span></em><span class="koboSpan" id="kobo.33.1" xmlns="http://www.w3.org/1999/xhtml">, and I have added a column to scale the numbers to be more comprehensible to a human:</span></p>
<table class="table-container" id="table001-7">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.34.1" xmlns="http://www.w3.org/1999/xhtml">Technology</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.35.1" xmlns="http://www.w3.org/1999/xhtml">Actual</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.36.1" xmlns="http://www.w3.org/1999/xhtml">Humanized</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.37.1" xmlns="http://www.w3.org/1999/xhtml">CPU cycle</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.38.1" xmlns="http://www.w3.org/1999/xhtml">0.1 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.39.1" xmlns="http://www.w3.org/1999/xhtml">1 second</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.40.1" xmlns="http://www.w3.org/1999/xhtml">L1 cache reference</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.41.1" xmlns="http://www.w3.org/1999/xhtml">½ ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.42.1" xmlns="http://www.w3.org/1999/xhtml">5 seconds</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.43.1" xmlns="http://www.w3.org/1999/xhtml">L2 cache reference</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.44.1" xmlns="http://www.w3.org/1999/xhtml">5 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.45.1" xmlns="http://www.w3.org/1999/xhtml">1 minute</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.46.1" xmlns="http://www.w3.org/1999/xhtml">Mutex lock/unlock</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.47.1" xmlns="http://www.w3.org/1999/xhtml">25 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.48.1" xmlns="http://www.w3.org/1999/xhtml">4 minutes</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.49.1" xmlns="http://www.w3.org/1999/xhtml">Main memory reference</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.50.1" xmlns="http://www.w3.org/1999/xhtml">100 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.51.1" xmlns="http://www.w3.org/1999/xhtml">¼ hour</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.52.1" xmlns="http://www.w3.org/1999/xhtml">Send 1K byte over 1 Gbps network</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.53.1" xmlns="http://www.w3.org/1999/xhtml">10,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.54.1" xmlns="http://www.w3.org/1999/xhtml">28 hours</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.55.1" xmlns="http://www.w3.org/1999/xhtml">Read 1 MB sequentially from memory</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.56.1" xmlns="http://www.w3.org/1999/xhtml">250,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.57.1" xmlns="http://www.w3.org/1999/xhtml">29 days</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.58.1" xmlns="http://www.w3.org/1999/xhtml">Round trip within same datacenter</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.59.1" xmlns="http://www.w3.org/1999/xhtml">500,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.60.1" xmlns="http://www.w3.org/1999/xhtml">2 months</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.61.1" xmlns="http://www.w3.org/1999/xhtml">Read 1 MB sequentially from SSD</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.62.1" xmlns="http://www.w3.org/1999/xhtml">1,000,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.63.1" xmlns="http://www.w3.org/1999/xhtml">4 months</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.64.1" xmlns="http://www.w3.org/1999/xhtml">Disk seek</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.65.1" xmlns="http://www.w3.org/1999/xhtml">10,000,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.66.1" xmlns="http://www.w3.org/1999/xhtml">3¼ years</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.67.1" xmlns="http://www.w3.org/1999/xhtml">Read 1 MB sequentially from disk</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.68.1" xmlns="http://www.w3.org/1999/xhtml">20,000,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.69.1" xmlns="http://www.w3.org/1999/xhtml">6¼ years</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.70.1" xmlns="http://www.w3.org/1999/xhtml">Send packet CA-&gt;Netherlands-&gt;CA</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.71.1" xmlns="http://www.w3.org/1999/xhtml">150,000,000 ns</span></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.72.1" xmlns="http://www.w3.org/1999/xhtml">47½ years</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.73.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.1: Nanosecond times for various technologies to access or read data</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.74.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.75.1" xmlns="http://www.w3.org/1999/xhtml">: </span><em class="italic"><span class="koboSpan" id="kobo.76.1" xmlns="http://www.w3.org/1999/xhtml">Designs, Lessons, and Advice from Building Large Distributed Systems</span></em><span class="koboSpan" id="kobo.77.1" xmlns="http://www.w3.org/1999/xhtml">, by Jeff Dean, </span><a href="http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf"><span class="url"><span class="koboSpan" id="kobo.78.1" xmlns="http://www.w3.org/1999/xhtml">http://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf</span></span></a><span class="koboSpan" id="kobo.79.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.80.1" xmlns="http://www.w3.org/1999/xhtml">The point is not to debate if reading from drives or SSDs is faster or not than network calls. </span><span class="koboSpan" id="kobo.80.2" xmlns="http://www.w3.org/1999/xhtml">It is more about being aware of the differences between getting data that’s close and data that’s far away. </span><span class="koboSpan" id="kobo.80.3" xmlns="http://www.w3.org/1999/xhtml">The orders of magnitude are comparatively massive.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.81.1" xmlns="http://www.w3.org/1999/xhtml">For example, if a CPU needs to</span><a id="_idIndexMarker862"/><span class="koboSpan" id="kobo.82.1" xmlns="http://www.w3.org/1999/xhtml"> process some data and it is already in the L1 cache, then it takes the equivalent of 1 second. </span><span class="koboSpan" id="kobo.82.2" xmlns="http://www.w3.org/1999/xhtml">If it needs to read the data from memory, it takes the equivalent of a quarter of an hour. </span><span class="koboSpan" id="kobo.82.3" xmlns="http://www.w3.org/1999/xhtml">If it needs to fetch that data from a server in the same data center, it takes the equivalent of 2 months. </span><span class="koboSpan" id="kobo.82.4" xmlns="http://www.w3.org/1999/xhtml">And if it is in California and the data is in the Netherlands, it takes the equivalent of 47½ years!</span></p>
<p class="normal"><span class="koboSpan" id="kobo.83.1" xmlns="http://www.w3.org/1999/xhtml">This is why caching is so important. </span><span class="koboSpan" id="kobo.83.2" xmlns="http://www.w3.org/1999/xhtml">Caching is about temporarily storing data as close to where it will be needed as possible.</span></p>
<h1 class="heading-1" id="_idParaDest-346"><span class="koboSpan" id="kobo.84.1" xmlns="http://www.w3.org/1999/xhtml">Caching with ASP.NET Core</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.85.1" xmlns="http://www.w3.org/1999/xhtml">Caching can </span><a id="_idIndexMarker863"/><span class="koboSpan" id="kobo.86.1" xmlns="http://www.w3.org/1999/xhtml">enable our systems to copy some data from a remote data center to a local data center, or from a server or disk to memory. </span><span class="koboSpan" id="kobo.86.2" xmlns="http://www.w3.org/1999/xhtml">Caches store data as key-value pairs.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.87.1" xmlns="http://www.w3.org/1999/xhtml">However, one of the</span><a id="_idIndexMarker864"/><span class="koboSpan" id="kobo.88.1" xmlns="http://www.w3.org/1999/xhtml"> hardest parts of caching is getting the balance right between storing enough data and keeping it fresh. </span><span class="koboSpan" id="kobo.88.2" xmlns="http://www.w3.org/1999/xhtml">The more data we copy, the more resources we use. </span><span class="koboSpan" id="kobo.88.3" xmlns="http://www.w3.org/1999/xhtml">And we need to consider how we will keep the copies synchronized with the original data.</span></p>
<h2 class="heading-2" id="_idParaDest-347"><span class="koboSpan" id="kobo.89.1" xmlns="http://www.w3.org/1999/xhtml">General caching guidelines</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.90.1" xmlns="http://www.w3.org/1999/xhtml">Caching works best </span><a id="_idIndexMarker865"/><span class="koboSpan" id="kobo.91.1" xmlns="http://www.w3.org/1999/xhtml">with data that costs a lot to generate and does not change often.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.92.1" xmlns="http://www.w3.org/1999/xhtml">Follow these guidelines when caching:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.93.1" xmlns="http://www.w3.org/1999/xhtml">Your code should never depend on cached data. </span><span class="koboSpan" id="kobo.93.2" xmlns="http://www.w3.org/1999/xhtml">It should always be able to get the data from the original source when the data is not found in the cache.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.94.1" xmlns="http://www.w3.org/1999/xhtml">Wherever you cache data (in-memory or in a database) it is a limited resource, so deliberately limit the amount of data cached and for how long by implementing expirations and size limits. </span><span class="koboSpan" id="kobo.94.2" xmlns="http://www.w3.org/1999/xhtml">You should monitor cache hits (when data is successfully found in the cache) to obtain the right balance for your specific scenarios.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.95.1" xmlns="http://www.w3.org/1999/xhtml">In the coding tasks in this section, you will implement all of these guidelines.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.96.1" xmlns="http://www.w3.org/1999/xhtml">Let’s start by reviewing the </span><a id="_idIndexMarker866"/><span class="koboSpan" id="kobo.97.1" xmlns="http://www.w3.org/1999/xhtml">caching technologies built-in to ASP.NET Core.</span></p>
<h2 class="heading-2" id="_idParaDest-348"><span class="koboSpan" id="kobo.98.1" xmlns="http://www.w3.org/1999/xhtml">Building a controller-based Web API service</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.99.1" xmlns="http://www.w3.org/1999/xhtml">To explore</span><a id="_idIndexMarker867"/><span class="koboSpan" id="kobo.100.1" xmlns="http://www.w3.org/1999/xhtml"> various caching technologies, let’s build </span><a id="_idIndexMarker868"/><span class="koboSpan" id="kobo.101.1" xmlns="http://www.w3.org/1999/xhtml">a basic web service:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.102.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a new Web API controller-based project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.103.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.104.1" xmlns="http://www.w3.org/1999/xhtml">ASP.NET Core Web API</span></strong><span class="koboSpan" id="kobo.105.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.106.1" xmlns="http://www.w3.org/1999/xhtml">webapi --use-controllers</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.107.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.108.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.109.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.110.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.111.1" xmlns="http://www.w3.org/1999/xhtml">Authentication type</span></strong><span class="koboSpan" id="kobo.112.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="screenText"><span class="koboSpan" id="kobo.113.1" xmlns="http://www.w3.org/1999/xhtml">None</span></strong></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.114.1" xmlns="http://www.w3.org/1999/xhtml">Configure for HTTPS</span></strong><span class="koboSpan" id="kobo.115.1" xmlns="http://www.w3.org/1999/xhtml">: Selected</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.116.1" xmlns="http://www.w3.org/1999/xhtml">Enable Docker</span></strong><span class="koboSpan" id="kobo.117.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.118.1" xmlns="http://www.w3.org/1999/xhtml">Use controllers</span></strong><span class="koboSpan" id="kobo.119.1" xmlns="http://www.w3.org/1999/xhtml">: Selected</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.120.1" xmlns="http://www.w3.org/1999/xhtml">Enable OpenAPI support</span></strong><span class="koboSpan" id="kobo.121.1" xmlns="http://www.w3.org/1999/xhtml">: Selected</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.122.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.123.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
</ul>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.124.1" xmlns="http://www.w3.org/1999/xhtml">Make sure to select the </span><strong class="screenText"><span class="koboSpan" id="kobo.125.1" xmlns="http://www.w3.org/1999/xhtml">Use controllers</span></strong><span class="koboSpan" id="kobo.126.1" xmlns="http://www.w3.org/1999/xhtml"> checkbox or specify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.127.1" xmlns="http://www.w3.org/1999/xhtml">--use-controllers</span></code><span class="koboSpan" id="kobo.128.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.129.1" xmlns="http://www.w3.org/1999/xhtml">-controllers</span></code><span class="koboSpan" id="kobo.130.1" xmlns="http://www.w3.org/1999/xhtml"> switch. </span><span class="koboSpan" id="kobo.130.2" xmlns="http://www.w3.org/1999/xhtml">We will not use minimal APIs, which is the default way a Web API is implemented using the .NET 8 project templates. </span><span class="koboSpan" id="kobo.130.3" xmlns="http://www.w3.org/1999/xhtml">If you use JetBrains Rider, you might want to use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.131.1" xmlns="http://www.w3.org/1999/xhtml">dotnet new</span></code><span class="koboSpan" id="kobo.132.1" xmlns="http://www.w3.org/1999/xhtml"> command until Rider supports a </span><strong class="screenText"><span class="koboSpan" id="kobo.133.1" xmlns="http://www.w3.org/1999/xhtml">Use controllers</span></strong><span class="koboSpan" id="kobo.134.1" xmlns="http://www.w3.org/1999/xhtml"> option.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="2"><span class="koboSpan" id="kobo.135.1" xmlns="http://www.w3.org/1999/xhtml">Add a project reference to the Northwind database context project for the SQL Server that you created in </span><em class="chapterRef"><span class="koboSpan" id="kobo.136.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 3</span></em><span class="koboSpan" id="kobo.137.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.138.1" xmlns="http://www.w3.org/1999/xhtml">Building Entity Models for SQL Server Using EF Core</span></em><span class="koboSpan" id="kobo.139.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.140.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.141.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.DataContext</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.142.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.DataContext.SqlServer.csproj"</span></span><span class="koboSpan" id="kobo.143.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.144.1" xmlns="http://www.w3.org/1999/xhtml">The path cannot have a line break. </span><span class="koboSpan" id="kobo.144.2" xmlns="http://www.w3.org/1999/xhtml">If you did not complete the task of creating the class libraries in </span><em class="chapterRef"><span class="koboSpan" id="kobo.145.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 3</span></em><span class="koboSpan" id="kobo.146.1" xmlns="http://www.w3.org/1999/xhtml">, then download the solution projects from the GitHub repository.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.147.1" xmlns="http://www.w3.org/1999/xhtml">In the project</span><a id="_idIndexMarker869"/><span class="koboSpan" id="kobo.148.1" xmlns="http://www.w3.org/1999/xhtml"> file, change invariant globalization to </span><code class="inlineCode"><span class="koboSpan" id="kobo.149.1" xmlns="http://www.w3.org/1999/xhtml">false</span></code><span class="koboSpan" id="kobo.150.1" xmlns="http://www.w3.org/1999/xhtml">, and treat warnings as errors, as shown</span><a id="_idIndexMarker870"/><span class="koboSpan" id="kobo.151.1" xmlns="http://www.w3.org/1999/xhtml"> in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.152.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk=</span><span class="hljs-string"><span class="koboSpan" id="kobo.153.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Sdk.Web"</span></span><span class="koboSpan" id="kobo.154.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.155.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.156.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;InvariantGlobalization&gt;</span><span class="code-highlight"><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.157.1" xmlns="http://www.w3.org/1999/xhtml">false</span></strong></span><span class="koboSpan" id="kobo.158.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/InvariantGlobalization&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.159.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.160.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.161.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.162.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.163.1" xmlns="http://www.w3.org/1999/xhtml">Explicitly setting invariant globalization to </span><code class="inlineCode"><span class="koboSpan" id="kobo.164.1" xmlns="http://www.w3.org/1999/xhtml">true</span></code><span class="koboSpan" id="kobo.165.1" xmlns="http://www.w3.org/1999/xhtml"> is new in the ASP.NET Core Web API project template with .NET 8. </span><span class="koboSpan" id="kobo.165.2" xmlns="http://www.w3.org/1999/xhtml">It is designed to make a web service non-culture-specific so that it can be deployed anywhere in the world and have the same behavior. </span><span class="koboSpan" id="kobo.165.3" xmlns="http://www.w3.org/1999/xhtml">By setting this property to </span><code class="inlineCode"><span class="koboSpan" id="kobo.166.1" xmlns="http://www.w3.org/1999/xhtml">false</span></code><span class="koboSpan" id="kobo.167.1" xmlns="http://www.w3.org/1999/xhtml">, the web service will default to the culture of the current computer it is hosted on. </span><span class="koboSpan" id="kobo.167.2" xmlns="http://www.w3.org/1999/xhtml">You can read more about invariant globalization mode at the following link: </span><a href="https://github.com/dotnet/runtime/blob/main/docs/design/features/globalization-invariant-mode.md"><span class="url"><span class="koboSpan" id="kobo.168.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/dotnet/runtime/blob/main/docs/design/features/globalization-invariant-mode.md</span></span></a><span class="koboSpan" id="kobo.169.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
</li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.170.1" xmlns="http://www.w3.org/1999/xhtml">At the command prompt or terminal, build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.171.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.172.1" xmlns="http://www.w3.org/1999/xhtml"> project to make sure the entity model class library projects outside the current solution are properly compiled, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.173.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.174.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.175.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></code><span class="koboSpan" id="kobo.176.1" xmlns="http://www.w3.org/1999/xhtml"> folder, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.177.1" xmlns="http://www.w3.org/1999/xhtml">launchSettings.json</span></code><span class="koboSpan" id="kobo.178.1" xmlns="http://www.w3.org/1999/xhtml">, modify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.179.1" xmlns="http://www.w3.org/1999/xhtml">applicationUrl</span></code><span class="koboSpan" id="kobo.180.1" xmlns="http://www.w3.org/1999/xhtml"> of </span><a id="_idIndexMarker871"/><span class="koboSpan" id="kobo.181.1" xmlns="http://www.w3.org/1999/xhtml">the profile named </span><code class="inlineCode"><span class="koboSpan" id="kobo.182.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.183.1" xmlns="http://www.w3.org/1999/xhtml"> to use port </span><code class="inlineCode"><span class="koboSpan" id="kobo.184.1" xmlns="http://www.w3.org/1999/xhtml">5091</span></code><span class="koboSpan" id="kobo.185.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.186.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.187.1" xmlns="http://www.w3.org/1999/xhtml"> and port </span><code class="inlineCode"><span class="koboSpan" id="kobo.188.1" xmlns="http://www.w3.org/1999/xhtml">5092</span></code><span class="koboSpan" id="kobo.189.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.190.1" xmlns="http://www.w3.org/1999/xhtml">http</span></code><span class="koboSpan" id="kobo.191.1" xmlns="http://www.w3.org/1999/xhtml">, as </span><a id="_idIndexMarker872"/><span class="koboSpan" id="kobo.192.1" xmlns="http://www.w3.org/1999/xhtml">highlighted in the following configuration:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-attr"><span class="koboSpan" id="kobo.193.1" xmlns="http://www.w3.org/1999/xhtml">"profiles"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.194.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.195.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span><span class="koboSpan" id="kobo.196.1" xmlns="http://www.w3.org/1999/xhtml">
  ...
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.197.1" xmlns="http://www.w3.org/1999/xhtml">"</span></strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.198.1" xmlns="http://www.w3.org/1999/xhtml">https"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.199.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.200.1" xmlns="http://www.w3.org/1999/xhtml">{</span></strong></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.201.1" xmlns="http://www.w3.org/1999/xhtml">"commandName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.202.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.203.1" xmlns="http://www.w3.org/1999/xhtml">"Project"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.204.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.205.1" xmlns="http://www.w3.org/1999/xhtml">"dotnetRunMessages"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.206.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.207.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.208.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.209.1" xmlns="http://www.w3.org/1999/xhtml">"launchBrowser"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.210.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.211.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.212.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.213.1" xmlns="http://www.w3.org/1999/xhtml">"launchUrl"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.214.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.215.1" xmlns="http://www.w3.org/1999/xhtml">"swagger"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.216.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.217.1" xmlns="http://www.w3.org/1999/xhtml">"applicationUrl"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.218.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.219.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:5091;http://localhost:5092"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.220.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.221.1" xmlns="http://www.w3.org/1999/xhtml">"environmentVariables"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.222.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.223.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.224.1" xmlns="http://www.w3.org/1999/xhtml">"ASPNETCORE_ENVIRONMENT"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.225.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.226.1" xmlns="http://www.w3.org/1999/xhtml">"Development"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.227.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.228.1" xmlns="http://www.w3.org/1999/xhtml">Visual Studio 2022 and JetBrains Rider will read this settings file and automatically run a web browser if </span><code class="inlineCode"><span class="koboSpan" id="kobo.229.1" xmlns="http://www.w3.org/1999/xhtml">launchBrowser</span></code><span class="koboSpan" id="kobo.230.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.231.1" xmlns="http://www.w3.org/1999/xhtml">true</span></code><span class="koboSpan" id="kobo.232.1" xmlns="http://www.w3.org/1999/xhtml">, and then navigate to the </span><code class="inlineCode"><span class="koboSpan" id="kobo.233.1" xmlns="http://www.w3.org/1999/xhtml">applicationUrl</span></code><span class="koboSpan" id="kobo.234.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.235.1" xmlns="http://www.w3.org/1999/xhtml">launchUrl</span></code><span class="koboSpan" id="kobo.236.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.236.2" xmlns="http://www.w3.org/1999/xhtml">Visual Studio Code and </span><code class="inlineCode"><span class="koboSpan" id="kobo.237.1" xmlns="http://www.w3.org/1999/xhtml">dotnet run</span></code><span class="koboSpan" id="kobo.238.1" xmlns="http://www.w3.org/1999/xhtml"> will not, so you will need to run a web browser and navigate manually to </span><a href="https://localhost:5091/swagger"><span class="url"><span class="koboSpan" id="kobo.239.1" xmlns="http://www.w3.org/1999/xhtml">https://localhost:5091/swagger</span></span></a><span class="koboSpan" id="kobo.240.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.241.1" xmlns="http://www.w3.org/1999/xhtml">Delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.242.1" xmlns="http://www.w3.org/1999/xhtml">WeatherForecast.cs</span></code><span class="koboSpan" id="kobo.243.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.244.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.245.1" xmlns="http://www.w3.org/1999/xhtml">Controllers</span></code><span class="koboSpan" id="kobo.246.1" xmlns="http://www.w3.org/1999/xhtml"> folder, delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.247.1" xmlns="http://www.w3.org/1999/xhtml">WeatherForecastController.cs</span></code><span class="koboSpan" id="kobo.248.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.249.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.250.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.251.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace to add the </span><code class="inlineCode"><span class="koboSpan" id="kobo.252.1" xmlns="http://www.w3.org/1999/xhtml">NorthwindContext</span></code><span class="koboSpan" id="kobo.253.1" xmlns="http://www.w3.org/1999/xhtml"> to configured services, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.254.1" xmlns="http://www.w3.org/1999/xhtml">using</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.255.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span></strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.256.1" xmlns="http://www.w3.org/1999/xhtml">// To use the AddNorthwindContext method.</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.257.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.258.1" xmlns="http://www.w3.org/1999/xhtml"> builder = WebApplication.CreateBuilder(args);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.259.1" xmlns="http://www.w3.org/1999/xhtml">// Add services to the container.</span></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.260.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddNorthwindContext();</span></strong></span><span class="koboSpan" id="kobo.261.1" xmlns="http://www.w3.org/1999/xhtml">
builder.Services.AddControllers();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.262.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.263.1" xmlns="http://www.w3.org/1999/xhtml">Controllers</span></code><span class="koboSpan" id="kobo.264.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.265.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.266.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.267.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.268.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.269.1" xmlns="http://www.w3.org/1999/xhtml">, modify its contents to define a controller-based Web API to work with products in the Northwind database, as we did for minimal APIs, as </span><a id="_idIndexMarker873"/><span class="koboSpan" id="kobo.270.1" xmlns="http://www.w3.org/1999/xhtml">shown in</span><a id="_idIndexMarker874"/><span class="koboSpan" id="kobo.271.1" xmlns="http://www.w3.org/1999/xhtml"> the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.272.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.273.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.AspNetCore.Mvc; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.274.1" xmlns="http://www.w3.org/1999/xhtml">// To use [HttpGet] and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.275.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.276.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.277.1" xmlns="http://www.w3.org/1999/xhtml">// To use NorthwindContext, Product.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.278.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.279.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service.Controllers</span></span><span class="koboSpan" id="kobo.280.1" xmlns="http://www.w3.org/1999/xhtml">;
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.281.1" xmlns="http://www.w3.org/1999/xhtml">Route(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.282.1" xmlns="http://www.w3.org/1999/xhtml">"api/products"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.283.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.284.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.285.1" xmlns="http://www.w3.org/1999/xhtml">ApiController</span></span><span class="koboSpan" id="kobo.286.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.287.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.288.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.289.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController</span></span><span class="koboSpan" id="kobo.290.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.291.1" xmlns="http://www.w3.org/1999/xhtml">ControllerBase</span></span><span class="koboSpan" id="kobo.292.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.293.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.294.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.295.1" xmlns="http://www.w3.org/1999/xhtml"> pageSize = </span><span class="hljs-number"><span class="koboSpan" id="kobo.296.1" xmlns="http://www.w3.org/1999/xhtml">10</span></span><span class="koboSpan" id="kobo.297.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.298.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.299.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.300.1" xmlns="http://www.w3.org/1999/xhtml"> ILogger&lt;ProductsController&gt; _logger;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.301.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.302.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.303.1" xmlns="http://www.w3.org/1999/xhtml"> NorthwindContext _db;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.304.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.305.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.306.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.307.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;ProductsController&gt; logger, </span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.308.1" xmlns="http://www.w3.org/1999/xhtml">    NorthwindContext context</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.309.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.310.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _logger = logger;
    _db = context;
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.311.1" xmlns="http://www.w3.org/1999/xhtml">// GET: api/products</span></span><span class="koboSpan" id="kobo.312.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.313.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet</span></span><span class="koboSpan" id="kobo.314.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.315.1" xmlns="http://www.w3.org/1999/xhtml">Produces(typeof(Product[</span></span><span class="koboSpan" id="kobo.316.1" xmlns="http://www.w3.org/1999/xhtml">]))]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.317.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.318.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.319.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.320.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.321.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.322.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.322.2" xmlns="http://www.w3.org/1999/xhtml">page</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.323.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.324.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.325.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.326.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products
      .Where(p =&gt; p.UnitsInStock &gt; </span><span class="hljs-number"><span class="koboSpan" id="kobo.327.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.328.1" xmlns="http://www.w3.org/1999/xhtml"> &amp;&amp; !p.Discontinued)
      .OrderBy(product =&gt; product.ProductId)
      .Skip(((page ?? </span><span class="hljs-number"><span class="koboSpan" id="kobo.329.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.330.1" xmlns="http://www.w3.org/1999/xhtml">) - </span><span class="hljs-number"><span class="koboSpan" id="kobo.331.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.332.1" xmlns="http://www.w3.org/1999/xhtml">) * pageSize)
      .Take(pageSize);
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.333.1" xmlns="http://www.w3.org/1999/xhtml">// GET: api/products/outofstock</span></span><span class="koboSpan" id="kobo.334.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.335.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet</span></span><span class="koboSpan" id="kobo.336.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.337.1" xmlns="http://www.w3.org/1999/xhtml">Route(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.338.1" xmlns="http://www.w3.org/1999/xhtml">"outofstock"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.339.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.340.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.341.1" xmlns="http://www.w3.org/1999/xhtml">Produces(typeof(Product[</span></span><span class="koboSpan" id="kobo.342.1" xmlns="http://www.w3.org/1999/xhtml">]))]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.343.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.344.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.345.1" xmlns="http://www.w3.org/1999/xhtml">GetOutOfStockProducts</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.346.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.347.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.348.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.349.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products
      .Where(p =&gt; p.UnitsInStock == </span><span class="hljs-number"><span class="koboSpan" id="kobo.350.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.351.1" xmlns="http://www.w3.org/1999/xhtml"> &amp;&amp; !p.Discontinued);
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.352.1" xmlns="http://www.w3.org/1999/xhtml">// GET: api/products/discontinued</span></span><span class="koboSpan" id="kobo.353.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.354.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet</span></span><span class="koboSpan" id="kobo.355.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.356.1" xmlns="http://www.w3.org/1999/xhtml">Route(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.357.1" xmlns="http://www.w3.org/1999/xhtml">"discontinued"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.358.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.359.1" xmlns="http://www.w3.org/1999/xhtml">]
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.360.1" xmlns="http://www.w3.org/1999/xhtml">Produces(typeof(Product[</span></span><span class="koboSpan" id="kobo.361.1" xmlns="http://www.w3.org/1999/xhtml">]))]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.362.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.363.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.364.1" xmlns="http://www.w3.org/1999/xhtml">GetDiscontinuedProducts</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.365.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.366.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.367.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.368.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products
      .Where(product =&gt; product.Discontinued);
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.369.1" xmlns="http://www.w3.org/1999/xhtml">// GET api/products/5</span></span><span class="koboSpan" id="kobo.370.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.371.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.372.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.373.1" xmlns="http://www.w3.org/1999/xhtml">{id:int}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.374.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.375.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.376.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.377.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="koboSpan" id="kobo.378.1" xmlns="http://www.w3.org/1999/xhtml"> ValueTask&lt;Product?&gt; Get(</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.379.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.380.1" xmlns="http://www.w3.org/1999/xhtml"> id)
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.381.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.382.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.383.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.FindAsync(id);
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.384.1" xmlns="http://www.w3.org/1999/xhtml">// GET api/products/cha</span></span><span class="koboSpan" id="kobo.385.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.386.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.387.1" xmlns="http://www.w3.org/1999/xhtml">"{name}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.388.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.389.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.390.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.391.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.392.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.393.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.394.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.395.1" xmlns="http://www.w3.org/1999/xhtml"> name</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.396.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.397.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.398.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.399.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.Where(p =&gt; p.ProductName.Contains(name));
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.400.1" xmlns="http://www.w3.org/1999/xhtml">// POST api/products</span></span><span class="koboSpan" id="kobo.401.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.402.1" xmlns="http://www.w3.org/1999/xhtml">HttpPost</span></span><span class="koboSpan" id="kobo.403.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.404.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.405.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.406.1" xmlns="http://www.w3.org/1999/xhtml"> Task&lt;IActionResult&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.407.1" xmlns="http://www.w3.org/1999/xhtml">Post</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.408.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.409.1" xmlns="http://www.w3.org/1999/xhtml">[FromBody] Product product</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.410.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.411.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _db.Products.Add(product);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.412.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.413.1" xmlns="http://www.w3.org/1999/xhtml"> _db.SaveChangesAsync();
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.414.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.415.1" xmlns="http://www.w3.org/1999/xhtml"> Created(</span><span class="hljs-string"><span class="koboSpan" id="kobo.416.1" xmlns="http://www.w3.org/1999/xhtml">$"api/products/</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.417.1" xmlns="http://www.w3.org/1999/xhtml">{product.ProductId}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.418.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.419.1" xmlns="http://www.w3.org/1999/xhtml">, product);
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.420.1" xmlns="http://www.w3.org/1999/xhtml">// PUT api/products/5</span></span><span class="koboSpan" id="kobo.421.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.422.1" xmlns="http://www.w3.org/1999/xhtml">HttpPut(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.423.1" xmlns="http://www.w3.org/1999/xhtml">"{id}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.424.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.425.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.426.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.427.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.428.1" xmlns="http://www.w3.org/1999/xhtml"> Task&lt;IActionResult&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.429.1" xmlns="http://www.w3.org/1999/xhtml">Put</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.430.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.431.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.432.1" xmlns="http://www.w3.org/1999/xhtml"> id, [FromBody] Product product</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.433.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.434.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    Product? </span><span class="koboSpan" id="kobo.434.2" xmlns="http://www.w3.org/1999/xhtml">foundProduct = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.435.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.436.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.FindAsync(id);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.437.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.438.1" xmlns="http://www.w3.org/1999/xhtml"> (foundProduct </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.439.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.440.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.441.1" xmlns="http://www.w3.org/1999/xhtml">) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.442.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.443.1" xmlns="http://www.w3.org/1999/xhtml"> NotFound();
    foundProduct.ProductName = product.ProductName;
    foundProduct.CategoryId = product.CategoryId;
    foundProduct.SupplierId = product.SupplierId;
    foundProduct.QuantityPerUnit = product.QuantityPerUnit;
    foundProduct.UnitsInStock = product.UnitsInStock;
    foundProduct.UnitsOnOrder = product.UnitsOnOrder;
    foundProduct.ReorderLevel = product.ReorderLevel;
    foundProduct.UnitPrice = product.UnitPrice;
    foundProduct.Discontinued = product.Discontinued;
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.444.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.445.1" xmlns="http://www.w3.org/1999/xhtml"> _db.SaveChangesAsync();
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.446.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.447.1" xmlns="http://www.w3.org/1999/xhtml"> NoContent();
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.448.1" xmlns="http://www.w3.org/1999/xhtml">// DELETE api/products/5</span></span><span class="koboSpan" id="kobo.449.1" xmlns="http://www.w3.org/1999/xhtml">
  [</span><span class="hljs-meta"><span class="koboSpan" id="kobo.450.1" xmlns="http://www.w3.org/1999/xhtml">HttpDelete(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.451.1" xmlns="http://www.w3.org/1999/xhtml">"{id}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.452.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.453.1" xmlns="http://www.w3.org/1999/xhtml">]
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.454.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.455.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.456.1" xmlns="http://www.w3.org/1999/xhtml"> Task&lt;IActionResult&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.457.1" xmlns="http://www.w3.org/1999/xhtml">Delete</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.458.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.459.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.460.1" xmlns="http://www.w3.org/1999/xhtml"> id</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.461.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.462.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.463.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.464.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.465.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.466.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.FindAsync(id) </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.467.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.468.1" xmlns="http://www.w3.org/1999/xhtml"> Product product)
    {
      _db.Products.Remove(product);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.469.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.470.1" xmlns="http://www.w3.org/1999/xhtml"> _db.SaveChangesAsync();
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.471.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.472.1" xmlns="http://www.w3.org/1999/xhtml"> NoContent();
    }
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.473.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.474.1" xmlns="http://www.w3.org/1999/xhtml"> NotFound();
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.475.1" xmlns="http://www.w3.org/1999/xhtml">If your database server is not running, for example, because you are hosting it in Docker, a virtual machine, or the cloud, then make sure to start it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.476.1" xmlns="http://www.w3.org/1999/xhtml">Start the web service project using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.477.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.478.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.479.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio 2022, then select the </span><strong class="screenText"><span class="koboSpan" id="kobo.480.1" xmlns="http://www.w3.org/1999/xhtml">https</span></strong><span class="koboSpan" id="kobo.481.1" xmlns="http://www.w3.org/1999/xhtml"> profile in the drop-down list, and then navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.482.1" xmlns="http://www.w3.org/1999/xhtml">Debug</span></strong><span class="koboSpan" id="kobo.483.1" xmlns="http://www.w3.org/1999/xhtml"> | </span><strong class="screenText"><span class="koboSpan" id="kobo.484.1" xmlns="http://www.w3.org/1999/xhtml">Start Without Debugging</span></strong><span class="koboSpan" id="kobo.485.1" xmlns="http://www.w3.org/1999/xhtml"> or press </span><em class="keystroke"><span class="koboSpan" id="kobo.486.1" xmlns="http://www.w3.org/1999/xhtml">Ctrl</span></em><span class="koboSpan" id="kobo.487.1" xmlns="http://www.w3.org/1999/xhtml"> + </span><em class="keystroke"><span class="koboSpan" id="kobo.488.1" xmlns="http://www.w3.org/1999/xhtml">F5</span></em><span class="koboSpan" id="kobo.489.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.489.2" xmlns="http://www.w3.org/1999/xhtml">A web browser should navigate to the Swagger documentation web page automatically.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.490.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio Code, then enter the command </span><code class="inlineCode"><span class="koboSpan" id="kobo.491.1" xmlns="http://www.w3.org/1999/xhtml">dotnet run --launch-profile https</span></code><span class="koboSpan" id="kobo.492.1" xmlns="http://www.w3.org/1999/xhtml">, manually start a web browser, and navigate to the Swagger documentation web page: </span><a href="https://localhost:5091/swagger"><span class="url"><span class="koboSpan" id="kobo.493.1" xmlns="http://www.w3.org/1999/xhtml">https://localhost:5091/swagger</span></span></a><span class="koboSpan" id="kobo.494.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.495.1" xmlns="http://www.w3.org/1999/xhtml">On Windows, if prompted to do so, you will have to set the Windows Defender Firewall to allow</span><a id="_idIndexMarker875"/><span class="koboSpan" id="kobo.496.1" xmlns="http://www.w3.org/1999/xhtml"> access to your local web service.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="13"><span class="koboSpan" id="kobo.497.1" xmlns="http://www.w3.org/1999/xhtml">Use Swagger to test </span><a id="_idIndexMarker876"/><span class="koboSpan" id="kobo.498.1" xmlns="http://www.w3.org/1999/xhtml">the various endpoints, and note the SQL statements logged to the output as you do so, for example:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.499.1" xmlns="http://www.w3.org/1999/xhtml">Get the first page of 10 products.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.500.1" xmlns="http://www.w3.org/1999/xhtml">Get the 6th page of 10 products.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.501.1" xmlns="http://www.w3.org/1999/xhtml">Get the product with an ID of 77.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.502.1" xmlns="http://www.w3.org/1999/xhtml">Get the single out-of-stock product.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.503.1" xmlns="http://www.w3.org/1999/xhtml">Get the seven discontinued products.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.504.1" xmlns="http://www.w3.org/1999/xhtml">Get products whose names start with </span><code class="inlineCode"><span class="koboSpan" id="kobo.505.1" xmlns="http://www.w3.org/1999/xhtml">cha</span></code><span class="koboSpan" id="kobo.506.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.507.1" xmlns="http://www.w3.org/1999/xhtml">Create (</span><code class="inlineCode"><span class="koboSpan" id="kobo.508.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.509.1" xmlns="http://www.w3.org/1999/xhtml">), update (</span><code class="inlineCode"><span class="koboSpan" id="kobo.510.1" xmlns="http://www.w3.org/1999/xhtml">PUT</span></code><span class="koboSpan" id="kobo.511.1" xmlns="http://www.w3.org/1999/xhtml">), and delete a product. </span><span class="koboSpan" id="kobo.511.2" xmlns="http://www.w3.org/1999/xhtml">For hints about how to perform these tests, read the following link: </span><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/ch09-swagger-tests.md"><span class="url"><span class="koboSpan" id="kobo.512.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/ch09-swagger-tests.md</span></span></a><span class="koboSpan" id="kobo.513.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
</li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.514.1" xmlns="http://www.w3.org/1999/xhtml">If you completed </span><em class="chapterRef"><span class="koboSpan" id="kobo.515.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 8</span></em><span class="koboSpan" id="kobo.516.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.517.1" xmlns="http://www.w3.org/1999/xhtml">Building and Securing Web Services Using Minimal APIs</span></em><span class="koboSpan" id="kobo.518.1" xmlns="http://www.w3.org/1999/xhtml">, then instead of manually using Swagger, you can use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.519.1" xmlns="http://www.w3.org/1999/xhtml">.http</span></code><span class="koboSpan" id="kobo.520.1" xmlns="http://www.w3.org/1999/xhtml"> files we created to test the minimal API web service. </span><span class="koboSpan" id="kobo.520.2" xmlns="http://www.w3.org/1999/xhtml">Just change the port from </span><code class="inlineCode"><span class="koboSpan" id="kobo.521.1" xmlns="http://www.w3.org/1999/xhtml">5081</span></code><span class="koboSpan" id="kobo.522.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.523.1" xmlns="http://www.w3.org/1999/xhtml">5091</span></code><span class="koboSpan" id="kobo.524.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.525.1" xmlns="http://www.w3.org/1999/xhtml">Now that we have a basic</span><a id="_idIndexMarker877"/><span class="koboSpan" id="kobo.526.1" xmlns="http://www.w3.org/1999/xhtml"> web service, we can start activating caching in it.</span></p>
<h2 class="heading-2" id="_idParaDest-349"><span class="koboSpan" id="kobo.527.1" xmlns="http://www.w3.org/1999/xhtml">Caching objects using in-memory caching</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.528.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.529.1" xmlns="http://www.w3.org/1999/xhtml">IMemoryCache</span></code><span class="koboSpan" id="kobo.530.1" xmlns="http://www.w3.org/1999/xhtml"> interface represents a cache that uses local server memory. </span><span class="koboSpan" id="kobo.530.2" xmlns="http://www.w3.org/1999/xhtml">If you have multiple servers</span><a id="_idIndexMarker878"/><span class="koboSpan" id="kobo.531.1" xmlns="http://www.w3.org/1999/xhtml"> hosting your service or website, then you must enable “sticky sessions.” </span><span class="koboSpan" id="kobo.531.2" xmlns="http://www.w3.org/1999/xhtml">This means that an incoming request from a client or visitor will be directed to the same server as previous </span><a id="_idIndexMarker879"/><span class="koboSpan" id="kobo.532.1" xmlns="http://www.w3.org/1999/xhtml">requests from that client or visitor, allowing the request to find the correct cached data in that server’s memory.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.533.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.534.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.Extensions.Caching.Memory</span></code><span class="koboSpan" id="kobo.535.1" xmlns="http://www.w3.org/1999/xhtml"> package has a modern implementation of </span><code class="inlineCode"><span class="koboSpan" id="kobo.536.1" xmlns="http://www.w3.org/1999/xhtml">IMemoryCache</span></code><span class="koboSpan" id="kobo.537.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.537.2" xmlns="http://www.w3.org/1999/xhtml">Avoid the older </span><code class="inlineCode"><span class="koboSpan" id="kobo.538.1" xmlns="http://www.w3.org/1999/xhtml">System.Runtime.Caching</span></code><span class="koboSpan" id="kobo.539.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.540.1" xmlns="http://www.w3.org/1999/xhtml">Sizes are defined using custom units. </span><span class="koboSpan" id="kobo.540.2" xmlns="http://www.w3.org/1999/xhtml">If you store simple </span><code class="inlineCode"><span class="koboSpan" id="kobo.541.1" xmlns="http://www.w3.org/1999/xhtml">string</span></code><span class="koboSpan" id="kobo.542.1" xmlns="http://www.w3.org/1999/xhtml"> values, then you could use the length of the string. </span><span class="koboSpan" id="kobo.542.2" xmlns="http://www.w3.org/1999/xhtml">If you don’t know the size, you could just use 1 unit for each entry to simply limit the number of entries.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.543.1" xmlns="http://www.w3.org/1999/xhtml">When you add an object to a cache, you should set an expiration. </span><span class="koboSpan" id="kobo.543.2" xmlns="http://www.w3.org/1999/xhtml">There are two types, absolute and sliding, and you can set one or the other, both, or neither:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.544.1" xmlns="http://www.w3.org/1999/xhtml">Absolute expiration</span></strong><span class="koboSpan" id="kobo.545.1" xmlns="http://www.w3.org/1999/xhtml">: This is a</span><a id="_idIndexMarker880"/><span class="koboSpan" id="kobo.546.1" xmlns="http://www.w3.org/1999/xhtml"> fixed date/time, for example, 1am on December 24, 2023. </span><span class="koboSpan" id="kobo.546.2" xmlns="http://www.w3.org/1999/xhtml">When the date/time is reached, the object is evicted. </span><span class="koboSpan" id="kobo.546.3" xmlns="http://www.w3.org/1999/xhtml">To use this, set the </span><code class="inlineCode"><span class="koboSpan" id="kobo.547.1" xmlns="http://www.w3.org/1999/xhtml">AbsoluteExpiration</span></code><span class="koboSpan" id="kobo.548.1" xmlns="http://www.w3.org/1999/xhtml"> property of a cache entry to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.549.1" xmlns="http://www.w3.org/1999/xhtml">DateTime</span></code><span class="koboSpan" id="kobo.550.1" xmlns="http://www.w3.org/1999/xhtml"> value. </span><span class="koboSpan" id="kobo.550.2" xmlns="http://www.w3.org/1999/xhtml">Choose this if you need to guarantee that at some point the data in the cache will be refreshed.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.551.1" xmlns="http://www.w3.org/1999/xhtml">Sliding expiration</span></strong><span class="koboSpan" id="kobo.552.1" xmlns="http://www.w3.org/1999/xhtml">: This is </span><a id="_idIndexMarker881"/><span class="koboSpan" id="kobo.553.1" xmlns="http://www.w3.org/1999/xhtml">a time span, for example, 20 seconds. </span><span class="koboSpan" id="kobo.553.2" xmlns="http://www.w3.org/1999/xhtml">When the time span expires, the object is evicted. </span><span class="koboSpan" id="kobo.553.3" xmlns="http://www.w3.org/1999/xhtml">However, whenever an object is read from the cache, its expiration is reset for another 20 seconds. </span><span class="koboSpan" id="kobo.553.4" xmlns="http://www.w3.org/1999/xhtml">This is </span><a id="_idIndexMarker882"/><span class="koboSpan" id="kobo.554.1" xmlns="http://www.w3.org/1999/xhtml">why it is described as </span><em class="italic"><span class="koboSpan" id="kobo.555.1" xmlns="http://www.w3.org/1999/xhtml">sliding</span></em><span class="koboSpan" id="kobo.556.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.556.2" xmlns="http://www.w3.org/1999/xhtml">A common</span><a id="_idIndexMarker883"/><span class="koboSpan" id="kobo.557.1" xmlns="http://www.w3.org/1999/xhtml"> duration for a </span><strong class="keyWord"><span class="koboSpan" id="kobo.558.1" xmlns="http://www.w3.org/1999/xhtml">Content Management System</span></strong><span class="koboSpan" id="kobo.559.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.560.1" xmlns="http://www.w3.org/1999/xhtml">CMS</span></strong><span class="koboSpan" id="kobo.561.1" xmlns="http://www.w3.org/1999/xhtml">), where content like a web page is loaded from a database, is 12 hours. </span><span class="koboSpan" id="kobo.561.2" xmlns="http://www.w3.org/1999/xhtml">Content frequently viewed by visitors, like the home page, is then likely to remain in memory. </span><span class="koboSpan" id="kobo.561.3" xmlns="http://www.w3.org/1999/xhtml">To use this, set the </span><code class="inlineCode"><span class="koboSpan" id="kobo.562.1" xmlns="http://www.w3.org/1999/xhtml">SlidingExpiration</span></code><span class="koboSpan" id="kobo.563.1" xmlns="http://www.w3.org/1999/xhtml"> property of a cache entry to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.564.1" xmlns="http://www.w3.org/1999/xhtml">TimeSpan</span></code><span class="koboSpan" id="kobo.565.1" xmlns="http://www.w3.org/1999/xhtml"> value. </span><span class="koboSpan" id="kobo.565.2" xmlns="http://www.w3.org/1999/xhtml">Choose this if it is acceptable for data to potentially never be refreshed. </span><span class="koboSpan" id="kobo.565.3" xmlns="http://www.w3.org/1999/xhtml">A good CMS will have an additional mechanism to reliably force a refresh when new content is published, but this functionality is not built into .NET caching.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.566.1" xmlns="http://www.w3.org/1999/xhtml">Both expirations</span></strong><span class="koboSpan" id="kobo.567.1" xmlns="http://www.w3.org/1999/xhtml">: If you only set a sliding expiration, an object may stay in the cache forever, so you might also want to set the </span><code class="inlineCode"><span class="koboSpan" id="kobo.568.1" xmlns="http://www.w3.org/1999/xhtml">AbsoluteExpirationRelativeToNow</span></code><span class="koboSpan" id="kobo.569.1" xmlns="http://www.w3.org/1999/xhtml"> property to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.570.1" xmlns="http://www.w3.org/1999/xhtml">TimeSpan</span></code><span class="koboSpan" id="kobo.571.1" xmlns="http://www.w3.org/1999/xhtml"> further in the future, after which the object should definitely be evicted. </span><span class="koboSpan" id="kobo.571.2" xmlns="http://www.w3.org/1999/xhtml">Choose this if you want the best of both worlds.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.572.1" xmlns="http://www.w3.org/1999/xhtml">Never</span></strong><span class="koboSpan" id="kobo.573.1" xmlns="http://www.w3.org/1999/xhtml">: You can set a cache entry to have a priority of </span><code class="inlineCode"><span class="koboSpan" id="kobo.574.1" xmlns="http://www.w3.org/1999/xhtml">CacheItemPriority.NeverRemove</span></code><span class="koboSpan" id="kobo.575.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.576.1" xmlns="http://www.w3.org/1999/xhtml">You can also configure a method to call back to when an object is evicted from the cache. </span><span class="koboSpan" id="kobo.576.2" xmlns="http://www.w3.org/1999/xhtml">This allows you to </span><a id="_idIndexMarker884"/><span class="koboSpan" id="kobo.577.1" xmlns="http://www.w3.org/1999/xhtml">execute some business logic to decide if you want to add the object back into the </span><a id="_idIndexMarker885"/><span class="koboSpan" id="kobo.578.1" xmlns="http://www.w3.org/1999/xhtml">cache, perhaps after refreshing it from the original data source. </span><span class="koboSpan" id="kobo.578.2" xmlns="http://www.w3.org/1999/xhtml">You do this by calling the </span><code class="inlineCode"><span class="koboSpan" id="kobo.579.1" xmlns="http://www.w3.org/1999/xhtml">RegisterPostEvictionCallback</span></code><span class="koboSpan" id="kobo.580.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.581.1" xmlns="http://www.w3.org/1999/xhtml">Let’s explore the in-memory cache:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.582.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.583.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.584.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.585.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.586.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace to work with the in-memory cache, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.587.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.588.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Extensions.Caching.Memory; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.589.1" xmlns="http://www.w3.org/1999/xhtml">// To use IMemoryCache and so on.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.590.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.591.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.592.1" xmlns="http://www.w3.org/1999/xhtml">, after the call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.593.1" xmlns="http://www.w3.org/1999/xhtml">CreateBuilder</span></code><span class="koboSpan" id="kobo.594.1" xmlns="http://www.w3.org/1999/xhtml">, in the section for configuring services, register an implementation for the in-memory cache, configured to store a maximum of 50 products, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.595.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddSingleton&lt;IMemoryCache&gt;(</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.596.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.597.1" xmlns="http://www.w3.org/1999/xhtml"> MemoryCache(
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.598.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.599.1" xmlns="http://www.w3.org/1999/xhtml"> MemoryCacheOptions
  {
    TrackStatistics = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.600.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.601.1" xmlns="http://www.w3.org/1999/xhtml">,
    SizeLimit = </span><span class="hljs-number"><span class="koboSpan" id="kobo.602.1" xmlns="http://www.w3.org/1999/xhtml">50</span></span> <span class="hljs-comment"><span class="koboSpan" id="kobo.603.1" xmlns="http://www.w3.org/1999/xhtml">// Products.</span></span><span class="koboSpan" id="kobo.604.1" xmlns="http://www.w3.org/1999/xhtml">
  }));
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.605.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.606.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.607.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace to work with the in-memory cache, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.608.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.609.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Extensions.Caching.Memory; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.610.1" xmlns="http://www.w3.org/1999/xhtml">// To use IMemoryCache.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.611.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.612.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.613.1" xmlns="http://www.w3.org/1999/xhtml">, declare some fields to store the in-memory cache and a key</span><a id="_idIndexMarker886"/><span class="koboSpan" id="kobo.614.1" xmlns="http://www.w3.org/1999/xhtml"> for the out-of-stock products, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.615.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.616.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.617.1" xmlns="http://www.w3.org/1999/xhtml"> IMemoryCache _memoryCache;</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.618.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.619.1" xmlns="http://www.w3.org/1999/xhtml">const</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.620.1" xmlns="http://www.w3.org/1999/xhtml">string</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.621.1" xmlns="http://www.w3.org/1999/xhtml"> OutOfStockProductsKey = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.622.1" xmlns="http://www.w3.org/1999/xhtml">"OOSP"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.623.1" xmlns="http://www.w3.org/1999/xhtml">;</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.624.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.625.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.626.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.627.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;ProductsController&gt; logger, </span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.628.1" xmlns="http://www.w3.org/1999/xhtml">  NorthwindContext context</span></span><span class="code-highlight"><strong class="hljs-params-slc"><span class="koboSpan" id="kobo.629.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-params-slc"><span class="koboSpan" id="kobo.630.1" xmlns="http://www.w3.org/1999/xhtml">  IMemoryCache memoryCache</span></strong></span><span class="hljs-function"><span class="koboSpan" id="kobo.631.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.632.1" xmlns="http://www.w3.org/1999/xhtml">
{
  _logger = logger;
  _db = context;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.633.1" xmlns="http://www.w3.org/1999/xhtml">  _memoryCache = memoryCache;</span></strong></span><span class="koboSpan" id="kobo.634.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.635.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.636.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.637.1" xmlns="http://www.w3.org/1999/xhtml">, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.638.1" xmlns="http://www.w3.org/1999/xhtml">GetOutOfStockProducts</span></code><span class="koboSpan" id="kobo.639.1" xmlns="http://www.w3.org/1999/xhtml"> action method, add statements to try to get the cached out-of-stock products, and if they are not cached, get </span><a id="_idIndexMarker887"/><span class="koboSpan" id="kobo.640.1" xmlns="http://www.w3.org/1999/xhtml">them from the database and set them in the cache, using a sliding expiration of five seconds, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.641.1" xmlns="http://www.w3.org/1999/xhtml">// GET: api/products/outofstock</span></span><span class="koboSpan" id="kobo.642.1" xmlns="http://www.w3.org/1999/xhtml">
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.643.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet</span></span><span class="koboSpan" id="kobo.644.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.645.1" xmlns="http://www.w3.org/1999/xhtml">Route(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.646.1" xmlns="http://www.w3.org/1999/xhtml">"outofstock"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.647.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.648.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.649.1" xmlns="http://www.w3.org/1999/xhtml">Produces(typeof(Product[</span></span><span class="koboSpan" id="kobo.650.1" xmlns="http://www.w3.org/1999/xhtml">]))]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.651.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.652.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.653.1" xmlns="http://www.w3.org/1999/xhtml">GetOutOfStockProducts</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.654.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.655.1" xmlns="http://www.w3.org/1999/xhtml">
{
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.656.1" xmlns="http://www.w3.org/1999/xhtml">// Try to get the cached value.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.657.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.658.1" xmlns="http://www.w3.org/1999/xhtml"> (!_memoryCache.TryGetValue(OutOfStockProductsKey,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.659.1" xmlns="http://www.w3.org/1999/xhtml">out</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.660.1" xmlns="http://www.w3.org/1999/xhtml"> Product[]? </span><span class="koboSpan" id="kobo.660.2" xmlns="http://www.w3.org/1999/xhtml">cachedValue))</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.661.1" xmlns="http://www.w3.org/1999/xhtml">  {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.662.1" xmlns="http://www.w3.org/1999/xhtml">// If the cached value is not found, get the value from the database.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.663.1" xmlns="http://www.w3.org/1999/xhtml">    cachedValue = _db.Products</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.664.1" xmlns="http://www.w3.org/1999/xhtml">      .Where(p =&gt; p.UnitsInStock == </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.665.1" xmlns="http://www.w3.org/1999/xhtml">0</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.666.1" xmlns="http://www.w3.org/1999/xhtml"> &amp;&amp; !p.Discontinued)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.667.1" xmlns="http://www.w3.org/1999/xhtml">      .ToArray();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.668.1" xmlns="http://www.w3.org/1999/xhtml">    MemoryCacheEntryOptions cacheEntryOptions = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.669.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.670.1" xmlns="http://www.w3.org/1999/xhtml">()</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.671.1" xmlns="http://www.w3.org/1999/xhtml">    {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.672.1" xmlns="http://www.w3.org/1999/xhtml">      SlidingExpiration = TimeSpan.FromSeconds(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.673.1" xmlns="http://www.w3.org/1999/xhtml">5</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.674.1" xmlns="http://www.w3.org/1999/xhtml">),</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.675.1" xmlns="http://www.w3.org/1999/xhtml">      Size = cachedValue?.Length</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.676.1" xmlns="http://www.w3.org/1999/xhtml">    };</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.677.1" xmlns="http://www.w3.org/1999/xhtml">    _memoryCache.Set(OutOfStockProductsKey, cachedValue, cacheEntryOptions);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.678.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.679.1" xmlns="http://www.w3.org/1999/xhtml">  MemoryCacheStatistics? </span><span class="koboSpan" id="kobo.679.2" xmlns="http://www.w3.org/1999/xhtml">stats = _memoryCache.GetCurrentStatistics();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.680.1" xmlns="http://www.w3.org/1999/xhtml">  _logger.LogInformation(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.681.1" xmlns="http://www.w3.org/1999/xhtml">"Memory cache. </span><span class="koboSpan" id="kobo.681.2" xmlns="http://www.w3.org/1999/xhtml">Total hits: {stats?</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.682.1" xmlns="http://www.w3.org/1999/xhtml">    .TotalHits}. </span><span class="koboSpan" id="kobo.682.2" xmlns="http://www.w3.org/1999/xhtml">Estimated size: {stats?.CurrentEstimatedSize}."</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.683.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.684.1" xmlns="http://www.w3.org/1999/xhtml">return</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.685.1" xmlns="http://www.w3.org/1999/xhtml"> cachedValue ?? </span><span class="koboSpan" id="kobo.685.2" xmlns="http://www.w3.org/1999/xhtml">Enumerable.Empty&lt;Product&gt;();</span></strong></span><span class="koboSpan" id="kobo.686.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.687.1" xmlns="http://www.w3.org/1999/xhtml">Start the web service project using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.688.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.689.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.690.1" xmlns="http://www.w3.org/1999/xhtml">Arrange the windows so that you can see the command prompt or terminal at the same</span><a id="_idIndexMarker888"/><span class="koboSpan" id="kobo.691.1" xmlns="http://www.w3.org/1999/xhtml"> time as the web page.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.692.1" xmlns="http://www.w3.org/1999/xhtml">On the Swagger web page, click </span><strong class="screenText"><span class="koboSpan" id="kobo.693.1" xmlns="http://www.w3.org/1999/xhtml">GET /api/product/outofstock</span></strong><span class="koboSpan" id="kobo.694.1" xmlns="http://www.w3.org/1999/xhtml"> to expand that section.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.695.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.696.1" xmlns="http://www.w3.org/1999/xhtml">Try it out</span></strong><span class="koboSpan" id="kobo.697.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.698.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.699.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.700.1" xmlns="http://www.w3.org/1999/xhtml"> button, and note in the output that EF Core executes a SQL statement to get</span><a id="_idIndexMarker889"/><span class="koboSpan" id="kobo.701.1" xmlns="http://www.w3.org/1999/xhtml"> the products, the total hit counter is zero, and one product has now been cached, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.702.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.WebApi.Service.Controllers.ProductsController[0]
      Memory cache. </span><span class="koboSpan" id="kobo.702.2" xmlns="http://www.w3.org/1999/xhtml">Total hits: 0. </span><span class="koboSpan" id="kobo.702.3" xmlns="http://www.w3.org/1999/xhtml">Estimated size: 1.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.703.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.704.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.705.1" xmlns="http://www.w3.org/1999/xhtml"> within five seconds, and continue to click it a few more times: </span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.706.1" xmlns="http://www.w3.org/1999/xhtml">Note that EF Core does not need to re-execute the SQL statement because the products are cached, and if something reads them within a five-second sliding expiration, they will stay in memory forever.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.707.1" xmlns="http://www.w3.org/1999/xhtml">Note the total hit counter for the cache increments each time the out-of-stock products are found in the cache, as shown in the following output:
            </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.708.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.WebApi.Service.Controllers.ProductsController[0]
      Memory cache. </span><span class="koboSpan" id="kobo.708.2" xmlns="http://www.w3.org/1999/xhtml">Total hits: 1. </span><span class="koboSpan" id="kobo.708.3" xmlns="http://www.w3.org/1999/xhtml">Estimated size: 1.
</span><span class="koboSpan" id="kobo.708.4" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.WebApi.Service.Controllers.ProductsController[0]
      Memory cache. </span><span class="koboSpan" id="kobo.708.5" xmlns="http://www.w3.org/1999/xhtml">Total hits: 2. </span><span class="koboSpan" id="kobo.708.6" xmlns="http://www.w3.org/1999/xhtml">Estimated size: 1.
</span><span class="koboSpan" id="kobo.708.7" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.WebApi.Service.Controllers.ProductsController[0]
      Memory cache. </span><span class="koboSpan" id="kobo.708.8" xmlns="http://www.w3.org/1999/xhtml">Total hits: 3. </span><span class="koboSpan" id="kobo.708.9" xmlns="http://www.w3.org/1999/xhtml">Estimated size: 1.
</span></code></pre>
</li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.709.1" xmlns="http://www.w3.org/1999/xhtml">Wait at least five seconds.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.710.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.711.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.712.1" xmlns="http://www.w3.org/1999/xhtml">, and note in the output that EF Core executes a SQL statement to get the products</span><a id="_idIndexMarker890"/><span class="koboSpan" id="kobo.713.1" xmlns="http://www.w3.org/1999/xhtml"> because they have not been read within the five-second sliding expiration window.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.714.1" xmlns="http://www.w3.org/1999/xhtml">Close </span><a id="_idIndexMarker891"/><span class="koboSpan" id="kobo.715.1" xmlns="http://www.w3.org/1999/xhtml">the browser and shut down the web server.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-350"><span class="koboSpan" id="kobo.716.1" xmlns="http://www.w3.org/1999/xhtml">Caching objects using distributed caching</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.717.1" xmlns="http://www.w3.org/1999/xhtml">Distributed caches have</span><a id="_idIndexMarker892"/><span class="koboSpan" id="kobo.718.1" xmlns="http://www.w3.org/1999/xhtml"> benefits over in-memory caches. </span><span class="koboSpan" id="kobo.718.2" xmlns="http://www.w3.org/1999/xhtml">Cached objects:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.719.1" xmlns="http://www.w3.org/1999/xhtml">Are consistent across requests to multiple servers.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.720.1" xmlns="http://www.w3.org/1999/xhtml">Survive server restarts and service deployments.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.721.1" xmlns="http://www.w3.org/1999/xhtml">Do not waste</span><a id="_idIndexMarker893"/><span class="koboSpan" id="kobo.722.1" xmlns="http://www.w3.org/1999/xhtml"> local server memory.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.723.1" xmlns="http://www.w3.org/1999/xhtml">Are stored in a shared area, so in a server farm scenario with multiple servers, you do not need to enable sticky sessions.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.724.1" xmlns="http://www.w3.org/1999/xhtml">Warning!</span></strong><span class="koboSpan" id="kobo.725.1" xmlns="http://www.w3.org/1999/xhtml"> A disadvantage of distributed caches is that in-memory caches can store any object, but a distributed cache can only store </span><code class="inlineCode"><span class="koboSpan" id="kobo.726.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></code><span class="koboSpan" id="kobo.727.1" xmlns="http://www.w3.org/1999/xhtml"> arrays. </span><span class="koboSpan" id="kobo.727.2" xmlns="http://www.w3.org/1999/xhtml">Your object needs to be serialized and sent across a network to the remote cache.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.728.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft provides the </span><code class="inlineCode"><span class="koboSpan" id="kobo.729.1" xmlns="http://www.w3.org/1999/xhtml">IDistributedCache</span></code><span class="koboSpan" id="kobo.730.1" xmlns="http://www.w3.org/1999/xhtml"> interface with pre-defined methods to manipulate items in any distributed cache implementation. </span><span class="koboSpan" id="kobo.730.2" xmlns="http://www.w3.org/1999/xhtml">The methods are:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.731.1" xmlns="http://www.w3.org/1999/xhtml">Set</span></code><span class="koboSpan" id="kobo.732.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.733.1" xmlns="http://www.w3.org/1999/xhtml">SetAsync</span></code><span class="koboSpan" id="kobo.734.1" xmlns="http://www.w3.org/1999/xhtml">: To store an object in the cache.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.735.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></code><span class="koboSpan" id="kobo.736.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.737.1" xmlns="http://www.w3.org/1999/xhtml">GetAsync</span></code><span class="koboSpan" id="kobo.738.1" xmlns="http://www.w3.org/1999/xhtml">: To retrieve an object from the cache.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.739.1" xmlns="http://www.w3.org/1999/xhtml">Remove</span></code><span class="koboSpan" id="kobo.740.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.741.1" xmlns="http://www.w3.org/1999/xhtml">RemoveAsync</span></code><span class="koboSpan" id="kobo.742.1" xmlns="http://www.w3.org/1999/xhtml">: To remove an object from the cache.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.743.1" xmlns="http://www.w3.org/1999/xhtml">Refresh</span></code><span class="koboSpan" id="kobo.744.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.745.1" xmlns="http://www.w3.org/1999/xhtml">RefreshAsync</span></code><span class="koboSpan" id="kobo.746.1" xmlns="http://www.w3.org/1999/xhtml">: To reset the sliding expiration for an object in the cache.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.747.1" xmlns="http://www.w3.org/1999/xhtml">There are many implementations</span><a id="_idIndexMarker894"/><span class="koboSpan" id="kobo.748.1" xmlns="http://www.w3.org/1999/xhtml"> of distributed caching to choose from, including the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.749.1" xmlns="http://www.w3.org/1999/xhtml">SQL Server: </span><a href="https://learn.microsoft.com/en-us/aspnet/core/performance/caching/distributed#distributed-sql-server-cache"><span class="url"><span class="koboSpan" id="kobo.750.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/aspnet/core/performance/caching/distributed#distributed-sql-server-cache</span></span></a></li>
<li class="bulletList"><span class="koboSpan" id="kobo.751.1" xmlns="http://www.w3.org/1999/xhtml">Redis: </span><a href="https://learn.microsoft.com/en-us/aspnet/core/performance/caching/distributed#distributed-redis-cache"><span class="url"><span class="koboSpan" id="kobo.752.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/aspnet/core/performance/caching/distributed#distributed-redis-cache</span></span></a></li>
<li class="bulletList"><span class="koboSpan" id="kobo.753.1" xmlns="http://www.w3.org/1999/xhtml">NCache: </span><a href="http://www.alachisoft.com/ncache/aspnet-core-idistributedcache-ncache.html"><span class="url"><span class="koboSpan" id="kobo.754.1" xmlns="http://www.w3.org/1999/xhtml">http://www.alachisoft.com/ncache/aspnet-core-idistributedcache-ncache.html</span></span></a></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.755.1" xmlns="http://www.w3.org/1999/xhtml">We will use the </span><strong class="keyWord"><span class="koboSpan" id="kobo.756.1" xmlns="http://www.w3.org/1999/xhtml">Distributed Memory Cache</span></strong><span class="koboSpan" id="kobo.757.1" xmlns="http://www.w3.org/1999/xhtml">, which</span><a id="_idIndexMarker895"/><span class="koboSpan" id="kobo.758.1" xmlns="http://www.w3.org/1999/xhtml"> is a Microsoft built-in implementation of </span><code class="inlineCode"><span class="koboSpan" id="kobo.759.1" xmlns="http://www.w3.org/1999/xhtml">IDistributedCache</span></code><span class="koboSpan" id="kobo.760.1" xmlns="http://www.w3.org/1999/xhtml"> that stores items in memory on the server where the service runs. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.761.1" xmlns="http://www.w3.org/1999/xhtml">It is not an actual distributed cache, but it is useful for scenarios like unit testing, where you want to remove the dependency on yet another external service, or while learning, as we are doing in this book. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.762.1" xmlns="http://www.w3.org/1999/xhtml">Later, you only need to </span><a id="_idIndexMarker896"/><span class="koboSpan" id="kobo.763.1" xmlns="http://www.w3.org/1999/xhtml">change the configured distributed cache, not the service implementation code that uses it, because all interactions go through the registered </span><code class="inlineCode"><span class="koboSpan" id="kobo.764.1" xmlns="http://www.w3.org/1999/xhtml">IDistributedCache</span></code><span class="koboSpan" id="kobo.765.1" xmlns="http://www.w3.org/1999/xhtml"> implementation.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.766.1" xmlns="http://www.w3.org/1999/xhtml">Let’s go!</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.767.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.768.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.769.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.770.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.771.1" xmlns="http://www.w3.org/1999/xhtml">, after the call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.772.1" xmlns="http://www.w3.org/1999/xhtml">CreateBuilder</span></code><span class="koboSpan" id="kobo.773.1" xmlns="http://www.w3.org/1999/xhtml">, in the section for configuring services, register the implementation for the distributed memory cache, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.774.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddDistributedMemoryCache();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.775.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.776.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.777.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for working with a distributed cache implementation and serialized JSON, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.778.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.779.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Extensions.Caching.Distributed; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.780.1" xmlns="http://www.w3.org/1999/xhtml">// To use IDistributedCache.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.781.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.782.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text.Json; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.783.1" xmlns="http://www.w3.org/1999/xhtml">// To use JsonSerializer.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.784.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.785.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.786.1" xmlns="http://www.w3.org/1999/xhtml">, declare some fields to store the distributed cache implementation</span><a id="_idIndexMarker897"/><span class="koboSpan" id="kobo.787.1" xmlns="http://www.w3.org/1999/xhtml"> and an item key for discontinued products, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.788.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.789.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.790.1" xmlns="http://www.w3.org/1999/xhtml"> IMemoryCache _memoryCache;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.791.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.792.1" xmlns="http://www.w3.org/1999/xhtml">const</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.793.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.794.1" xmlns="http://www.w3.org/1999/xhtml"> OutOfStockProductsKey = </span><span class="hljs-string"><span class="koboSpan" id="kobo.795.1" xmlns="http://www.w3.org/1999/xhtml">"OOSP"</span></span><span class="koboSpan" id="kobo.796.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.797.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.798.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.799.1" xmlns="http://www.w3.org/1999/xhtml"> IDistributedCache _distributedCache;</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.800.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.801.1" xmlns="http://www.w3.org/1999/xhtml">const</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.802.1" xmlns="http://www.w3.org/1999/xhtml">string</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.803.1" xmlns="http://www.w3.org/1999/xhtml"> DiscontinuedProductsKey = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.804.1" xmlns="http://www.w3.org/1999/xhtml">"DISCP"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.805.1" xmlns="http://www.w3.org/1999/xhtml">;</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.806.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.807.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.808.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.809.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;ProductsController&gt; logger,</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.810.1" xmlns="http://www.w3.org/1999/xhtml">  NorthwindContext context,</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.811.1" xmlns="http://www.w3.org/1999/xhtml">  IMemoryCache memoryCache</span></span><span class="code-highlight"><strong class="hljs-params-slc"><span class="koboSpan" id="kobo.812.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-params-slc"><span class="koboSpan" id="kobo.813.1" xmlns="http://www.w3.org/1999/xhtml">  IDistributedCache distributedCache</span></strong><strong class="hljs-function-slc"><span class="koboSpan" id="kobo.814.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong></span><span class="koboSpan" id="kobo.815.1" xmlns="http://www.w3.org/1999/xhtml">
{
  _logger = logger;
  _db = context;
  _memoryCache = memoryCache;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.816.1" xmlns="http://www.w3.org/1999/xhtml">  _distributedCache = distributedCache;</span></strong></span><span class="koboSpan" id="kobo.817.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.818.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.819.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.820.1" xmlns="http://www.w3.org/1999/xhtml">, define a </span><code class="inlineCode"><span class="koboSpan" id="kobo.821.1" xmlns="http://www.w3.org/1999/xhtml">private</span></code><span class="koboSpan" id="kobo.822.1" xmlns="http://www.w3.org/1999/xhtml"> method to get the discontinued products </span><a id="_idIndexMarker898"/><span class="koboSpan" id="kobo.823.1" xmlns="http://www.w3.org/1999/xhtml">from the database, and set them in the distributed cache, using a sliding expiration of 5 seconds and an absolute expiration of 20 seconds, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.824.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="koboSpan" id="kobo.825.1" xmlns="http://www.w3.org/1999/xhtml"> Product[]? </span><span class="koboSpan" id="kobo.825.2" xmlns="http://www.w3.org/1999/xhtml">GetDiscontinuedProductsFromDatabase()
{
  Product[]? </span><span class="koboSpan" id="kobo.825.3" xmlns="http://www.w3.org/1999/xhtml">cachedValue = _db.Products
    .Where(product =&gt; product.Discontinued)
    .ToArray();
  DistributedCacheEntryOptions cacheEntryOptions = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.826.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.827.1" xmlns="http://www.w3.org/1999/xhtml">()
  {
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.828.1" xmlns="http://www.w3.org/1999/xhtml">// Allow readers to reset the cache entry's lifetime.</span></span><span class="koboSpan" id="kobo.829.1" xmlns="http://www.w3.org/1999/xhtml">
    SlidingExpiration = TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.830.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.831.1" xmlns="http://www.w3.org/1999/xhtml">),
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.832.1" xmlns="http://www.w3.org/1999/xhtml">// Set an absolute expiration time for the cache entry.</span></span><span class="koboSpan" id="kobo.833.1" xmlns="http://www.w3.org/1999/xhtml">
    AbsoluteExpirationRelativeToNow = TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.834.1" xmlns="http://www.w3.org/1999/xhtml">20</span></span><span class="koboSpan" id="kobo.835.1" xmlns="http://www.w3.org/1999/xhtml">),
  };
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.836.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></span><span class="koboSpan" id="kobo.837.1" xmlns="http://www.w3.org/1999/xhtml">[]? </span><span class="koboSpan" id="kobo.837.2" xmlns="http://www.w3.org/1999/xhtml">cachedValueBytes = 
    JsonSerializer.SerializeToUtf8Bytes(cachedValue);
  _distributedCache.Set(DiscontinuedProductsKey,
    cachedValueBytes, cacheEntryOptions);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.838.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.839.1" xmlns="http://www.w3.org/1999/xhtml"> cachedValue;
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.840.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.841.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.842.1" xmlns="http://www.w3.org/1999/xhtml">, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.843.1" xmlns="http://www.w3.org/1999/xhtml">GetDiscontinuedProducts</span></code><span class="koboSpan" id="kobo.844.1" xmlns="http://www.w3.org/1999/xhtml"> action method, add </span><a id="_idIndexMarker899"/><span class="koboSpan" id="kobo.845.1" xmlns="http://www.w3.org/1999/xhtml">statements to try to get the cached discontinued products, and if not cached, get them from the database. </span><span class="koboSpan" id="kobo.845.2" xmlns="http://www.w3.org/1999/xhtml">If a </span><code class="inlineCode"><span class="koboSpan" id="kobo.846.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></code><span class="koboSpan" id="kobo.847.1" xmlns="http://www.w3.org/1999/xhtml"> array is found in the cache, try to deserialize it</span><a id="_idIndexMarker900"/><span class="koboSpan" id="kobo.848.1" xmlns="http://www.w3.org/1999/xhtml"> into products, but if that fails too, get the products from the database, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.849.1" xmlns="http://www.w3.org/1999/xhtml">// GET: api/products/discontinued</span></span><span class="koboSpan" id="kobo.850.1" xmlns="http://www.w3.org/1999/xhtml">
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.851.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet</span></span><span class="koboSpan" id="kobo.852.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.853.1" xmlns="http://www.w3.org/1999/xhtml">Route("discontinued")</span></span><span class="koboSpan" id="kobo.854.1" xmlns="http://www.w3.org/1999/xhtml">]
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.855.1" xmlns="http://www.w3.org/1999/xhtml">Produces(typeof(Product[</span></span><span class="koboSpan" id="kobo.856.1" xmlns="http://www.w3.org/1999/xhtml">]))]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.857.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.858.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.859.1" xmlns="http://www.w3.org/1999/xhtml">GetDiscontinuedProducts</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.860.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.861.1" xmlns="http://www.w3.org/1999/xhtml">
{
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.862.1" xmlns="http://www.w3.org/1999/xhtml">// Try to get the cached value.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.863.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.864.1" xmlns="http://www.w3.org/1999/xhtml">[]? </span><span class="koboSpan" id="kobo.864.2" xmlns="http://www.w3.org/1999/xhtml">cachedValueBytes = _distributedCache.Get(DiscontinuedProductsKey);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.865.1" xmlns="http://www.w3.org/1999/xhtml">  Product[]? </span><span class="koboSpan" id="kobo.865.2" xmlns="http://www.w3.org/1999/xhtml">cachedValue = </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.866.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.867.1" xmlns="http://www.w3.org/1999/xhtml">;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.868.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.869.1" xmlns="http://www.w3.org/1999/xhtml"> (cachedValueBytes </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.870.1" xmlns="http://www.w3.org/1999/xhtml">is</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.871.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.872.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.873.1" xmlns="http://www.w3.org/1999/xhtml">  {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.874.1" xmlns="http://www.w3.org/1999/xhtml">    cachedValue = GetDiscontinuedProductsFromDatabase();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.875.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.876.1" xmlns="http://www.w3.org/1999/xhtml">else</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.877.1" xmlns="http://www.w3.org/1999/xhtml">  {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.878.1" xmlns="http://www.w3.org/1999/xhtml">    cachedValue = JsonSerializer</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.879.1" xmlns="http://www.w3.org/1999/xhtml">      .Deserialize&lt;Product[]?&gt;(cachedValueBytes);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.880.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.881.1" xmlns="http://www.w3.org/1999/xhtml"> (cachedValue </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.882.1" xmlns="http://www.w3.org/1999/xhtml">is</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.883.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.884.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.885.1" xmlns="http://www.w3.org/1999/xhtml">    {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.886.1" xmlns="http://www.w3.org/1999/xhtml">      cachedValue = GetDiscontinuedProductsFromDatabase();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.887.1" xmlns="http://www.w3.org/1999/xhtml">    }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.888.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.889.1" xmlns="http://www.w3.org/1999/xhtml">return</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.890.1" xmlns="http://www.w3.org/1999/xhtml"> cachedValue ?? </span><span class="koboSpan" id="kobo.890.2" xmlns="http://www.w3.org/1999/xhtml">Enumerable.Empty&lt;Product&gt;();</span></strong></span><span class="koboSpan" id="kobo.891.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.892.1" xmlns="http://www.w3.org/1999/xhtml">Unlike the in-memory cache that can store any live object, objects stored in distributed cache implementations must be serialized into </span><code class="inlineCode"><span class="koboSpan" id="kobo.893.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></code><span class="koboSpan" id="kobo.894.1" xmlns="http://www.w3.org/1999/xhtml"> arrays because they need to be transmittable across networks.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="6"><span class="koboSpan" id="kobo.895.1" xmlns="http://www.w3.org/1999/xhtml">Start the web</span><a id="_idIndexMarker901"/><span class="koboSpan" id="kobo.896.1" xmlns="http://www.w3.org/1999/xhtml"> service project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.897.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.898.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.899.1" xmlns="http://www.w3.org/1999/xhtml">Arrange the windows so that you can see the command prompt or terminal at the same time as the web page.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.900.1" xmlns="http://www.w3.org/1999/xhtml">On the Swagger web page, click </span><strong class="screenText"><span class="koboSpan" id="kobo.901.1" xmlns="http://www.w3.org/1999/xhtml">GET /api/product/discontinued</span></strong><span class="koboSpan" id="kobo.902.1" xmlns="http://www.w3.org/1999/xhtml"> to expand that section.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.903.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.904.1" xmlns="http://www.w3.org/1999/xhtml">Try it out</span></strong><span class="koboSpan" id="kobo.905.1" xmlns="http://www.w3.org/1999/xhtml"> button.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.906.1" xmlns="http://www.w3.org/1999/xhtml">Click the </span><strong class="screenText"><span class="koboSpan" id="kobo.907.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.908.1" xmlns="http://www.w3.org/1999/xhtml"> button, and note in the output that EF Core executes a SQL statement </span><a id="_idIndexMarker902"/><span class="koboSpan" id="kobo.909.1" xmlns="http://www.w3.org/1999/xhtml">to get the products.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.910.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.911.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.912.1" xmlns="http://www.w3.org/1999/xhtml"> within five seconds, continue to click it a few more times, and note that EF Core does not need to re-execute the SQL statement because the products are cached. </span><span class="koboSpan" id="kobo.912.2" xmlns="http://www.w3.org/1999/xhtml">If something reads them within a five-second sliding expiration, they will stay in memory forever.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.913.1" xmlns="http://www.w3.org/1999/xhtml">Wait at least five seconds.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.914.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.915.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.916.1" xmlns="http://www.w3.org/1999/xhtml">, and note in the output that EF Core executes a SQL statement to get the products because they have not been read within the five-second sliding expiration window.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.917.1" xmlns="http://www.w3.org/1999/xhtml">Continue to click </span><strong class="screenText"><span class="koboSpan" id="kobo.918.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></strong><span class="koboSpan" id="kobo.919.1" xmlns="http://www.w3.org/1999/xhtml"> repeatedly, and note that after 20 seconds, EF Core must </span><a id="_idIndexMarker903"/><span class="koboSpan" id="kobo.920.1" xmlns="http://www.w3.org/1999/xhtml">execute a SQL statement to refresh the products.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.921.1" xmlns="http://www.w3.org/1999/xhtml">Close the browser and shut down the web server.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-351"><span class="koboSpan" id="kobo.922.1" xmlns="http://www.w3.org/1999/xhtml">A new abstraction for distributed caching</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.923.1" xmlns="http://www.w3.org/1999/xhtml">The ASP.NET Core team is</span><a id="_idIndexMarker904"/><span class="koboSpan" id="kobo.924.1" xmlns="http://www.w3.org/1999/xhtml"> working on adding a new abstraction for distributed caching to make it easier to use. </span><span class="koboSpan" id="kobo.924.2" xmlns="http://www.w3.org/1999/xhtml">It is not expected to be ready for .NET 8. </span><span class="koboSpan" id="kobo.924.3" xmlns="http://www.w3.org/1999/xhtml">It might be included in a point release, like 8.1, but more likely will be built-in with .NET 9.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.925.1" xmlns="http://www.w3.org/1999/xhtml">Some </span><code class="inlineCode"><span class="koboSpan" id="kobo.926.1" xmlns="http://www.w3.org/1999/xhtml">GetAsync</span></code><span class="koboSpan" id="kobo.927.1" xmlns="http://www.w3.org/1999/xhtml"> extension methods and supporting methods have been written by Marc Gravell. </span><span class="koboSpan" id="kobo.927.2" xmlns="http://www.w3.org/1999/xhtml">He maintains the most popular package to integrate .NET with Redis, so he has a lot of experience with distributed caching. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.928.1" xmlns="http://www.w3.org/1999/xhtml">While we wait for an official implementation, you can read or download the source code to his extensions at the following link: </span><a href="https://github.com/mgravell/DistributedCacheDemo/blob/main/DistributedCacheExtensions.cs"><span class="url"><span class="koboSpan" id="kobo.929.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/mgravell/DistributedCacheDemo/blob/main/DistributedCacheExtensions.cs</span></span></a><span class="koboSpan" id="kobo.930.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.930.2" xmlns="http://www.w3.org/1999/xhtml">The file is only 137 lines long, so it is easy to add to your own projects straight away.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.931.1" xmlns="http://www.w3.org/1999/xhtml">The main difference in the new extension methods is that you do not need to call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.932.1" xmlns="http://www.w3.org/1999/xhtml">Set</span></code><span class="koboSpan" id="kobo.933.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.934.1" xmlns="http://www.w3.org/1999/xhtml">SetAsync</span></code><span class="koboSpan" id="kobo.935.1" xmlns="http://www.w3.org/1999/xhtml"> methods anymore because they are abstracted away inside the new </span><code class="inlineCode"><span class="koboSpan" id="kobo.936.1" xmlns="http://www.w3.org/1999/xhtml">GetAsync</span></code><span class="koboSpan" id="kobo.937.1" xmlns="http://www.w3.org/1999/xhtml"> methods, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.938.1" xmlns="http://www.w3.org/1999/xhtml">// IDistributedCache methods.</span></span><span class="koboSpan" id="kobo.939.1" xmlns="http://www.w3.org/1999/xhtml">
objectFromDatabase = GetFromDatabase(...);
cache.Set(key: </span><span class="hljs-string"><span class="koboSpan" id="kobo.940.1" xmlns="http://www.w3.org/1999/xhtml">"ITEM_KEY"</span></span><span class="koboSpan" id="kobo.941.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.942.1" xmlns="http://www.w3.org/1999/xhtml">value</span></span><span class="koboSpan" id="kobo.943.1" xmlns="http://www.w3.org/1999/xhtml">: objectFromDatabase, options: ...);
dataFromCache = cache.Get(key: </span><span class="hljs-string"><span class="koboSpan" id="kobo.944.1" xmlns="http://www.w3.org/1999/xhtml">"ITEM_KEY"</span></span><span class="koboSpan" id="kobo.945.1" xmlns="http://www.w3.org/1999/xhtml">);
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.946.1" xmlns="http://www.w3.org/1999/xhtml">// New extension methods.</span></span><span class="koboSpan" id="kobo.947.1" xmlns="http://www.w3.org/1999/xhtml">
dataFromCache = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.948.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.949.1" xmlns="http://www.w3.org/1999/xhtml"> cache.GetAsync(key: </span><span class="hljs-string"><span class="koboSpan" id="kobo.950.1" xmlns="http://www.w3.org/1999/xhtml">"ITEM_KEY"</span></span><span class="koboSpan" id="kobo.951.1" xmlns="http://www.w3.org/1999/xhtml">,
  getMethod: GetFromDatabase(...), options: ..., cancellation: ...);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.952.1" xmlns="http://www.w3.org/1999/xhtml">Also, note that the new extension methods are all asynchronous and generic, with a type </span><code class="inlineCode"><span class="koboSpan" id="kobo.953.1" xmlns="http://www.w3.org/1999/xhtml">T</span></code><span class="koboSpan" id="kobo.954.1" xmlns="http://www.w3.org/1999/xhtml"> that will be serialized as JSON by default, but this can be overridden to use alternatives like the</span><a id="_idIndexMarker905"/><span class="koboSpan" id="kobo.955.1" xmlns="http://www.w3.org/1999/xhtml"> binary format protobuf.</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.956.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.957.1" xmlns="http://www.w3.org/1999/xhtml">: You can learn more about the plans for these new extension methods at the following link: </span><a href="https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/"><span class="url"><span class="koboSpan" id="kobo.958.1" xmlns="http://www.w3.org/1999/xhtml">https://devblogs.microsoft.com/dotnet/caching-abstraction-improvements-in-aspnetcore/</span></span></a><span class="koboSpan" id="kobo.959.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-352"><span class="koboSpan" id="kobo.960.1" xmlns="http://www.w3.org/1999/xhtml">Caching web responses using HTTP caching</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.961.1" xmlns="http://www.w3.org/1999/xhtml">In-memory and </span><a id="_idIndexMarker906"/><span class="koboSpan" id="kobo.962.1" xmlns="http://www.w3.org/1999/xhtml">distributed caching work with any type of app or service, using any transport technology, because all the magic </span><a id="_idIndexMarker907"/><span class="koboSpan" id="kobo.963.1" xmlns="http://www.w3.org/1999/xhtml">happens on the server.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.964.1" xmlns="http://www.w3.org/1999/xhtml">Response aka HTTP </span><a id="_idIndexMarker908"/><span class="koboSpan" id="kobo.965.1" xmlns="http://www.w3.org/1999/xhtml">caching is tied to HTTP GET requests and responses because it is based on HTTP headers. </span><span class="koboSpan" id="kobo.965.2" xmlns="http://www.w3.org/1999/xhtml">Therefore, it only works with apps and services that use HTTP as their transport technology, like web services built using Web APIs, minimal APIs, and OData.</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.966.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.967.1" xmlns="http://www.w3.org/1999/xhtml">: You can</span><a id="_idIndexMarker909"/><span class="koboSpan" id="kobo.968.1" xmlns="http://www.w3.org/1999/xhtml"> read the official standard for HTTP caching at the following link: </span><a href="https://www.rfc-editor.org/rfc/rfc9111"><span class="url"><span class="koboSpan" id="kobo.969.1" xmlns="http://www.w3.org/1999/xhtml">https://www.rfc-editor.org/rfc/rfc9111</span></span></a><span class="koboSpan" id="kobo.970.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.971.1" xmlns="http://www.w3.org/1999/xhtml">Requirements for HTTP aka response caching include the following:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.972.1" xmlns="http://www.w3.org/1999/xhtml">The request must be a </span><code class="inlineCode"><span class="koboSpan" id="kobo.973.1" xmlns="http://www.w3.org/1999/xhtml">GET</span></code><span class="koboSpan" id="kobo.974.1" xmlns="http://www.w3.org/1999/xhtml"> or </span><code class="inlineCode"><span class="koboSpan" id="kobo.975.1" xmlns="http://www.w3.org/1999/xhtml">HEAD</span></code><span class="koboSpan" id="kobo.976.1" xmlns="http://www.w3.org/1999/xhtml"> one. </span><code class="inlineCode"><span class="koboSpan" id="kobo.977.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.978.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.979.1" xmlns="http://www.w3.org/1999/xhtml">PUT</span></code><span class="koboSpan" id="kobo.980.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.981.1" xmlns="http://www.w3.org/1999/xhtml">DELETE</span></code><span class="koboSpan" id="kobo.982.1" xmlns="http://www.w3.org/1999/xhtml"> requests, and so on, are never cached by HTTP caching.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.983.1" xmlns="http://www.w3.org/1999/xhtml">The response must have a </span><code class="inlineCode"><span class="koboSpan" id="kobo.984.1" xmlns="http://www.w3.org/1999/xhtml">200 OK</span></code><span class="koboSpan" id="kobo.985.1" xmlns="http://www.w3.org/1999/xhtml"> status code.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.986.1" xmlns="http://www.w3.org/1999/xhtml">If the request has an </span><code class="inlineCode"><span class="koboSpan" id="kobo.987.1" xmlns="http://www.w3.org/1999/xhtml">Authorization</span></code><span class="koboSpan" id="kobo.988.1" xmlns="http://www.w3.org/1999/xhtml"> header, then the response is not cached.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.989.1" xmlns="http://www.w3.org/1999/xhtml">If the request has a </span><code class="inlineCode"><span class="koboSpan" id="kobo.990.1" xmlns="http://www.w3.org/1999/xhtml">Vary</span></code><span class="koboSpan" id="kobo.991.1" xmlns="http://www.w3.org/1999/xhtml"> header, then the response is not cached when the values are not valid or </span><code class="inlineCode"><span class="koboSpan" id="kobo.992.1" xmlns="http://www.w3.org/1999/xhtml">*</span></code><span class="koboSpan" id="kobo.993.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.994.1" xmlns="http://www.w3.org/1999/xhtml">The web server sets</span><a id="_idIndexMarker910"/><span class="koboSpan" id="kobo.995.1" xmlns="http://www.w3.org/1999/xhtml"> response caching headers, and then intermediate proxies and clients should respect the headers to tell them how they should cache the responses.</span></p>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.996.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.997.1" xmlns="http://www.w3.org/1999/xhtml">: Response aka HTTP caching is not typically useful for web user interfaces because web browsers often set request headers that prevent HTTP caching. </span><span class="koboSpan" id="kobo.997.2" xmlns="http://www.w3.org/1999/xhtml">For web user interfaces, output caching is better suited, and we will cover that in </span><em class="chapterRef"><span class="koboSpan" id="kobo.998.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 14</span></em><span class="koboSpan" id="kobo.999.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.1000.1" xmlns="http://www.w3.org/1999/xhtml">Building Web User Interfaces Using ASP.NET Core</span></em><span class="koboSpan" id="kobo.1001.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1002.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.1003.1" xmlns="http://www.w3.org/1999/xhtml">Cache-Control</span></code><span class="koboSpan" id="kobo.1004.1" xmlns="http://www.w3.org/1999/xhtml"> HTTP </span><a id="_idIndexMarker911"/><span class="koboSpan" id="kobo.1005.1" xmlns="http://www.w3.org/1999/xhtml">header for requests and responses has some common directives, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1006.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.2</span></em><span class="koboSpan" id="kobo.1007.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table002-7">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1008.1" xmlns="http://www.w3.org/1999/xhtml">Directive</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1009.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1010.1" xmlns="http://www.w3.org/1999/xhtml">public</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1011.1" xmlns="http://www.w3.org/1999/xhtml">Clients and intermediaries can cache this response.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1012.1" xmlns="http://www.w3.org/1999/xhtml">private</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1013.1" xmlns="http://www.w3.org/1999/xhtml">Only a client should cache this response. </span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1014.1" xmlns="http://www.w3.org/1999/xhtml">max-age</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1015.1" xmlns="http://www.w3.org/1999/xhtml">The client does not accept responses older than the specified number of seconds.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1016.1" xmlns="http://www.w3.org/1999/xhtml">no-cache</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1017.1" xmlns="http://www.w3.org/1999/xhtml">A client request is asking for a non-cached response. </span><span class="koboSpan" id="kobo.1017.2" xmlns="http://www.w3.org/1999/xhtml">A server is telling the client and intermediaries not the cache the response.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1018.1" xmlns="http://www.w3.org/1999/xhtml">no-store</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1019.1" xmlns="http://www.w3.org/1999/xhtml">A cache must not store the request or response.</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1020.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.2: Common Cache-Control HTTP header directives</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1021.1" xmlns="http://www.w3.org/1999/xhtml">As well as </span><code class="inlineCode"><span class="koboSpan" id="kobo.1022.1" xmlns="http://www.w3.org/1999/xhtml">Cache-Control</span></code><span class="koboSpan" id="kobo.1023.1" xmlns="http://www.w3.org/1999/xhtml">, there </span><a id="_idIndexMarker912"/><span class="koboSpan" id="kobo.1024.1" xmlns="http://www.w3.org/1999/xhtml">are other headers that might affect caching, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1025.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.3</span></em><span class="koboSpan" id="kobo.1026.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table003-6">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1027.1" xmlns="http://www.w3.org/1999/xhtml">Header</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1028.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1029.1" xmlns="http://www.w3.org/1999/xhtml">Age</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1030.1" xmlns="http://www.w3.org/1999/xhtml">Estimated number of seconds old the response is.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1031.1" xmlns="http://www.w3.org/1999/xhtml">Expires</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1032.1" xmlns="http://www.w3.org/1999/xhtml">An absolute date/time after which the response should be considered expired.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1033.1" xmlns="http://www.w3.org/1999/xhtml">Vary</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1034.1" xmlns="http://www.w3.org/1999/xhtml">All fields must match for a cached response to be sent. </span><span class="koboSpan" id="kobo.1034.2" xmlns="http://www.w3.org/1999/xhtml">Otherwise, a fresh response is sent. </span><span class="koboSpan" id="kobo.1034.3" xmlns="http://www.w3.org/1999/xhtml">For example, a query string of </span><code class="inlineCode"><span class="koboSpan" id="kobo.1035.1" xmlns="http://www.w3.org/1999/xhtml">color</span></code><span class="koboSpan" id="kobo.1036.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1037.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.3: Common HTTP headers for caching</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1038.1" xmlns="http://www.w3.org/1999/xhtml">For example, a client could ask for a fresh list of discontinued products, and the service should not use any cached version, as shown in the following HTTP response:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1039.1" xmlns="http://www.w3.org/1999/xhtml">GET api/products/discontinued
Cache-Control: no-cache
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1040.1" xmlns="http://www.w3.org/1999/xhtml">A service could return some products as a JSON array, with a header to say that intermediaries should </span><a id="_idIndexMarker913"/><span class="koboSpan" id="kobo.1041.1" xmlns="http://www.w3.org/1999/xhtml">not cache the response but clients can, as shown in the following HTTP response:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1042.1" xmlns="http://www.w3.org/1999/xhtml">content-type</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1043.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="koboSpan" id="kobo.1044.1" xmlns="http://www.w3.org/1999/xhtml"> application/json; charset=utf</span><span class="hljs-number"><span class="koboSpan" id="kobo.1045.1" xmlns="http://www.w3.org/1999/xhtml">-8</span></span><span class="koboSpan" id="kobo.1046.1" xmlns="http://www.w3.org/1999/xhtml"> 
date</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1047.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="koboSpan" id="kobo.1048.1" xmlns="http://www.w3.org/1999/xhtml"> Fri</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1049.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span><span class="hljs-number"><span class="koboSpan" id="kobo.1050.1" xmlns="http://www.w3.org/1999/xhtml">09</span></span><span class="koboSpan" id="kobo.1051.1" xmlns="http://www.w3.org/1999/xhtml"> Jun </span><span class="hljs-number"><span class="koboSpan" id="kobo.1052.1" xmlns="http://www.w3.org/1999/xhtml">2023</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.1053.1" xmlns="http://www.w3.org/1999/xhtml">06</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1054.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="hljs-number"><span class="koboSpan" id="kobo.1055.1" xmlns="http://www.w3.org/1999/xhtml">05</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1056.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="hljs-number"><span class="koboSpan" id="kobo.1057.1" xmlns="http://www.w3.org/1999/xhtml">13</span></span><span class="koboSpan" id="kobo.1058.1" xmlns="http://www.w3.org/1999/xhtml"> GMT 
server</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1059.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="koboSpan" id="kobo.1060.1" xmlns="http://www.w3.org/1999/xhtml"> Kestrel 
cache-control</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1061.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span><span class="koboSpan" id="kobo.1062.1" xmlns="http://www.w3.org/1999/xhtml"> private
</span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1063.1" xmlns="http://www.w3.org/1999/xhtml">[</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.1064.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.1065.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1066.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-number"><span class="koboSpan" id="kobo.1067.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1068.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.1069.1" xmlns="http://www.w3.org/1999/xhtml">"productName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1070.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.1071.1" xmlns="http://www.w3.org/1999/xhtml">"Chef Anton's Gumbo Mix"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1072.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span><span class="koboSpan" id="kobo.1073.1" xmlns="http://www.w3.org/1999/xhtml">
    ...
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1074.1" xmlns="http://www.w3.org/1999/xhtml">Decorate a controller or </span><a id="_idIndexMarker914"/><span class="koboSpan" id="kobo.1075.1" xmlns="http://www.w3.org/1999/xhtml">method with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1076.1" xmlns="http://www.w3.org/1999/xhtml">[ResponseCache]</span></code><span class="koboSpan" id="kobo.1077.1" xmlns="http://www.w3.org/1999/xhtml"> attribute to control </span><a id="_idIndexMarker915"/><span class="koboSpan" id="kobo.1078.1" xmlns="http://www.w3.org/1999/xhtml">caching responses from the server (code to control caching requests has to go in the client code). </span><span class="koboSpan" id="kobo.1078.2" xmlns="http://www.w3.org/1999/xhtml">This attribute has common parameters, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.1079.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.4</span></em><span class="koboSpan" id="kobo.1080.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<table class="table-container" id="table004-6">
<tbody>
<tr>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1081.1" xmlns="http://www.w3.org/1999/xhtml">Property</span></strong></p>
</td>
<td class="table-cell">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1082.1" xmlns="http://www.w3.org/1999/xhtml">Description</span></strong></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1083.1" xmlns="http://www.w3.org/1999/xhtml">Duration</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1084.1" xmlns="http://www.w3.org/1999/xhtml">How long to cache in seconds.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1085.1" xmlns="http://www.w3.org/1999/xhtml">Location</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1086.1" xmlns="http://www.w3.org/1999/xhtml">Where the response can be cached. </span><code class="inlineCode"><span class="koboSpan" id="kobo.1087.1" xmlns="http://www.w3.org/1999/xhtml">Any</span></code><span class="koboSpan" id="kobo.1088.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><code class="inlineCode"><span class="koboSpan" id="kobo.1089.1" xmlns="http://www.w3.org/1999/xhtml">cache-control:</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1090.1" xmlns="http://www.w3.org/1999/xhtml">public</span></code><span class="koboSpan" id="kobo.1091.1" xmlns="http://www.w3.org/1999/xhtml">), </span><code class="inlineCode"><span class="koboSpan" id="kobo.1092.1" xmlns="http://www.w3.org/1999/xhtml">Client</span></code><span class="koboSpan" id="kobo.1093.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><code class="inlineCode"><span class="koboSpan" id="kobo.1094.1" xmlns="http://www.w3.org/1999/xhtml">cache-control:</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1095.1" xmlns="http://www.w3.org/1999/xhtml">private</span></code><span class="koboSpan" id="kobo.1096.1" xmlns="http://www.w3.org/1999/xhtml">), </span><code class="inlineCode"><span class="koboSpan" id="kobo.1097.1" xmlns="http://www.w3.org/1999/xhtml">None</span></code><span class="koboSpan" id="kobo.1098.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><code class="inlineCode"><span class="koboSpan" id="kobo.1099.1" xmlns="http://www.w3.org/1999/xhtml">cache-control:</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1100.1" xmlns="http://www.w3.org/1999/xhtml">no-cache</span></code><span class="koboSpan" id="kobo.1101.1" xmlns="http://www.w3.org/1999/xhtml">).</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1102.1" xmlns="http://www.w3.org/1999/xhtml">NoStore</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1103.1" xmlns="http://www.w3.org/1999/xhtml">Sets </span><code class="inlineCode"><span class="koboSpan" id="kobo.1104.1" xmlns="http://www.w3.org/1999/xhtml">cache-control:</span></code> <code class="inlineCode"><span class="koboSpan" id="kobo.1105.1" xmlns="http://www.w3.org/1999/xhtml">no-store</span></code><span class="koboSpan" id="kobo.1106.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1107.1" xmlns="http://www.w3.org/1999/xhtml">VaryByHeader</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1108.1" xmlns="http://www.w3.org/1999/xhtml">Sets the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1109.1" xmlns="http://www.w3.org/1999/xhtml">Vary</span></code><span class="koboSpan" id="kobo.1110.1" xmlns="http://www.w3.org/1999/xhtml"> header.</span></p>
</td>
</tr>
<tr>
<td class="table-cell">
<p class="normal"><code class="inlineCode"><span class="koboSpan" id="kobo.1111.1" xmlns="http://www.w3.org/1999/xhtml">VaryByQueryKeys</span></code></p>
</td>
<td class="table-cell">
<p class="normal"><span class="koboSpan" id="kobo.1112.1" xmlns="http://www.w3.org/1999/xhtml">Query keys to vary by.</span></p>
</td>
</tr>
</tbody>
</table>
<p class="packt_figref"><span class="koboSpan" id="kobo.1113.1" xmlns="http://www.w3.org/1999/xhtml">Table 9.4: Common parameters of the [ResponseCache] attribute</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1114.1" xmlns="http://www.w3.org/1999/xhtml">Let’s apply response caching to the web service:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1115.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1116.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.1117.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1118.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1119.1" xmlns="http://www.w3.org/1999/xhtml">, after the call to add the distributed memory cache, add a statement to add response caching middleware as a dependency service, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1120.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddResponseCaching();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1121.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1122.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1123.1" xmlns="http://www.w3.org/1999/xhtml">, after the call to use HTTPS redirection, add a statement to use response caching middleware, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1124.1" xmlns="http://www.w3.org/1999/xhtml">app.UseResponseCaching();
</span></code></pre>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1125.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1126.1" xmlns="http://www.w3.org/1999/xhtml">: If using CORS middleware, then </span><code class="inlineCode"><span class="koboSpan" id="kobo.1127.1" xmlns="http://www.w3.org/1999/xhtml">UseCors</span></code><span class="koboSpan" id="kobo.1128.1" xmlns="http://www.w3.org/1999/xhtml"> must be called before </span><code class="inlineCode"><span class="koboSpan" id="kobo.1129.1" xmlns="http://www.w3.org/1999/xhtml">UseResponseCaching</span></code><span class="koboSpan" id="kobo.1130.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
</li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="3"><span class="koboSpan" id="kobo.1131.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1132.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.1133.1" xmlns="http://www.w3.org/1999/xhtml">, decorate </span><a id="_idIndexMarker916"/><span class="koboSpan" id="kobo.1134.1" xmlns="http://www.w3.org/1999/xhtml">the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1135.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></code><span class="koboSpan" id="kobo.1136.1" xmlns="http://www.w3.org/1999/xhtml"> method with an </span><code class="inlineCode"><span class="koboSpan" id="kobo.1137.1" xmlns="http://www.w3.org/1999/xhtml">int id</span></code><span class="koboSpan" id="kobo.1138.1" xmlns="http://www.w3.org/1999/xhtml"> parameter</span><a id="_idIndexMarker917"/><span class="koboSpan" id="kobo.1139.1" xmlns="http://www.w3.org/1999/xhtml"> with the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1140.1" xmlns="http://www.w3.org/1999/xhtml">[ResponseCache]</span></code><span class="koboSpan" id="kobo.1141.1" xmlns="http://www.w3.org/1999/xhtml"> attribute, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.1142.1" xmlns="http://www.w3.org/1999/xhtml">// GET api/products/5</span></span><span class="koboSpan" id="kobo.1143.1" xmlns="http://www.w3.org/1999/xhtml">
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1144.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1145.1" xmlns="http://www.w3.org/1999/xhtml">"{id:int}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.1146.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1147.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1148.1" xmlns="http://www.w3.org/1999/xhtml">[</span></strong><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.1149.1" xmlns="http://www.w3.org/1999/xhtml">ResponseCache(Duration = 5, // Cache-Control: max-age=5</span></strong></span>
<span class="code-highlight"><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.1150.1" xmlns="http://www.w3.org/1999/xhtml">  Location = ResponseCacheLocation.Any, // Cache-Control: public</span></strong></span>
<span class="code-highlight"><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.1151.1" xmlns="http://www.w3.org/1999/xhtml">  VaryByHeader = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1152.1" xmlns="http://www.w3.org/1999/xhtml">"User-Agent"</span></strong><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.1153.1" xmlns="http://www.w3.org/1999/xhtml"> // Vary: User-Agent</span></strong></span>
<span class="code-highlight"><strong class="hljs-meta-slc"><span class="koboSpan" id="kobo.1154.1" xmlns="http://www.w3.org/1999/xhtml">  )</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1155.1" xmlns="http://www.w3.org/1999/xhtml">]</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1156.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1157.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="koboSpan" id="kobo.1158.1" xmlns="http://www.w3.org/1999/xhtml"> ValueTask&lt;Product?&gt; Get(</span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1159.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.1160.1" xmlns="http://www.w3.org/1999/xhtml"> id)
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1161.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1162.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1163.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.FindAsync(id);
}
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1164.1" xmlns="http://www.w3.org/1999/xhtml">The </span><code class="inlineCode"><span class="koboSpan" id="kobo.1165.1" xmlns="http://www.w3.org/1999/xhtml">[ResponseCache]</span></code><span class="koboSpan" id="kobo.1166.1" xmlns="http://www.w3.org/1999/xhtml"> attribute can be applied to Razor Pages, MVC controller classes, and MVC action methods for both web services and websites.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="4"><span class="koboSpan" id="kobo.1167.1" xmlns="http://www.w3.org/1999/xhtml">Start the web service</span><a id="_idIndexMarker918"/><span class="koboSpan" id="kobo.1168.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1169.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1170.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1171.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1172.1" xmlns="http://www.w3.org/1999/xhtml">HttpRequests</span></code><span class="koboSpan" id="kobo.1173.1" xmlns="http://www.w3.org/1999/xhtml"> folder, open the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1174.1" xmlns="http://www.w3.org/1999/xhtml">webapi-get-products.http</span></code><span class="koboSpan" id="kobo.1175.1" xmlns="http://www.w3.org/1999/xhtml"> file.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1176.1" xmlns="http://www.w3.org/1999/xhtml">Modify the base address to use port </span><code class="inlineCode"><span class="koboSpan" id="kobo.1177.1" xmlns="http://www.w3.org/1999/xhtml">5091</span></code><span class="koboSpan" id="kobo.1178.1" xmlns="http://www.w3.org/1999/xhtml">, and then send the request for a specific product, like </span><code class="inlineCode"><span class="koboSpan" id="kobo.1179.1" xmlns="http://www.w3.org/1999/xhtml">77</span></code><span class="koboSpan" id="kobo.1180.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1181.1" xmlns="http://www.w3.org/1999/xhtml">GET {{base_address}}77
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1182.1" xmlns="http://www.w3.org/1999/xhtml">Note that the</span><a id="_idIndexMarker919"/><span class="koboSpan" id="kobo.1183.1" xmlns="http://www.w3.org/1999/xhtml"> response includes headers to control caching, as highlighted in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1184.1" xmlns="http://www.w3.org/1999/xhtml">Response time: 89 ms
Status code: OK (200)
Alt-Svc: h3=":5091"; ma=86400
Transfer-Encoding: chunked
</span><span class="code-highlight"><strong class="hljs-con-slc"><span class="koboSpan" id="kobo.1185.1" xmlns="http://www.w3.org/1999/xhtml">Vary: User-Agent</span></strong></span>
<span class="code-highlight"><strong class="hljs-con-slc"><span class="koboSpan" id="kobo.1186.1" xmlns="http://www.w3.org/1999/xhtml">Cache-Control: public, max-age=5</span></strong></span><span class="koboSpan" id="kobo.1187.1" xmlns="http://www.w3.org/1999/xhtml">
Date: Fri, 09 Jun 2023 06:26:45 GMT
Server: Kestrel
Content-Type: application/json; charset=utf-8
Content-Length: 270
------------------------------------------------
Content:
{
  "productId": 77,
  "productName": "Original Frankfurter grüne Soße",
  "supplierId": 12,
  "categoryId": 2,
  "quantityPerUnit": "12 boxes",
  "unitPrice": 85.0,
  "unitsInStock": 32,
  "unitsOnOrder": 0,
  "reorderLevel": 15,
  "discontinued": false,
  "category": null,
  "orderDetails": [],
  "supplier": null
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1188.1" xmlns="http://www.w3.org/1999/xhtml">Close the browser and shut down the web server.</span></li>
</ol>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1189.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.1190.1" xmlns="http://www.w3.org/1999/xhtml">: Response caching should only be enabled for anonymous requests. </span><span class="koboSpan" id="kobo.1190.2" xmlns="http://www.w3.org/1999/xhtml">Authenticated requests</span><a id="_idIndexMarker920"/><span class="koboSpan" id="kobo.1191.1" xmlns="http://www.w3.org/1999/xhtml"> and responses should not be cached.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1192.1" xmlns="http://www.w3.org/1999/xhtml">Caching is one of the best</span><a id="_idIndexMarker921"/><span class="koboSpan" id="kobo.1193.1" xmlns="http://www.w3.org/1999/xhtml"> ways to improve the</span><a id="_idIndexMarker922"/><span class="koboSpan" id="kobo.1194.1" xmlns="http://www.w3.org/1999/xhtml"> performance and scalability of your services. </span><span class="koboSpan" id="kobo.1194.2" xmlns="http://www.w3.org/1999/xhtml">Next, we will learn how to improve a service’s resilience when inevitable failures occur.</span></p>
<h1 class="heading-1" id="_idParaDest-353"><span class="koboSpan" id="kobo.1195.1" xmlns="http://www.w3.org/1999/xhtml">Fault tolerance with Polly</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1196.1" xmlns="http://www.w3.org/1999/xhtml">Polly is </span><em class="italic"><span class="koboSpan" id="kobo.1197.1" xmlns="http://www.w3.org/1999/xhtml">“a .NET resilience and transient-fault-handling library that allows developers to express policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallback in a fluent and thread-safe manner,”</span></em><span class="koboSpan" id="kobo.1198.1" xmlns="http://www.w3.org/1999/xhtml"> as stated on the official Polly GitHub repository, which can be found at the following link: </span><a href="https://github.com/App-vNext/Polly"><span class="url"><span class="koboSpan" id="kobo.1199.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/App-vNext/Polly</span></span></a><span class="koboSpan" id="kobo.1200.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1201.1" xmlns="http://www.w3.org/1999/xhtml">Transient faults are</span><a id="_idIndexMarker923"/><span class="koboSpan" id="kobo.1202.1" xmlns="http://www.w3.org/1999/xhtml"> errors caused by temporary conditions, such as </span><a id="_idIndexMarker924"/><span class="koboSpan" id="kobo.1203.1" xmlns="http://www.w3.org/1999/xhtml">temporary service unavailability or network connectivity issues. </span><span class="koboSpan" id="kobo.1203.2" xmlns="http://www.w3.org/1999/xhtml">It is essential to handle transient faults in distributed systems, or they can become almost unusable.</span></p>
<h2 class="heading-2" id="_idParaDest-354"><span class="koboSpan" id="kobo.1204.1" xmlns="http://www.w3.org/1999/xhtml">Understanding retry and circuit breaker patterns</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1205.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="keyWord"><span class="koboSpan" id="kobo.1206.1" xmlns="http://www.w3.org/1999/xhtml">Retry</span></strong><span class="koboSpan" id="kobo.1207.1" xmlns="http://www.w3.org/1999/xhtml"> pattern </span><a id="_idIndexMarker925"/><span class="koboSpan" id="kobo.1208.1" xmlns="http://www.w3.org/1999/xhtml">enables clients to automatically retry</span><a id="_idIndexMarker926"/><span class="koboSpan" id="kobo.1209.1" xmlns="http://www.w3.org/1999/xhtml"> a failed action with the expectation that the fault will succeed if retried after a short delay. </span><span class="koboSpan" id="kobo.1209.2" xmlns="http://www.w3.org/1999/xhtml">Be careful, because if you implement the Retry pattern naively, then it can make the problem worse! </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1210.1" xmlns="http://www.w3.org/1999/xhtml">For example, if you set a fixed time between retries, then all the clients who received a fault will attempt to retry at the same time, overloading the service. </span><span class="koboSpan" id="kobo.1210.2" xmlns="http://www.w3.org/1999/xhtml">To avoid this issue, retries are often set with an exponentially increasing time between retries, or they might use jitter (aka randomizer) algorithms.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1211.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="keyWord"><span class="koboSpan" id="kobo.1212.1" xmlns="http://www.w3.org/1999/xhtml">Circuit Breaker</span></strong><span class="koboSpan" id="kobo.1213.1" xmlns="http://www.w3.org/1999/xhtml"> pattern </span><a id="_idIndexMarker927"/><span class="koboSpan" id="kobo.1214.1" xmlns="http://www.w3.org/1999/xhtml">prevents calls when a threshold</span><a id="_idIndexMarker928"/><span class="koboSpan" id="kobo.1215.1" xmlns="http://www.w3.org/1999/xhtml"> of faults is reached. </span><span class="koboSpan" id="kobo.1215.2" xmlns="http://www.w3.org/1999/xhtml">In effect, it is a way for a service to detect if a fault is </span><em class="italic"><span class="koboSpan" id="kobo.1216.1" xmlns="http://www.w3.org/1999/xhtml">not</span></em><span class="koboSpan" id="kobo.1217.1" xmlns="http://www.w3.org/1999/xhtml"> transient, or not transient enough to keep retrying.</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.1218.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.1219.1" xmlns="http://www.w3.org/1999/xhtml">: There is a nice summary table of resilience policies for Polly on its GitHub repository: </span><a href="https://github.com/App-vNext/Polly#resilience-policies"><span class="url"><span class="koboSpan" id="kobo.1220.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/App-vNext/Polly#resilience-policies</span></span></a><span class="koboSpan" id="kobo.1221.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-355"><span class="koboSpan" id="kobo.1222.1" xmlns="http://www.w3.org/1999/xhtml">Defining and executing policies</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1223.1" xmlns="http://www.w3.org/1999/xhtml">In any type of .NET project that </span><a id="_idIndexMarker929"/><span class="koboSpan" id="kobo.1224.1" xmlns="http://www.w3.org/1999/xhtml">calls any unreliable code, you </span><a id="_idIndexMarker930"/><span class="koboSpan" id="kobo.1225.1" xmlns="http://www.w3.org/1999/xhtml">can reference the Polly package and then define a policy using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1226.1" xmlns="http://www.w3.org/1999/xhtml">Policy</span></code><span class="koboSpan" id="kobo.1227.1" xmlns="http://www.w3.org/1999/xhtml"> class. </span><span class="koboSpan" id="kobo.1227.2" xmlns="http://www.w3.org/1999/xhtml">Polly is not used in the unreliable code or service itself. </span><span class="koboSpan" id="kobo.1227.3" xmlns="http://www.w3.org/1999/xhtml">It is used by any clients that call the code or service.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1228.1" xmlns="http://www.w3.org/1999/xhtml">For example, you might need to call two methods that might throw arithmetic or custom exceptions, and you want to automatically retry up to three times, so you define a policy to handle this, as </span><a id="_idIndexMarker931"/><span class="koboSpan" id="kobo.1229.1" xmlns="http://www.w3.org/1999/xhtml">shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1230.1" xmlns="http://www.w3.org/1999/xhtml">RetryPolicy policy = Policy
  .Handle&lt;CustomException&gt;().Or&lt;ArithmeticException&gt;()
  .Retry(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1231.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1232.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1233.1" xmlns="http://www.w3.org/1999/xhtml">Then, you can use that policy to execute the methods, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1234.1" xmlns="http://www.w3.org/1999/xhtml">policy.Execute(() =&gt; GetProducts());
policy.Execute(() =&gt; GetCustomers());
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1235.1" xmlns="http://www.w3.org/1999/xhtml">Each call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1236.1" xmlns="http://www.w3.org/1999/xhtml">Execute</span></code><span class="koboSpan" id="kobo.1237.1" xmlns="http://www.w3.org/1999/xhtml"> gets its</span><a id="_idIndexMarker932"/><span class="koboSpan" id="kobo.1238.1" xmlns="http://www.w3.org/1999/xhtml"> own counter for retries, so if the call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1239.1" xmlns="http://www.w3.org/1999/xhtml">GetProducts</span></code><span class="koboSpan" id="kobo.1240.1" xmlns="http://www.w3.org/1999/xhtml"> needs two retries, the call to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1241.1" xmlns="http://www.w3.org/1999/xhtml">GetCustomers</span></code><span class="koboSpan" id="kobo.1242.1" xmlns="http://www.w3.org/1999/xhtml"> still has a full three retries of its own.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1243.1" xmlns="http://www.w3.org/1999/xhtml">For unlimited retries, you can call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1244.1" xmlns="http://www.w3.org/1999/xhtml">RetryForever</span></code><span class="koboSpan" id="kobo.1245.1" xmlns="http://www.w3.org/1999/xhtml"> method, but this is not recommended.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1246.1" xmlns="http://www.w3.org/1999/xhtml">For asynchronous methods, there are matching asynchronous methods; for example, instead of </span><code class="inlineCode"><span class="koboSpan" id="kobo.1247.1" xmlns="http://www.w3.org/1999/xhtml">Retry</span></code><span class="koboSpan" id="kobo.1248.1" xmlns="http://www.w3.org/1999/xhtml">, use </span><code class="inlineCode"><span class="koboSpan" id="kobo.1249.1" xmlns="http://www.w3.org/1999/xhtml">RetryAsync</span></code><span class="koboSpan" id="kobo.1250.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1251.1" xmlns="http://www.w3.org/1999/xhtml">To execute some statements when a retry occurs, for example, to log information, the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1252.1" xmlns="http://www.w3.org/1999/xhtml">Retry</span></code><span class="koboSpan" id="kobo.1253.1" xmlns="http://www.w3.org/1999/xhtml"> method can have a callback, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1254.1" xmlns="http://www.w3.org/1999/xhtml">RetryPolicy policy = Policy
  .Handle&lt;CustomException&gt;().Or&lt;ArithmeticException&gt;()
  .Retry(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1255.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1256.1" xmlns="http://www.w3.org/1999/xhtml">, onRetry: (exception, retryCount) =&gt;
  {
      </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1257.1" xmlns="http://www.w3.org/1999/xhtml">// Log the current retry count and exception information.</span></span><span class="koboSpan" id="kobo.1258.1" xmlns="http://www.w3.org/1999/xhtml">
  });
</span></code></pre>
<h2 class="heading-2" id="_idParaDest-356"><span class="koboSpan" id="kobo.1259.1" xmlns="http://www.w3.org/1999/xhtml">Defining wait intervals between retries</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1260.1" xmlns="http://www.w3.org/1999/xhtml">Instead of</span><a id="_idIndexMarker933"/><span class="koboSpan" id="kobo.1261.1" xmlns="http://www.w3.org/1999/xhtml"> immediately retrying after</span><a id="_idIndexMarker934"/><span class="koboSpan" id="kobo.1262.1" xmlns="http://www.w3.org/1999/xhtml"> a fault, it is good practice to wait a moment before retrying.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1263.1" xmlns="http://www.w3.org/1999/xhtml">For example, to wait and retry, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1264.1" xmlns="http://www.w3.org/1999/xhtml">RetryPolicy policy = Policy
  .Handle&lt;CustomException&gt;().Or&lt;ArithmeticException&gt;()
  .WaitAndRetry(</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1265.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1266.1" xmlns="http://www.w3.org/1999/xhtml">[]
  {
    TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1267.1" xmlns="http://www.w3.org/1999/xhtml">1</span></span><span class="koboSpan" id="kobo.1268.1" xmlns="http://www.w3.org/1999/xhtml">), </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1269.1" xmlns="http://www.w3.org/1999/xhtml">// 1 second between 1st and 2nd try.</span></span><span class="koboSpan" id="kobo.1270.1" xmlns="http://www.w3.org/1999/xhtml">
    TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1271.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.1272.1" xmlns="http://www.w3.org/1999/xhtml">), </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1273.1" xmlns="http://www.w3.org/1999/xhtml">// 2 seconds between 2nd and 3rd try.</span></span><span class="koboSpan" id="kobo.1274.1" xmlns="http://www.w3.org/1999/xhtml">
    TimeSpan.FromSeconds(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1275.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.1276.1" xmlns="http://www.w3.org/1999/xhtml">) </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1277.1" xmlns="http://www.w3.org/1999/xhtml">// 5 seconds between 3rd and 4th try.</span></span><span class="koboSpan" id="kobo.1278.1" xmlns="http://www.w3.org/1999/xhtml">
  });
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1279.1" xmlns="http://www.w3.org/1999/xhtml">Instead of hardcoded delay values, you</span><a id="_idIndexMarker935"/><span class="koboSpan" id="kobo.1280.1" xmlns="http://www.w3.org/1999/xhtml"> can also define a function to generate them, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1281.1" xmlns="http://www.w3.org/1999/xhtml">RetryPolicy policy = Policy
  .Handle&lt;CustomException&gt;().Or&lt;ArithmeticException&gt;()
  .WaitAndRetry(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1282.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1283.1" xmlns="http://www.w3.org/1999/xhtml">, retryAttempt =&gt; 
    TimeSpan.FromSeconds(Math.Pow(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1284.1" xmlns="http://www.w3.org/1999/xhtml">2</span></span><span class="koboSpan" id="kobo.1285.1" xmlns="http://www.w3.org/1999/xhtml">, retryAttempt)));
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.1286.1" xmlns="http://www.w3.org/1999/xhtml">//  2 ^ 1 = 2 seconds then</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1287.1" xmlns="http://www.w3.org/1999/xhtml">//  2 ^ 2 = 4 seconds then</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1288.1" xmlns="http://www.w3.org/1999/xhtml">//  2 ^ 3 = 8 seconds then</span></span>
</code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1289.1" xmlns="http://www.w3.org/1999/xhtml">However, if we pass an array of fixed delays, even if they are calculated, imagine what happens when a fault </span><a id="_idIndexMarker936"/><span class="koboSpan" id="kobo.1290.1" xmlns="http://www.w3.org/1999/xhtml">occurs in a busy web service. </span><span class="koboSpan" id="kobo.1290.2" xmlns="http://www.w3.org/1999/xhtml">All the clients receive an exception, they all wait for the first second, and they all attempt to recall the web service one second later. </span><span class="koboSpan" id="kobo.1290.3" xmlns="http://www.w3.org/1999/xhtml">This causes floods that could make the situation worse!</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1291.1" xmlns="http://www.w3.org/1999/xhtml">Jittering is the idea of adding small amounts of randomization to time delays. </span><span class="koboSpan" id="kobo.1291.2" xmlns="http://www.w3.org/1999/xhtml">There are many implementations that you can find online, and the best is built-in with an extra Polly package. </span><span class="koboSpan" id="kobo.1291.3" xmlns="http://www.w3.org/1999/xhtml">We will use it to generate time delays in our example project.</span></p>
<h2 class="heading-2" id="_idParaDest-357"><span class="koboSpan" id="kobo.1292.1" xmlns="http://www.w3.org/1999/xhtml">Applying policies to HTTP clients</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1293.1" xmlns="http://www.w3.org/1999/xhtml">When calling a web</span><a id="_idIndexMarker937"/><span class="koboSpan" id="kobo.1294.1" xmlns="http://www.w3.org/1999/xhtml"> service, it’s a good practice to define an HTTP client factory and register it in a </span><a id="_idIndexMarker938"/><span class="koboSpan" id="kobo.1295.1" xmlns="http://www.w3.org/1999/xhtml">dependency services collection.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1296.1" xmlns="http://www.w3.org/1999/xhtml">In this scenario, you will not call the methods that might throw an exception yourself. </span><span class="koboSpan" id="kobo.1296.2" xmlns="http://www.w3.org/1999/xhtml">Instead, you must define a</span><a id="_idIndexMarker939"/><span class="koboSpan" id="kobo.1297.1" xmlns="http://www.w3.org/1999/xhtml"> policy and then attach it to a registered HTTP client, so that it automatically follows that policy.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1298.1" xmlns="http://www.w3.org/1999/xhtml">To do so, we will use an extension class named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1299.1" xmlns="http://www.w3.org/1999/xhtml">HttpPolicyExtensions</span></code><span class="koboSpan" id="kobo.1300.1" xmlns="http://www.w3.org/1999/xhtml"> to create policies specifically for common HTTP requests and failures, as shown in the following code:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1301.1" xmlns="http://www.w3.org/1999/xhtml">AsyncRetryPolicy&lt;HttpResponseMessage&gt; retryPolicy = HttpPolicyExtensions
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1302.1" xmlns="http://www.w3.org/1999/xhtml">// Handle network failures, 408 and 5xx status codes.</span></span><span class="koboSpan" id="kobo.1303.1" xmlns="http://www.w3.org/1999/xhtml">
  .HandleTransientHttpError()
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1304.1" xmlns="http://www.w3.org/1999/xhtml">// Define the policy using all the same options as before.</span></span><span class="koboSpan" id="kobo.1305.1" xmlns="http://www.w3.org/1999/xhtml">
  .RetryAsync(</span><span class="hljs-number"><span class="koboSpan" id="kobo.1306.1" xmlns="http://www.w3.org/1999/xhtml">3</span></span><span class="koboSpan" id="kobo.1307.1" xmlns="http://www.w3.org/1999/xhtml">);
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.1308.1" xmlns="http://www.w3.org/1999/xhtml">To attach the policy to an HTTP client, call the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1309.1" xmlns="http://www.w3.org/1999/xhtml">AddPolicyHandler</span></code><span class="koboSpan" id="kobo.1310.1" xmlns="http://www.w3.org/1999/xhtml"> extension method after defining the factory. </span><span class="koboSpan" id="kobo.1310.2" xmlns="http://www.w3.org/1999/xhtml">You </span><a id="_idIndexMarker940"/><span class="koboSpan" id="kobo.1311.1" xmlns="http://www.w3.org/1999/xhtml">will see how to do this in practice later in this section.</span></p>
<h2 class="heading-2" id="_idParaDest-358"><span class="koboSpan" id="kobo.1312.1" xmlns="http://www.w3.org/1999/xhtml">Adding random faults to the web service</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1313.1" xmlns="http://www.w3.org/1999/xhtml">First, let’s add random faults to the </span><a id="_idIndexMarker941"/><span class="koboSpan" id="kobo.1314.1" xmlns="http://www.w3.org/1999/xhtml">web service:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1315.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1316.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.1317.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1318.1" xmlns="http://www.w3.org/1999/xhtml">ProductsController.cs</span></code><span class="koboSpan" id="kobo.1319.1" xmlns="http://www.w3.org/1999/xhtml">, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1320.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></code><span class="koboSpan" id="kobo.1321.1" xmlns="http://www.w3.org/1999/xhtml"> action method that has a </span><code class="inlineCode"><span class="koboSpan" id="kobo.1322.1" xmlns="http://www.w3.org/1999/xhtml">name</span></code><span class="koboSpan" id="kobo.1323.1" xmlns="http://www.w3.org/1999/xhtml"> parameter, add statements to randomly throw an exception two-thirds of the time, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.1324.1" xmlns="http://www.w3.org/1999/xhtml">// GET api/products/cha</span></span><span class="koboSpan" id="kobo.1325.1" xmlns="http://www.w3.org/1999/xhtml">
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1326.1" xmlns="http://www.w3.org/1999/xhtml">HttpGet(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1327.1" xmlns="http://www.w3.org/1999/xhtml">"{name}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.1328.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1329.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1330.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1331.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1332.1" xmlns="http://www.w3.org/1999/xhtml">Get</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1333.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1334.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1335.1" xmlns="http://www.w3.org/1999/xhtml"> name</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1336.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1337.1" xmlns="http://www.w3.org/1999/xhtml">
{
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1338.1" xmlns="http://www.w3.org/1999/xhtml">// Works correctly 1 out of 3 times.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1339.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1340.1" xmlns="http://www.w3.org/1999/xhtml"> (Random.Shared.Next(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1341.1" xmlns="http://www.w3.org/1999/xhtml">1</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1342.1" xmlns="http://www.w3.org/1999/xhtml">, </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1343.1" xmlns="http://www.w3.org/1999/xhtml">4</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1344.1" xmlns="http://www.w3.org/1999/xhtml">) == </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1345.1" xmlns="http://www.w3.org/1999/xhtml">1</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1346.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1347.1" xmlns="http://www.w3.org/1999/xhtml">  {</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1348.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.1349.1" xmlns="http://www.w3.org/1999/xhtml"> _db.Products.Where(p =&gt; p.ProductName.Contains(name));
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1350.1" xmlns="http://www.w3.org/1999/xhtml">  }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1351.1" xmlns="http://www.w3.org/1999/xhtml">// Throws an exception at all other times.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1352.1" xmlns="http://www.w3.org/1999/xhtml">throw</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1353.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1354.1" xmlns="http://www.w3.org/1999/xhtml"> Exception(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1355.1" xmlns="http://www.w3.org/1999/xhtml">"Randomized fault."</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1356.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span><span class="koboSpan" id="kobo.1357.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1358.1" xmlns="http://www.w3.org/1999/xhtml">Build the project.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-359"><span class="koboSpan" id="kobo.1359.1" xmlns="http://www.w3.org/1999/xhtml">Building an MVC project to call the faulty web service</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1360.1" xmlns="http://www.w3.org/1999/xhtml">Next, let’s create </span><a id="_idIndexMarker942"/><span class="koboSpan" id="kobo.1361.1" xmlns="http://www.w3.org/1999/xhtml">an ASP.NET Core MVC client that calls the randomly faulty web service endpoint. </span><span class="koboSpan" id="kobo.1361.2" xmlns="http://www.w3.org/1999/xhtml">Initially, it will just receive the exception if the web service throws an exception. </span><span class="koboSpan" id="kobo.1361.3" xmlns="http://www.w3.org/1999/xhtml">Later, we will add</span><a id="_idIndexMarker943"/><span class="koboSpan" id="kobo.1362.1" xmlns="http://www.w3.org/1999/xhtml"> transient fault handling using Polly:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1363.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.1364.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.1365.1" xmlns="http://www.w3.org/1999/xhtml">ASP.NET Core Web App (Model-View-Controller) </span></strong><span class="koboSpan" id="kobo.1366.1" xmlns="http://www.w3.org/1999/xhtml">/ </span><code class="inlineCode"><span class="koboSpan" id="kobo.1367.1" xmlns="http://www.w3.org/1999/xhtml">mvc</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1368.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1369.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1370.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1371.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.1372.1" xmlns="http://www.w3.org/1999/xhtml">Other Visual Studio 2022 options:</span><ul>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1373.1" xmlns="http://www.w3.org/1999/xhtml">Authentication Type</span></strong><span class="koboSpan" id="kobo.1374.1" xmlns="http://www.w3.org/1999/xhtml">: </span><strong class="screenText"><span class="koboSpan" id="kobo.1375.1" xmlns="http://www.w3.org/1999/xhtml">None</span></strong><span class="koboSpan" id="kobo.1376.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1377.1" xmlns="http://www.w3.org/1999/xhtml">Configure for HTTPS</span></strong><span class="koboSpan" id="kobo.1378.1" xmlns="http://www.w3.org/1999/xhtml">: Selected.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1379.1" xmlns="http://www.w3.org/1999/xhtml">Enable Docker</span></strong><span class="koboSpan" id="kobo.1380.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.1381.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.1382.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
</ul>
</li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1383.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1384.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1385.1" xmlns="http://www.w3.org/1999/xhtml"> project, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1386.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></code><span class="koboSpan" id="kobo.1387.1" xmlns="http://www.w3.org/1999/xhtml"> folder, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1388.1" xmlns="http://www.w3.org/1999/xhtml">launchSettings.json</span></code><span class="koboSpan" id="kobo.1389.1" xmlns="http://www.w3.org/1999/xhtml">, change</span><a id="_idIndexMarker944"/><span class="koboSpan" id="kobo.1390.1" xmlns="http://www.w3.org/1999/xhtml"> the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1391.1" xmlns="http://www.w3.org/1999/xhtml">applicationUrl</span></code><span class="koboSpan" id="kobo.1392.1" xmlns="http://www.w3.org/1999/xhtml"> for the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1393.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1394.1" xmlns="http://www.w3.org/1999/xhtml"> profile to use port </span><code class="inlineCode"><span class="koboSpan" id="kobo.1395.1" xmlns="http://www.w3.org/1999/xhtml">5093</span></code><span class="koboSpan" id="kobo.1396.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1397.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1398.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1399.1" xmlns="http://www.w3.org/1999/xhtml">5094</span></code><span class="koboSpan" id="kobo.1400.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.1401.1" xmlns="http://www.w3.org/1999/xhtml">http</span></code><span class="koboSpan" id="kobo.1402.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-attr"><span class="koboSpan" id="kobo.1403.1" xmlns="http://www.w3.org/1999/xhtml">"applicationUrl"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1404.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.1405.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:5093;http://localhost:5094"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.1406.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1407.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1408.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1409.1" xmlns="http://www.w3.org/1999/xhtml"> project file, treat warnings as errors, and add a reference to the entity models project so that we can use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1410.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.1411.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1412.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1413.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.EntityModels .SqlServer\Northwind.Common.EntityModels.SqlServer.csproj"</span></span><span class="koboSpan" id="kobo.1414.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1415.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1416.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1417.1" xmlns="http://www.w3.org/1999/xhtml"> project at the command prompt or terminal by entering the following command: </span><code class="inlineCode"><span class="koboSpan" id="kobo.1418.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build</span></code><span class="koboSpan" id="kobo.1419.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1420.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1421.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1422.1" xmlns="http://www.w3.org/1999/xhtml"> project, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1423.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1424.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace to work </span><a id="_idIndexMarker945"/><span class="koboSpan" id="kobo.1425.1" xmlns="http://www.w3.org/1999/xhtml">with HTTP headers, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1426.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1427.1" xmlns="http://www.w3.org/1999/xhtml"> System.Net.Http.Headers; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1428.1" xmlns="http://www.w3.org/1999/xhtml">// To use MediaTypeWithQualityHeaderValue.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1429.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1430.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1431.1" xmlns="http://www.w3.org/1999/xhtml">, before calling the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1432.1" xmlns="http://www.w3.org/1999/xhtml">builder.Build()</span></code><span class="koboSpan" id="kobo.1433.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to configure an HTTP </span><a id="_idIndexMarker946"/><span class="koboSpan" id="kobo.1434.1" xmlns="http://www.w3.org/1999/xhtml">client factory to call the web service, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1435.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddHttpClient(name: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1436.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind.WebApi.Service"</span></span><span class="koboSpan" id="kobo.1437.1" xmlns="http://www.w3.org/1999/xhtml">,
  configureClient: options =&gt;
  {
    options.BaseAddress = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1438.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1439.1" xmlns="http://www.w3.org/1999/xhtml">(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1440.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:5091/"</span></span><span class="koboSpan" id="kobo.1441.1" xmlns="http://www.w3.org/1999/xhtml">);
    options.DefaultRequestHeaders.Accept.Add(
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1442.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1443.1" xmlns="http://www.w3.org/1999/xhtml"> MediaTypeWithQualityHeaderValue(
        </span><span class="hljs-string"><span class="koboSpan" id="kobo.1444.1" xmlns="http://www.w3.org/1999/xhtml">"application/json"</span></span><span class="koboSpan" id="kobo.1445.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.1446.1" xmlns="http://www.w3.org/1999/xhtml">1.0</span></span><span class="koboSpan" id="kobo.1447.1" xmlns="http://www.w3.org/1999/xhtml">));
  });
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1448.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1449.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.1450.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1451.1" xmlns="http://www.w3.org/1999/xhtml">HomeProductsViewModel.cs</span></code><span class="koboSpan" id="kobo.1452.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1453.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1454.1" xmlns="http://www.w3.org/1999/xhtml">HomeProductsViewModel.cs</span></code><span class="koboSpan" id="kobo.1455.1" xmlns="http://www.w3.org/1999/xhtml">, define a class to store information needed in the view, like the partial product name the visitor wants to search for, a sequence of products, and an error message, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1456.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1457.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1458.1" xmlns="http://www.w3.org/1999/xhtml">// To use Product.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1459.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1460.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc.Models</span></span><span class="koboSpan" id="kobo.1461.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1462.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1463.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.1464.1" xmlns="http://www.w3.org/1999/xhtml">HomeProductsViewModel</span></span><span class="koboSpan" id="kobo.1465.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1466.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1467.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1468.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1468.2" xmlns="http://www.w3.org/1999/xhtml">NameContains { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1469.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1470.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1471.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1472.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1473.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1474.1" xmlns="http://www.w3.org/1999/xhtml"> Uri? </span><span class="koboSpan" id="kobo.1474.2" xmlns="http://www.w3.org/1999/xhtml">BaseAddress { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1475.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1476.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1477.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1478.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1479.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.1480.1" xmlns="http://www.w3.org/1999/xhtml"> IEnumerable&lt;Product&gt;? </span><span class="koboSpan" id="kobo.1480.2" xmlns="http://www.w3.org/1999/xhtml">Products { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1481.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1482.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1483.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1484.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1485.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.1486.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1487.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1487.2" xmlns="http://www.w3.org/1999/xhtml">ErrorMessage { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1488.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.1489.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1490.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.1491.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1492.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1493.1" xmlns="http://www.w3.org/1999/xhtml">Controllers</span></code><span class="koboSpan" id="kobo.1494.1" xmlns="http://www.w3.org/1999/xhtml"> folder, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1495.1" xmlns="http://www.w3.org/1999/xhtml">HomeController.cs</span></code><span class="koboSpan" id="kobo.1496.1" xmlns="http://www.w3.org/1999/xhtml">, import the namespace for the entity models, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1497.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1498.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1499.1" xmlns="http://www.w3.org/1999/xhtml">// To use Product.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1500.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1501.1" xmlns="http://www.w3.org/1999/xhtml">HomeController.cs</span></code><span class="koboSpan" id="kobo.1502.1" xmlns="http://www.w3.org/1999/xhtml">, add statements</span><a id="_idIndexMarker947"/><span class="koboSpan" id="kobo.1503.1" xmlns="http://www.w3.org/1999/xhtml"> to store the registered HTTP client factory in a private </span><code class="inlineCode"><span class="koboSpan" id="kobo.1504.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></code><span class="koboSpan" id="kobo.1505.1" xmlns="http://www.w3.org/1999/xhtml"> field, as shown highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1506.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.1507.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.1508.1" xmlns="http://www.w3.org/1999/xhtml"> ILogger&lt;HomeController&gt; _logger;
</span><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1509.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1510.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1511.1" xmlns="http://www.w3.org/1999/xhtml"> IHttpClientFactory _httpClientFactory;</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1512.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.1513.1" xmlns="http://www.w3.org/1999/xhtml">HomeController</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1514.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1515.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;HomeController&gt; logger,</span></span>
<span class="hljs-params"> </span><span class="code-highlight"><strong class="hljs-params-slc"><span class="koboSpan" id="kobo.1516.1" xmlns="http://www.w3.org/1999/xhtml">IHttpClientFactory httpClientFactory</span></strong></span><span class="hljs-function"><span class="koboSpan" id="kobo.1517.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1518.1" xmlns="http://www.w3.org/1999/xhtml">
{
  _logger = logger;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1519.1" xmlns="http://www.w3.org/1999/xhtml">  _httpClientFactory = httpClientFactory;</span></strong></span><span class="koboSpan" id="kobo.1520.1" xmlns="http://www.w3.org/1999/xhtml">
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1521.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1522.1" xmlns="http://www.w3.org/1999/xhtml">HomeController.cs</span></code><span class="koboSpan" id="kobo.1523.1" xmlns="http://www.w3.org/1999/xhtml">, add an asynchronous action method named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1524.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></code><span class="koboSpan" id="kobo.1525.1" xmlns="http://www.w3.org/1999/xhtml">, which will use the HTTP factory to request products whose name contains a value </span><a id="_idIndexMarker948"/><span class="koboSpan" id="kobo.1526.1" xmlns="http://www.w3.org/1999/xhtml">entered as an optional </span><code class="inlineCode"><span class="koboSpan" id="kobo.1527.1" xmlns="http://www.w3.org/1999/xhtml">name</span></code><span class="koboSpan" id="kobo.1528.1" xmlns="http://www.w3.org/1999/xhtml"> parameter, in a custom MVC route, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1529.1" xmlns="http://www.w3.org/1999/xhtml">[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.1530.1" xmlns="http://www.w3.org/1999/xhtml">Route(</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1531.1" xmlns="http://www.w3.org/1999/xhtml">"home/products/{name?}"</span></span><span class="hljs-meta"><span class="koboSpan" id="kobo.1532.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1533.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1534.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1535.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1536.1" xmlns="http://www.w3.org/1999/xhtml"> Task&lt;IActionResult&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.1537.1" xmlns="http://www.w3.org/1999/xhtml">Products</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1538.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1539.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.1540.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.1540.2" xmlns="http://www.w3.org/1999/xhtml">name = </span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1541.1" xmlns="http://www.w3.org/1999/xhtml">"cha"</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.1542.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.1543.1" xmlns="http://www.w3.org/1999/xhtml">
{
  HomeProductsViewModel model = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1544.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1545.1" xmlns="http://www.w3.org/1999/xhtml">();
  HttpClient client = _httpClientFactory.CreateClient(
    name: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1546.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind.WebApi.Service"</span></span><span class="koboSpan" id="kobo.1547.1" xmlns="http://www.w3.org/1999/xhtml">);
  model.NameContains = name;
  model.BaseAddress = client.BaseAddress;
  HttpRequestMessage request = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1548.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1549.1" xmlns="http://www.w3.org/1999/xhtml">(
    method: HttpMethod.Get, 
    requestUri: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1550.1" xmlns="http://www.w3.org/1999/xhtml">$"api/products/</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.1551.1" xmlns="http://www.w3.org/1999/xhtml">{name}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1552.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.1553.1" xmlns="http://www.w3.org/1999/xhtml">);
  HttpResponseMessage response = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1554.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1555.1" xmlns="http://www.w3.org/1999/xhtml"> client.SendAsync(request);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1556.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.1557.1" xmlns="http://www.w3.org/1999/xhtml"> (response.IsSuccessStatusCode)
  {
    model.Products = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1558.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1559.1" xmlns="http://www.w3.org/1999/xhtml"> response.Content
      .ReadFromJsonAsync&lt;IEnumerable&lt;Product&gt;&gt;();
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1560.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.1561.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    model.Products = Enumerable.Empty&lt;Product&gt;();
    </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1562.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1563.1" xmlns="http://www.w3.org/1999/xhtml"> content = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1564.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.1565.1" xmlns="http://www.w3.org/1999/xhtml"> response.Content.ReadAsStringAsync();
    </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1566.1" xmlns="http://www.w3.org/1999/xhtml">// Use the range operator .. </span><span class="koboSpan" id="kobo.1566.2" xmlns="http://www.w3.org/1999/xhtml">to start from zero and </span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.1567.1" xmlns="http://www.w3.org/1999/xhtml">// go to the first carriage return.</span></span>
<span class="hljs-built_in"><span class="koboSpan" id="kobo.1568.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1569.1" xmlns="http://www.w3.org/1999/xhtml"> exceptionMessage = content[..content.IndexOf(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1570.1" xmlns="http://www.w3.org/1999/xhtml">"\r"</span></span><span class="koboSpan" id="kobo.1571.1" xmlns="http://www.w3.org/1999/xhtml">)];
    model.ErrorMessage = </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.1572.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.1573.1" xmlns="http://www.w3.org/1999/xhtml">.Format(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1574.1" xmlns="http://www.w3.org/1999/xhtml">"{0}: {1}:"</span></span><span class="koboSpan" id="kobo.1575.1" xmlns="http://www.w3.org/1999/xhtml">,
      response.ReasonPhrase, exceptionMessage);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1576.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.1577.1" xmlns="http://www.w3.org/1999/xhtml"> View(model);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1578.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1579.1" xmlns="http://www.w3.org/1999/xhtml">Views/Home</span></code><span class="koboSpan" id="kobo.1580.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add </span><a id="_idIndexMarker949"/><span class="koboSpan" id="kobo.1581.1" xmlns="http://www.w3.org/1999/xhtml">a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.1582.1" xmlns="http://www.w3.org/1999/xhtml">Products.cshtml</span></code><span class="koboSpan" id="kobo.1583.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1583.2" xmlns="http://www.w3.org/1999/xhtml">(The Visual Studio 2022 </span><a id="_idIndexMarker950"/><span class="koboSpan" id="kobo.1584.1" xmlns="http://www.w3.org/1999/xhtml">project item template is named </span><strong class="screenText"><span class="koboSpan" id="kobo.1585.1" xmlns="http://www.w3.org/1999/xhtml">Razor View - Empty</span></strong><span class="koboSpan" id="kobo.1586.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.1586.2" xmlns="http://www.w3.org/1999/xhtml">The JetBrains Rider project item template is named </span><strong class="screenText"><span class="koboSpan" id="kobo.1587.1" xmlns="http://www.w3.org/1999/xhtml">Razor MVC View</span></strong><span class="koboSpan" id="kobo.1588.1" xmlns="http://www.w3.org/1999/xhtml">.)</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1589.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1590.1" xmlns="http://www.w3.org/1999/xhtml">Products.cshtml</span></code><span class="koboSpan" id="kobo.1591.1" xmlns="http://www.w3.org/1999/xhtml">, modify its contents to output a table of products that match part of a product name entered in a textbox, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1592.1" xmlns="http://www.w3.org/1999/xhtml">@using Northwind.EntityModels
@model HomeProductsViewModel
@{
  ViewData[</span><span class="hljs-string"><span class="koboSpan" id="kobo.1593.1" xmlns="http://www.w3.org/1999/xhtml">"Title"</span></span><span class="koboSpan" id="kobo.1594.1" xmlns="http://www.w3.org/1999/xhtml">] = </span><span class="hljs-string"><span class="koboSpan" id="kobo.1595.1" xmlns="http://www.w3.org/1999/xhtml">"Products using Polly"</span></span><span class="koboSpan" id="kobo.1596.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1597.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1598.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1599.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1600.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1601.1" xmlns="http://www.w3.org/1999/xhtml">"text-center"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1602.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1603.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1604.1" xmlns="http://www.w3.org/1999/xhtml">h1</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1605.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1606.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1607.1" xmlns="http://www.w3.org/1999/xhtml">"display-4"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1608.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1609.1" xmlns="http://www.w3.org/1999/xhtml">@ViewData["Title"]</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1610.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1611.1" xmlns="http://www.w3.org/1999/xhtml">h1</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1612.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1613.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1614.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1615.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1616.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1617.1" xmlns="http://www.w3.org/1999/xhtml">"alert alert-info"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1618.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1619.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1620.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1621.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1622.1" xmlns="http://www.w3.org/1999/xhtml">
      This page calls a web service endpoint that will randomly fail two out of three times. </span><span class="koboSpan" id="kobo.1622.2" xmlns="http://www.w3.org/1999/xhtml">It will use Polly to retry the call automatically.
    </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1623.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1624.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1625.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1626.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1627.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1628.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1629.1" xmlns="http://www.w3.org/1999/xhtml">
  @if (Model is not null)
  {
    if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
    {
      </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1630.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1631.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1632.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1633.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1634.1" xmlns="http://www.w3.org/1999/xhtml">"alert alert-danger"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1635.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1636.1" xmlns="http://www.w3.org/1999/xhtml">
        @Model.ErrorMessage
      </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1637.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1638.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1639.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1640.1" xmlns="http://www.w3.org/1999/xhtml">
    }
    </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1641.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1642.1" xmlns="http://www.w3.org/1999/xhtml">form</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1643.1" xmlns="http://www.w3.org/1999/xhtml">action</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1644.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1645.1" xmlns="http://www.w3.org/1999/xhtml">"/home/products"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1646.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1647.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1648.1" xmlns="http://www.w3.org/1999/xhtml">input</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1649.1" xmlns="http://www.w3.org/1999/xhtml">name</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1650.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1651.1" xmlns="http://www.w3.org/1999/xhtml">"name"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1652.1" xmlns="http://www.w3.org/1999/xhtml">placeholder</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1653.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1654.1" xmlns="http://www.w3.org/1999/xhtml">"Enter part of a product name"</span></span><span class="hljs-tag"> </span>
<span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1655.1" xmlns="http://www.w3.org/1999/xhtml">value</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1656.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1657.1" xmlns="http://www.w3.org/1999/xhtml">"@Model.NameContains"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1658.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1659.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1660.1" xmlns="http://www.w3.org/1999/xhtml">input</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1661.1" xmlns="http://www.w3.org/1999/xhtml">type</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1662.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1663.1" xmlns="http://www.w3.org/1999/xhtml">"submit"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1664.1" xmlns="http://www.w3.org/1999/xhtml">value</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1665.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1666.1" xmlns="http://www.w3.org/1999/xhtml">"Get Products"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1667.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></span><span class="koboSpan" id="kobo.1668.1" xmlns="http://www.w3.org/1999/xhtml">
      @if (!string.IsNullOrWhiteSpace(Model.NameContains))
      {
      </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1669.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1670.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1671.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1672.1" xmlns="http://www.w3.org/1999/xhtml">
        Searched for product names that start with:
        </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1673.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1674.1" xmlns="http://www.w3.org/1999/xhtml">span</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1675.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1676.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1677.1" xmlns="http://www.w3.org/1999/xhtml">"badge bg-primary rounded-pill"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1678.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1679.1" xmlns="http://www.w3.org/1999/xhtml">
          @Model.NameContains</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1680.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1681.1" xmlns="http://www.w3.org/1999/xhtml">span</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1682.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1683.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1684.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1685.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1686.1" xmlns="http://www.w3.org/1999/xhtml">
      }
    </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1687.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1688.1" xmlns="http://www.w3.org/1999/xhtml">form</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1689.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1690.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1691.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1692.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1693.1" xmlns="http://www.w3.org/1999/xhtml">
      @if (Model.Products is not null)
      {
        </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1694.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1695.1" xmlns="http://www.w3.org/1999/xhtml">table</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1696.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1697.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1698.1" xmlns="http://www.w3.org/1999/xhtml">"table"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1699.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1700.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1701.1" xmlns="http://www.w3.org/1999/xhtml">thead</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1702.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1703.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1704.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1705.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1706.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1707.1" xmlns="http://www.w3.org/1999/xhtml">th</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1708.1" xmlns="http://www.w3.org/1999/xhtml">scope</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1709.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1710.1" xmlns="http://www.w3.org/1999/xhtml">"col"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1711.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1712.1" xmlns="http://www.w3.org/1999/xhtml">Product Name</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1713.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1714.1" xmlns="http://www.w3.org/1999/xhtml">th</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1715.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1716.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1717.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1718.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1719.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1720.1" xmlns="http://www.w3.org/1999/xhtml">thead</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1721.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1722.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1723.1" xmlns="http://www.w3.org/1999/xhtml">tbody</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1724.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1725.1" xmlns="http://www.w3.org/1999/xhtml">
            @if (Model.Products.Any())
            {
              @foreach (Product p in Model.Products)
              {
                </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1726.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1727.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1728.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1729.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1730.1" xmlns="http://www.w3.org/1999/xhtml">td</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1731.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1732.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1733.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1734.1" xmlns="http://www.w3.org/1999/xhtml">href</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1735.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.1736.1" xmlns="http://www.w3.org/1999/xhtml">"@(Model.BaseAddress)api/products/@p.ProductId"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1737.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1738.1" xmlns="http://www.w3.org/1999/xhtml">
@p.ProductName</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1739.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1740.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1741.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1742.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1743.1" xmlns="http://www.w3.org/1999/xhtml">td</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1744.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1745.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1746.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1747.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1748.1" xmlns="http://www.w3.org/1999/xhtml">
              }
            }
            else
            {
              </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1749.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1750.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1751.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1752.1" xmlns="http://www.w3.org/1999/xhtml">td</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1753.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1754.1" xmlns="http://www.w3.org/1999/xhtml">0 products found.</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1755.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1756.1" xmlns="http://www.w3.org/1999/xhtml">td</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1757.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1758.1" xmlns="http://www.w3.org/1999/xhtml">tr</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1759.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1760.1" xmlns="http://www.w3.org/1999/xhtml">
            }
          </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1761.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1762.1" xmlns="http://www.w3.org/1999/xhtml">tbody</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1763.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.1764.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1765.1" xmlns="http://www.w3.org/1999/xhtml">table</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1766.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1767.1" xmlns="http://www.w3.org/1999/xhtml">
      }
    </span><span class="hljs-tag"><span class="koboSpan" id="kobo.1768.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1769.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1770.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1771.1" xmlns="http://www.w3.org/1999/xhtml">
  }
</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1772.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1773.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1774.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1775.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1776.1" xmlns="http://www.w3.org/1999/xhtml">Views/Home</span></code><span class="koboSpan" id="kobo.1777.1" xmlns="http://www.w3.org/1999/xhtml">, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.1778.1" xmlns="http://www.w3.org/1999/xhtml">Index.cshtml</span></code><span class="koboSpan" id="kobo.1779.1" xmlns="http://www.w3.org/1999/xhtml">, add code to define a link to the products page, as shown in </span><a id="_idIndexMarker951"/><span class="koboSpan" id="kobo.1780.1" xmlns="http://www.w3.org/1999/xhtml">the following </span><a id="_idIndexMarker952"/><span class="koboSpan" id="kobo.1781.1" xmlns="http://www.w3.org/1999/xhtml">markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-tag"><span class="koboSpan" id="kobo.1782.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1783.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1784.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1785.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.1786.1" xmlns="http://www.w3.org/1999/xhtml">href</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1787.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.1788.1" xmlns="http://www.w3.org/1999/xhtml">"home/products"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1789.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.1790.1" xmlns="http://www.w3.org/1999/xhtml">Search for products by name</span><span class="hljs-tag"><span class="koboSpan" id="kobo.1791.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1792.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1793.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.1794.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.1795.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1796.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1797.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.1798.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1799.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1800.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1801.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1802.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1803.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1804.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1805.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.
    </span><div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1806.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio Code, then the web browser will not start automatically. </span><span class="koboSpan" id="kobo.1806.2" xmlns="http://www.w3.org/1999/xhtml">Start Chrome, and then navigate to </span><code class="inlineCode"><span class="koboSpan" id="kobo.1807.1" xmlns="http://www.w3.org/1999/xhtml">https://localhost:5093</span></code><span class="koboSpan" id="kobo.1808.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="17"><span class="koboSpan" id="kobo.1809.1" xmlns="http://www.w3.org/1999/xhtml">On the home page, click </span><strong class="screenText"><span class="koboSpan" id="kobo.1810.1" xmlns="http://www.w3.org/1999/xhtml">Search for products by name</span></strong><span class="koboSpan" id="kobo.1811.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1812.1" xmlns="http://www.w3.org/1999/xhtml">If the search works, you will see the successful results shown in </span><em class="italic"><span class="koboSpan" id="kobo.1813.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.1</span></em><span class="koboSpan" id="kobo.1814.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1815.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_01.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1816.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.1: A successful call to the faulty random web service</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="19"><span class="koboSpan" id="kobo.1817.1" xmlns="http://www.w3.org/1999/xhtml">fails, you will </span><a id="_idIndexMarker953"/><span class="koboSpan" id="kobo.1818.1" xmlns="http://www.w3.org/1999/xhtml">see an error message, as</span><a id="_idIndexMarker954"/><span class="koboSpan" id="kobo.1819.1" xmlns="http://www.w3.org/1999/xhtml"> shown in </span><em class="italic"><span class="koboSpan" id="kobo.1820.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.2</span></em><span class="koboSpan" id="kobo.1821.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.1822.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_02.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.1823.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.2: A successful call to the faulty random web service</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="20"><span class="koboSpan" id="kobo.1824.1" xmlns="http://www.w3.org/1999/xhtml">In the command prompt or terminal, when a fault occurs you will see the exception, as shown in the following partial output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1825.1" xmlns="http://www.w3.org/1999/xhtml">fail: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[1]
      An unhandled exception has occurred while executing the request.
      </span><span class="koboSpan" id="kobo.1825.2" xmlns="http://www.w3.org/1999/xhtml">System.Exception: Randomized fault.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1826.1" xmlns="http://www.w3.org/1999/xhtml">Enter different partial</span><a id="_idIndexMarker955"/><span class="koboSpan" id="kobo.1827.1" xmlns="http://www.w3.org/1999/xhtml"> names and click </span><strong class="screenText"><span class="koboSpan" id="kobo.1828.1" xmlns="http://www.w3.org/1999/xhtml">Get Products</span></strong><span class="koboSpan" id="kobo.1829.1" xmlns="http://www.w3.org/1999/xhtml"> until you have seen both a successful search and a failed search.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1830.1" xmlns="http://www.w3.org/1999/xhtml">Close the</span><a id="_idIndexMarker956"/><span class="koboSpan" id="kobo.1831.1" xmlns="http://www.w3.org/1999/xhtml"> browsers and shut down the web servers.</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-360"><span class="koboSpan" id="kobo.1832.1" xmlns="http://www.w3.org/1999/xhtml">Implementing the Retry pattern for transient fault handling</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.1833.1" xmlns="http://www.w3.org/1999/xhtml">Now that we have a web service and MVC client with random faults, let’s add transient fault handling by using the</span><a id="_idIndexMarker957"/><span class="koboSpan" id="kobo.1834.1" xmlns="http://www.w3.org/1999/xhtml"> Retry pattern:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.1835.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1836.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1837.1" xmlns="http://www.w3.org/1999/xhtml"> project file, globally and statically import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1838.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.1839.1" xmlns="http://www.w3.org/1999/xhtml"> class, and add a package reference for the Microsoft package to integrate Polly with ASP.NET Core (which has a dependency on the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1840.1" xmlns="http://www.w3.org/1999/xhtml">Polly</span></code><span class="koboSpan" id="kobo.1841.1" xmlns="http://www.w3.org/1999/xhtml"> package), and for a library to add jittering to retry time spans, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.1842.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1843.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.Extensions.Http.Polly"</span></span><span class="koboSpan" id="kobo.1844.1" xmlns="http://www.w3.org/1999/xhtml"> 
                    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1845.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.1846.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1847.1" xmlns="http://www.w3.org/1999/xhtml">"Polly.Contrib.WaitAndRetry"</span></span><span class="koboSpan" id="kobo.1848.1" xmlns="http://www.w3.org/1999/xhtml"> 
                    Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.1849.1" xmlns="http://www.w3.org/1999/xhtml">"1.1.1"</span></span><span class="koboSpan" id="kobo.1850.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1851.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1852.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1853.1" xmlns="http://www.w3.org/1999/xhtml"> project to restore packages.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1854.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1855.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1856.1" xmlns="http://www.w3.org/1999/xhtml">, import common Polly namespaces to work with ASP.NET Core, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.1857.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1858.1" xmlns="http://www.w3.org/1999/xhtml"> Polly; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1859.1" xmlns="http://www.w3.org/1999/xhtml">// To use AddTransientHttpErrorPolicy method.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1860.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1861.1" xmlns="http://www.w3.org/1999/xhtml"> Polly.Contrib.WaitAndRetry; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1862.1" xmlns="http://www.w3.org/1999/xhtml">// To use Backoff.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1863.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1864.1" xmlns="http://www.w3.org/1999/xhtml"> Polly.Extensions.Http; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1865.1" xmlns="http://www.w3.org/1999/xhtml">// To use HttpPolicyExtensions.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.1866.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.1867.1" xmlns="http://www.w3.org/1999/xhtml"> Polly.Retry; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.1868.1" xmlns="http://www.w3.org/1999/xhtml">// To use AsyncRetryPolicy&lt;T&gt;</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1869.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.1870.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.1871.1" xmlns="http://www.w3.org/1999/xhtml">, before the statement to add an HTTP client to services, add statements to generate five jittered and exponentially increasing time-span values, output them to the console, use them to define an asynchronous wait and retry policy, and then add the retry policy to the HTTP client factory, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1872.1" xmlns="http://www.w3.org/1999/xhtml">// Create five jittered delays, starting with about 1 second.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1873.1" xmlns="http://www.w3.org/1999/xhtml">IEnumerable&lt;TimeSpan&gt; delays = Backoff.DecorrelatedJitterBackoffV2(</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1874.1" xmlns="http://www.w3.org/1999/xhtml">  medianFirstRetryDelay: TimeSpan.FromSeconds(</span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1875.1" xmlns="http://www.w3.org/1999/xhtml">1</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1876.1" xmlns="http://www.w3.org/1999/xhtml">), retryCount: </span></strong><strong class="hljs-number-slc"><span class="koboSpan" id="kobo.1877.1" xmlns="http://www.w3.org/1999/xhtml">5</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1878.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1879.1" xmlns="http://www.w3.org/1999/xhtml">WriteLine(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1880.1" xmlns="http://www.w3.org/1999/xhtml">"Jittered delays for Polly retries:"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1881.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1882.1" xmlns="http://www.w3.org/1999/xhtml">foreach</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1883.1" xmlns="http://www.w3.org/1999/xhtml"> (TimeSpan item </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.1884.1" xmlns="http://www.w3.org/1999/xhtml">in</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1885.1" xmlns="http://www.w3.org/1999/xhtml"> delays)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1886.1" xmlns="http://www.w3.org/1999/xhtml">{</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1887.1" xmlns="http://www.w3.org/1999/xhtml">  WriteLine(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1888.1" xmlns="http://www.w3.org/1999/xhtml">$"  </span></strong><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.1889.1" xmlns="http://www.w3.org/1999/xhtml">{item.TotalSeconds:N2}</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.1890.1" xmlns="http://www.w3.org/1999/xhtml"> seconds."</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.1891.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1892.1" xmlns="http://www.w3.org/1999/xhtml">}</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1893.1" xmlns="http://www.w3.org/1999/xhtml">AsyncRetryPolicy&lt;HttpResponseMessage&gt; retryPolicy = HttpPolicyExtensions</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.1894.1" xmlns="http://www.w3.org/1999/xhtml">// Handle network failures, 408 and 5xx status codes.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1895.1" xmlns="http://www.w3.org/1999/xhtml">  .HandleTransientHttpError().WaitAndRetryAsync(delays);</span></strong></span><span class="koboSpan" id="kobo.1896.1" xmlns="http://www.w3.org/1999/xhtml">
builder.Services.AddHttpClient(name: </span><span class="hljs-string"><span class="koboSpan" id="kobo.1897.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind.WebApi.Service"</span></span><span class="koboSpan" id="kobo.1898.1" xmlns="http://www.w3.org/1999/xhtml">,
  configureClient: options =&gt;
  {
    options.BaseAddress = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1899.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1900.1" xmlns="http://www.w3.org/1999/xhtml">(</span><span class="hljs-string"><span class="koboSpan" id="kobo.1901.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:5091/"</span></span><span class="koboSpan" id="kobo.1902.1" xmlns="http://www.w3.org/1999/xhtml">);
    options.DefaultRequestHeaders.Accept.Add(
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.1903.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.1904.1" xmlns="http://www.w3.org/1999/xhtml"> MediaTypeWithQualityHeaderValue(
        </span><span class="hljs-string"><span class="koboSpan" id="kobo.1905.1" xmlns="http://www.w3.org/1999/xhtml">"application/json"</span></span><span class="koboSpan" id="kobo.1906.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-number"><span class="koboSpan" id="kobo.1907.1" xmlns="http://www.w3.org/1999/xhtml">1.0</span></span><span class="koboSpan" id="kobo.1908.1" xmlns="http://www.w3.org/1999/xhtml">));
  })
  </span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.1909.1" xmlns="http://www.w3.org/1999/xhtml">.AddPolicyHandler(retryPolicy)</span></strong></span><span class="koboSpan" id="kobo.1910.1" xmlns="http://www.w3.org/1999/xhtml">;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.1911.1" xmlns="http://www.w3.org/1999/xhtml">If your database server is not running (for example, because you are hosting it in Docker, a virtual</span><a id="_idIndexMarker958"/><span class="koboSpan" id="kobo.1912.1" xmlns="http://www.w3.org/1999/xhtml"> machine, or in the cloud), then make sure to start it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1913.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1914.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.1915.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1916.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1917.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1918.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1919.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.1920.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1921.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.1922.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1923.1" xmlns="http://www.w3.org/1999/xhtml">In the command prompt or terminal for the MVC project, note the jittered time spans, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.1924.1" xmlns="http://www.w3.org/1999/xhtml">Jittered delays for Polly retries:
  1.38 seconds.
  </span><span class="koboSpan" id="kobo.1924.2" xmlns="http://www.w3.org/1999/xhtml">0.15 seconds.
  </span><span class="koboSpan" id="kobo.1924.3" xmlns="http://www.w3.org/1999/xhtml">2.65 seconds.
  </span><span class="koboSpan" id="kobo.1924.4" xmlns="http://www.w3.org/1999/xhtml">3.06 seconds.
  </span><span class="koboSpan" id="kobo.1924.5" xmlns="http://www.w3.org/1999/xhtml">6.46 seconds.
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1925.1" xmlns="http://www.w3.org/1999/xhtml">Your five delays will be different, but they should start at about 1 second and increase from that.</span></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="9"><span class="koboSpan" id="kobo.1926.1" xmlns="http://www.w3.org/1999/xhtml">Arrange the web service command prompt or terminal and the MVC website browser so </span><a id="_idIndexMarker959"/><span class="koboSpan" id="kobo.1927.1" xmlns="http://www.w3.org/1999/xhtml">that you can see both side by side.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1928.1" xmlns="http://www.w3.org/1999/xhtml">On the home page, click </span><strong class="screenText"><span class="koboSpan" id="kobo.1929.1" xmlns="http://www.w3.org/1999/xhtml">Search for products by name</span></strong><span class="koboSpan" id="kobo.1930.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1931.1" xmlns="http://www.w3.org/1999/xhtml">Note that the MVC website might have to make multiple requests before showing the page, which will take up to about 15 seconds. </span><span class="koboSpan" id="kobo.1931.2" xmlns="http://www.w3.org/1999/xhtml">For example, when I ran my projects, the MVC web site made four requests that failed before succeeding on the fifth attempt. </span><span class="koboSpan" id="kobo.1931.3" xmlns="http://www.w3.org/1999/xhtml">You will see the exceptions logged in the web service output.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1932.1" xmlns="http://www.w3.org/1999/xhtml">Enter a partial product name, click </span><strong class="screenText"><span class="koboSpan" id="kobo.1933.1" xmlns="http://www.w3.org/1999/xhtml">Get Products</span></strong><span class="koboSpan" id="kobo.1934.1" xmlns="http://www.w3.org/1999/xhtml">, and note that the web page will likely appear successfully again, even if one or more requests must be made beforehand.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.1935.1" xmlns="http://www.w3.org/1999/xhtml">It is possible that you could exceed the maximum of five requests, in which case you will see the error message as before.</span></li>
</ol>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.1936.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft has created their own packages that wrap Polly to make it even easier to use. </span><span class="koboSpan" id="kobo.1936.2" xmlns="http://www.w3.org/1999/xhtml">They are the </span><code class="inlineCode"><span class="koboSpan" id="kobo.1937.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.Extensions.Http.Resilience</span></code><span class="koboSpan" id="kobo.1938.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1939.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.Extensions.Resilience</span></code><span class="koboSpan" id="kobo.1940.1" xmlns="http://www.w3.org/1999/xhtml"> packages. </span><span class="koboSpan" id="kobo.1940.2" xmlns="http://www.w3.org/1999/xhtml">You can learn about this at the following link: </span><a href="https://devblogs.microsoft.com/dotnet/building-resilient-cloud-services-with-dotnet-8/"><span class="url"><span class="koboSpan" id="kobo.1941.1" xmlns="http://www.w3.org/1999/xhtml">https://devblogs.microsoft.com/dotnet/building-resilient-cloud-services-with-dotnet-8/</span></span></a></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.1942.1" xmlns="http://www.w3.org/1999/xhtml">Now that you’ve seen two techniques that improve services, caching, and handling transient faults, let’s look a third powerful technique, queuing.</span></p>
<h1 class="heading-1" id="_idParaDest-361"><span class="koboSpan" id="kobo.1943.1" xmlns="http://www.w3.org/1999/xhtml">Queuing with RabbitMQ</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.1944.1" xmlns="http://www.w3.org/1999/xhtml">Queuing can improve</span><a id="_idIndexMarker960"/><span class="koboSpan" id="kobo.1945.1" xmlns="http://www.w3.org/1999/xhtml"> the scalability of your service, just as it can in the physical world. </span><span class="koboSpan" id="kobo.1945.2" xmlns="http://www.w3.org/1999/xhtml">When too many clients all need to call a service at once, we can use a queue to smooth out the load.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1946.1" xmlns="http://www.w3.org/1999/xhtml">There are many queuing systems available for all the major development platforms. </span><span class="koboSpan" id="kobo.1946.2" xmlns="http://www.w3.org/1999/xhtml">One of the most popular is RabbitMQ. </span><span class="koboSpan" id="kobo.1946.3" xmlns="http://www.w3.org/1999/xhtml">It </span><a id="_idIndexMarker961"/><span class="koboSpan" id="kobo.1947.1" xmlns="http://www.w3.org/1999/xhtml">implements the </span><strong class="keyWord"><span class="koboSpan" id="kobo.1948.1" xmlns="http://www.w3.org/1999/xhtml">Advanced Message Queuing Protocol</span></strong><span class="koboSpan" id="kobo.1949.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.1950.1" xmlns="http://www.w3.org/1999/xhtml">AMQP</span></strong><span class="koboSpan" id="kobo.1951.1" xmlns="http://www.w3.org/1999/xhtml">). </span></p>
<p class="normal"><span class="koboSpan" id="kobo.1952.1" xmlns="http://www.w3.org/1999/xhtml">With AMQP, messages are</span><a id="_idIndexMarker962"/><span class="koboSpan" id="kobo.1953.1" xmlns="http://www.w3.org/1999/xhtml"> published to exchanges, which then distribute message copies to queues using rules named bindings. </span><span class="koboSpan" id="kobo.1953.2" xmlns="http://www.w3.org/1999/xhtml">Then a broker can deliver the messages to consumers subscribed to a queue (sometimes called a topic) or a consumer can read from a queue when they want.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1954.1" xmlns="http://www.w3.org/1999/xhtml">Since networks and systems often fail, AMQP uses message acknowledgments to tell the broker when a consumer has successfully processed a message, and only then does the broker remove the message from the queue.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.1955.1" xmlns="http://www.w3.org/1999/xhtml">RabbitMQ supports four types of exchange:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.1956.1" xmlns="http://www.w3.org/1999/xhtml">Direct</span></strong><span class="koboSpan" id="kobo.1957.1" xmlns="http://www.w3.org/1999/xhtml">: A direct exchange </span><a id="_idIndexMarker963"/><span class="koboSpan" id="kobo.1958.1" xmlns="http://www.w3.org/1999/xhtml">delivers messages based on a message routing key. </span><span class="koboSpan" id="kobo.1958.2" xmlns="http://www.w3.org/1999/xhtml">Multiple queues can be bound to the exchange, but messages are only delivered to a queue if they have a matching routing key. </span><span class="koboSpan" id="kobo.1958.3" xmlns="http://www.w3.org/1999/xhtml">They are mostly used for unicast messages. </span><span class="koboSpan" id="kobo.1958.4" xmlns="http://www.w3.org/1999/xhtml">The default (empty name) exchange is a direct exchange. </span><span class="koboSpan" id="kobo.1958.5" xmlns="http://www.w3.org/1999/xhtml">It is pre-bound with a routing key that is the same name as the queue. </span><span class="koboSpan" id="kobo.1958.6" xmlns="http://www.w3.org/1999/xhtml">This is the type we will use in this book. </span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.1959.1" xmlns="http://www.w3.org/1999/xhtml">Fanout</span></strong><span class="koboSpan" id="kobo.1960.1" xmlns="http://www.w3.org/1999/xhtml">: A fanout </span><a id="_idIndexMarker964"/><span class="koboSpan" id="kobo.1961.1" xmlns="http://www.w3.org/1999/xhtml">exchange delivers messages to all queues that are bound to it, and the routing key is ignored. </span><span class="koboSpan" id="kobo.1961.2" xmlns="http://www.w3.org/1999/xhtml">These are good for broadcasting messages.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.1962.1" xmlns="http://www.w3.org/1999/xhtml">Topic</span></strong><span class="koboSpan" id="kobo.1963.1" xmlns="http://www.w3.org/1999/xhtml">: A topic </span><a id="_idIndexMarker965"/><span class="koboSpan" id="kobo.1964.1" xmlns="http://www.w3.org/1999/xhtml">exchange delivers messages based on a routing key and criteria defined in the binding between the exchange and a queue. </span><span class="koboSpan" id="kobo.1964.2" xmlns="http://www.w3.org/1999/xhtml">They are used for the publish/subscribe pattern, where there are many consumers but they want to receive different messages, based on factors like geographic location, registered interests, and so on.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.1965.1" xmlns="http://www.w3.org/1999/xhtml">Headers</span></strong><span class="koboSpan" id="kobo.1966.1" xmlns="http://www.w3.org/1999/xhtml">: A headers </span><a id="_idIndexMarker966"/><span class="koboSpan" id="kobo.1967.1" xmlns="http://www.w3.org/1999/xhtml">exchange delivers messages based on multiple attributes in a message header instead of a routing key.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.1968.1" xmlns="http://www.w3.org/1999/xhtml">The RabbitMQ API uses the following types:</span></p>
<ul>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1969.1" xmlns="http://www.w3.org/1999/xhtml">IConnection</span></code><span class="koboSpan" id="kobo.1970.1" xmlns="http://www.w3.org/1999/xhtml">: This represents an AMQP connection.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1971.1" xmlns="http://www.w3.org/1999/xhtml">ConnectionFactory</span></code><span class="koboSpan" id="kobo.1972.1" xmlns="http://www.w3.org/1999/xhtml">: This creates </span><code class="inlineCode"><span class="koboSpan" id="kobo.1973.1" xmlns="http://www.w3.org/1999/xhtml">IConnection</span></code><span class="koboSpan" id="kobo.1974.1" xmlns="http://www.w3.org/1999/xhtml"> instances. </span><span class="koboSpan" id="kobo.1974.2" xmlns="http://www.w3.org/1999/xhtml">It has default values for common properties designed to work with the Docker image. </span><span class="koboSpan" id="kobo.1974.3" xmlns="http://www.w3.org/1999/xhtml">For example, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1975.1" xmlns="http://www.w3.org/1999/xhtml">UserName</span></code><span class="koboSpan" id="kobo.1976.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.1977.1" xmlns="http://www.w3.org/1999/xhtml">guest</span></code><span class="koboSpan" id="kobo.1978.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1979.1" xmlns="http://www.w3.org/1999/xhtml">Password</span></code><span class="koboSpan" id="kobo.1980.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.1981.1" xmlns="http://www.w3.org/1999/xhtml">guest</span></code><span class="koboSpan" id="kobo.1982.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1983.1" xmlns="http://www.w3.org/1999/xhtml">VirtualHost</span></code><span class="koboSpan" id="kobo.1984.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.1985.1" xmlns="http://www.w3.org/1999/xhtml">/</span></code><span class="koboSpan" id="kobo.1986.1" xmlns="http://www.w3.org/1999/xhtml">, </span><code class="inlineCode"><span class="koboSpan" id="kobo.1987.1" xmlns="http://www.w3.org/1999/xhtml">HostName</span></code><span class="koboSpan" id="kobo.1988.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.1989.1" xmlns="http://www.w3.org/1999/xhtml">localhost</span></code><span class="koboSpan" id="kobo.1990.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.1991.1" xmlns="http://www.w3.org/1999/xhtml">Port</span></code><span class="koboSpan" id="kobo.1992.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.1993.1" xmlns="http://www.w3.org/1999/xhtml">5672</span></code><span class="koboSpan" id="kobo.1994.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.1995.1" xmlns="http://www.w3.org/1999/xhtml">IModel</span></code><span class="koboSpan" id="kobo.1996.1" xmlns="http://www.w3.org/1999/xhtml">: This represents the AMQP channel and has methods to perform common tasks, like declaring a queue with </span><code class="inlineCode"><span class="koboSpan" id="kobo.1997.1" xmlns="http://www.w3.org/1999/xhtml">QueueDeclare</span></code><span class="koboSpan" id="kobo.1998.1" xmlns="http://www.w3.org/1999/xhtml"> or sending a message using </span><code class="inlineCode"><span class="koboSpan" id="kobo.1999.1" xmlns="http://www.w3.org/1999/xhtml">BasicPublish</span></code><span class="koboSpan" id="kobo.2000.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2001.1" xmlns="http://www.w3.org/1999/xhtml">IBasicConsumer</span></code><span class="koboSpan" id="kobo.2002.1" xmlns="http://www.w3.org/1999/xhtml">: This represents a message consumer.</span></li>
<li class="bulletList"><code class="inlineCode"><span class="koboSpan" id="kobo.2003.1" xmlns="http://www.w3.org/1999/xhtml">EventBasicConsumer</span></code><span class="koboSpan" id="kobo.2004.1" xmlns="http://www.w3.org/1999/xhtml">: This is an implementation of a message consumer that integrates with the .NET event system, making it easy for a client app to process a message as soon as it is sent and received.</span></li>
</ul>
<div class="packt_tip">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2005.1" xmlns="http://www.w3.org/1999/xhtml">Good Practice</span></strong><span class="koboSpan" id="kobo.2006.1" xmlns="http://www.w3.org/1999/xhtml">: Queuing systems can get complicated fast. </span><span class="koboSpan" id="kobo.2006.2" xmlns="http://www.w3.org/1999/xhtml">In this book, we will cover the basics, but if you decide to implement any queuing system in production, then you will want to learn much more about how to implement them deeply.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.2007.1" xmlns="http://www.w3.org/1999/xhtml">You can install </span><a id="_idIndexMarker967"/><span class="koboSpan" id="kobo.2008.1" xmlns="http://www.w3.org/1999/xhtml">RabbitMQ locally on your computer, but for maximum ease of use, I recommend using a Docker image.</span></p>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2009.1" xmlns="http://www.w3.org/1999/xhtml">To install RabbitMQ on your computer, read the instructions at the following link for your operating system: </span><a href="https://www.rabbitmq.com/download.html"><span class="url"><span class="koboSpan" id="kobo.2010.1" xmlns="http://www.w3.org/1999/xhtml">https://www.rabbitmq.com/download.html</span></span></a><span class="koboSpan" id="kobo.2011.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h2 class="heading-2" id="_idParaDest-362"><span class="koboSpan" id="kobo.2012.1" xmlns="http://www.w3.org/1999/xhtml">Setting up RabbitMQ using Docker</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2013.1" xmlns="http://www.w3.org/1999/xhtml">The Docker image we </span><a id="_idIndexMarker968"/><span class="koboSpan" id="kobo.2014.1" xmlns="http://www.w3.org/1999/xhtml">will use has RabbitMQ version 3.12.0 and is designed</span><a id="_idIndexMarker969"/><span class="koboSpan" id="kobo.2015.1" xmlns="http://www.w3.org/1999/xhtml"> to be used as a throwaway container, where you simply start the container and your project can start using it with the default configuration.</span></p>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2016.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.2017.1" xmlns="http://www.w3.org/1999/xhtml">: You can read more about the Docker image at the following link: </span><a href="https://registry.hub.docker.com/_/rabbitmq/"><span class="url"><span class="koboSpan" id="kobo.2018.1" xmlns="http://www.w3.org/1999/xhtml">https://registry.hub.docker.com/_/rabbitmq/</span></span></a><span class="koboSpan" id="kobo.2019.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.2020.1" xmlns="http://www.w3.org/1999/xhtml">Let’s get started with RabbitMQ in a Docker container:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2021.1" xmlns="http://www.w3.org/1999/xhtml">Install </span><strong class="screenText"><span class="koboSpan" id="kobo.2022.1" xmlns="http://www.w3.org/1999/xhtml">Docker </span></strong><span class="koboSpan" id="kobo.2023.1" xmlns="http://www.w3.org/1999/xhtml">from the following link: </span><a href="https://docs.docker.com/engine/install/"><span class="url"><span class="koboSpan" id="kobo.2024.1" xmlns="http://www.w3.org/1999/xhtml">https://docs.docker.com/engine/install/</span></span></a><span class="koboSpan" id="kobo.2025.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2026.1" xmlns="http://www.w3.org/1999/xhtml">Start </span><strong class="screenText"><span class="koboSpan" id="kobo.2027.1" xmlns="http://www.w3.org/1999/xhtml">Docker</span></strong><span class="koboSpan" id="kobo.2028.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2029.1" xmlns="http://www.w3.org/1999/xhtml">At the command prompt or terminal, pull down the latest container image for RabbitMQ on Docker and run it, opening ports </span><code class="inlineCode"><span class="koboSpan" id="kobo.2030.1" xmlns="http://www.w3.org/1999/xhtml">5672</span></code><span class="koboSpan" id="kobo.2031.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2032.1" xmlns="http://www.w3.org/1999/xhtml">15672</span></code><span class="koboSpan" id="kobo.2033.1" xmlns="http://www.w3.org/1999/xhtml"> to the container, which are used by default by AMQP, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2034.1" xmlns="http://www.w3.org/1999/xhtml">docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.12-management
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2035.1" xmlns="http://www.w3.org/1999/xhtml">Note that the first time </span><a id="_idIndexMarker970"/><span class="koboSpan" id="kobo.2036.1" xmlns="http://www.w3.org/1999/xhtml">you run this command, the RabbitMQ image will not be found on</span><a id="_idIndexMarker971"/><span class="koboSpan" id="kobo.2037.1" xmlns="http://www.w3.org/1999/xhtml"> your local computer, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2038.1" xmlns="http://www.w3.org/1999/xhtml">Unable to find image 'rabbitmq:3.12-management' locally
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2039.1" xmlns="http://www.w3.org/1999/xhtml">Note that the image will then be downloaded automatically, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2040.1" xmlns="http://www.w3.org/1999/xhtml">3.12-management: Pulling from library/rabbitmq
99803d4b97f3: Pull complete
8fb904ec525a: Pull complete
ba4d114a87c0: Pull complete
c869b027f1e1: Pull complete
729c8b3166a8: Pull complete
7de098b90abf: Pull complete
4f206ad5199f: Pull complete
1f40437d763f: Pull complete
f4cbf27a2d68: Pull complete
5a4db5ea38b2: Pull complete
99886074092c: Pull complete
Digest: sha256:da98d468cf2236171da94e34953619ddd01b5db155ee326b653675d1e5017f0f
Status: Downloaded newer image for rabbitmq:3.12-management
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2041.1" xmlns="http://www.w3.org/1999/xhtml">Note that RabbitMQ runs on Erlang, and its copyright and license information is displayed when the container starts up, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2042.1" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 14:03:22.785019+00:00 [info] &lt;0.230.0&gt;  Starting RabbitMQ 3.12.0 on Erlang 25.3.2.2 [jit]
2023-06-11 14:03:22.785019+00:00 [info] &lt;0.230.0&gt;  Copyright (c) 2007-2023 VMware, Inc. </span><span class="koboSpan" id="kobo.2042.2" xmlns="http://www.w3.org/1999/xhtml">or its affiliates.
</span><span class="koboSpan" id="kobo.2042.3" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 14:03:22.785019+00:00 [info] &lt;0.230.0&gt;  Licensed under the MPL 2.0. </span><span class="koboSpan" id="kobo.2042.4" xmlns="http://www.w3.org/1999/xhtml">Website: https://rabbitmq.com
  ##  ##      RabbitMQ 3.12.0
  ##  ##
  ##########  Copyright (c) 2007-2023 VMware, Inc. </span><span class="koboSpan" id="kobo.2042.5" xmlns="http://www.w3.org/1999/xhtml">or its affiliates.
  </span><span class="koboSpan" id="kobo.2042.6" xmlns="http://www.w3.org/1999/xhtml">######  ##
  ##########  Licensed under the MPL 2.0. </span><span class="koboSpan" id="kobo.2042.7" xmlns="http://www.w3.org/1999/xhtml">Website: https://rabbitmq.com
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2043.1" xmlns="http://www.w3.org/1999/xhtml">Note the </span><a id="_idIndexMarker972"/><span class="koboSpan" id="kobo.2044.1" xmlns="http://www.w3.org/1999/xhtml">RabbitMQ service listens on port </span><code class="inlineCode"><span class="koboSpan" id="kobo.2045.1" xmlns="http://www.w3.org/1999/xhtml">5672</span></code><span class="koboSpan" id="kobo.2046.1" xmlns="http://www.w3.org/1999/xhtml"> and</span><a id="_idIndexMarker973"/><span class="koboSpan" id="kobo.2047.1" xmlns="http://www.w3.org/1999/xhtml"> has started four plugins, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2048.1" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 14:03:27.574844+00:00 [info] &lt;0.744.0&gt; started TCP listener on [::]:5672
 completed with 4 plugins.
</span><span class="koboSpan" id="kobo.2048.2" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 14:03:27.659139+00:00 [info] &lt;0.599.0&gt; Server startup complete; 4 plugins started.
</span><span class="koboSpan" id="kobo.2048.3" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 14:03:27.659139+00:00 [info] &lt;0.599.0&gt;  * rabbitmq_prometheus
2023-06-11 14:03:27.659139+00:00 [info] &lt;0.599.0&gt;  * rabbitmq_management
2023-06-11 14:03:27.659139+00:00 [info] &lt;0.599.0&gt;  * rabbitmq_web_dispatch
2023-06-11 14:03:27.659139+00:00 [info] &lt;0.599.0&gt;  * rabbitmq_management_agent
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2049.1" xmlns="http://www.w3.org/1999/xhtml">Leave the command prompt or terminal running.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2050.1" xmlns="http://www.w3.org/1999/xhtml">Optionally, in </span><strong class="screenText"><span class="koboSpan" id="kobo.2051.1" xmlns="http://www.w3.org/1999/xhtml">Docker Desktop</span></strong><span class="koboSpan" id="kobo.2052.1" xmlns="http://www.w3.org/1999/xhtml">, note that a container for RabbitMQ runs and listens on ports </span><code class="inlineCode"><span class="koboSpan" id="kobo.2053.1" xmlns="http://www.w3.org/1999/xhtml">5672</span></code><span class="koboSpan" id="kobo.2054.1" xmlns="http://www.w3.org/1999/xhtml"> (the actual queue service) and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2055.1" xmlns="http://www.w3.org/1999/xhtml">15672</span></code><span class="koboSpan" id="kobo.2056.1" xmlns="http://www.w3.org/1999/xhtml"> (its management service), as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2057.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.3</span></em><span class="koboSpan" id="kobo.2058.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2059.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_03.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2060.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.3: RabbitMQ running in a Docker container</span></p>
<h2 class="heading-2" id="_idParaDest-363"><span class="koboSpan" id="kobo.2061.1" xmlns="http://www.w3.org/1999/xhtml">Sending messages to a queue using an MVC website</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2062.1" xmlns="http://www.w3.org/1999/xhtml">Now that we have the</span><a id="_idIndexMarker974"/><span class="koboSpan" id="kobo.2063.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ system running, we can add the RabbitMQ client package to the MVC website project so that it can send messages to a queue.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2064.1" xmlns="http://www.w3.org/1999/xhtml">But first, let’s create a class library to define models we will use with the queue:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2065.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a new class library project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2066.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.2067.1" xmlns="http://www.w3.org/1999/xhtml">Class Library</span></strong><span class="koboSpan" id="kobo.2068.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2069.1" xmlns="http://www.w3.org/1999/xhtml">classlib</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2070.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2071.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2072.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2073.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Queue.Models</span></code></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2074.1" xmlns="http://www.w3.org/1999/xhtml">Add a project reference to the Northwind entity models project for SQL Server that you created in </span><em class="chapterRef"><span class="koboSpan" id="kobo.2075.1" xmlns="http://www.w3.org/1999/xhtml">Chapter 3</span></em><span class="koboSpan" id="kobo.2076.1" xmlns="http://www.w3.org/1999/xhtml">, </span><em class="italic"><span class="koboSpan" id="kobo.2077.1" xmlns="http://www.w3.org/1999/xhtml">Building Entity Models for SQL Server Using EF Core</span></em><span class="koboSpan" id="kobo.2078.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2079.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2080.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.EntityModels</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2081.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.EntityModels.SqlServer.csproj"</span></span><span class="koboSpan" id="kobo.2082.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2083.1" xmlns="http://www.w3.org/1999/xhtml">At the command prompt or terminal, build the project to make sure the entity model class library projects outside the current solution are properly compiled, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2084.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2085.1" xmlns="http://www.w3.org/1999/xhtml">Delete the file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2086.1" xmlns="http://www.w3.org/1999/xhtml">Class1.cs</span></code><span class="koboSpan" id="kobo.2087.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2088.1" xmlns="http://www.w3.org/1999/xhtml">Add a new file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2089.1" xmlns="http://www.w3.org/1999/xhtml">ProductQueueMessage.cs</span></code><span class="koboSpan" id="kobo.2090.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2091.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2092.1" xmlns="http://www.w3.org/1999/xhtml">ProductQueueMessage.cs</span></code><span class="koboSpan" id="kobo.2093.1" xmlns="http://www.w3.org/1999/xhtml">, define a class that will represent a message in a queue with a </span><a id="_idIndexMarker975"/><span class="koboSpan" id="kobo.2094.1" xmlns="http://www.w3.org/1999/xhtml">simple plain text property and a complex </span><code class="inlineCode"><span class="koboSpan" id="kobo.2095.1" xmlns="http://www.w3.org/1999/xhtml">Product</span></code><span class="koboSpan" id="kobo.2096.1" xmlns="http://www.w3.org/1999/xhtml"> entity model type as a second property, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2097.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2098.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.EntityModels; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2099.1" xmlns="http://www.w3.org/1999/xhtml">// To use Product.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2100.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2101.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Queue.Models</span></span><span class="koboSpan" id="kobo.2102.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2103.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2104.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2105.1" xmlns="http://www.w3.org/1999/xhtml">ProductQueueMessage</span></span><span class="koboSpan" id="kobo.2106.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2107.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2108.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2109.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2109.2" xmlns="http://www.w3.org/1999/xhtml">Text { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2110.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2111.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2112.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2113.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2114.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2115.1" xmlns="http://www.w3.org/1999/xhtml"> Product Product { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2116.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2117.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2118.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2119.1" xmlns="http://www.w3.org/1999/xhtml">; } = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2120.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2121.1" xmlns="http://www.w3.org/1999/xhtml">!;
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2122.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2123.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.2124.1" xmlns="http://www.w3.org/1999/xhtml"> project file, add a reference to the queue models project so that we can use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2125.1" xmlns="http://www.w3.org/1999/xhtml">ProductQueueMessage</span></code><span class="koboSpan" id="kobo.2126.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2127.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;ProjectReference Include=
  </span><span class="hljs-string"><span class="koboSpan" id="kobo.2128.1" xmlns="http://www.w3.org/1999/xhtml">"..\Northwind.Queue.Models\Northwind.Queue.Models.csproj"</span></span><span class="koboSpan" id="kobo.2129.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2130.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2131.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.2132.1" xmlns="http://www.w3.org/1999/xhtml"> project file, add a package reference for RabbitMQ clients, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2133.1" xmlns="http://www.w3.org/1999/xhtml">&lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2134.1" xmlns="http://www.w3.org/1999/xhtml">"RabbitMQ.Client"</span></span><span class="koboSpan" id="kobo.2135.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2136.1" xmlns="http://www.w3.org/1999/xhtml">"6.7.0"</span></span><span class="koboSpan" id="kobo.2137.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
</span></code></pre>
<div class="note">
<p class="normal"><span class="koboSpan" id="kobo.2138.1" xmlns="http://www.w3.org/1999/xhtml">You can check the latest package version at the following link: </span><a href="https://www.nuget.org/packages/RabbitMQ.Client/"><span class="url"><span class="koboSpan" id="kobo.2139.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/packages/RabbitMQ.Client/</span></span></a></p>
</div></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="9"><span class="koboSpan" id="kobo.2140.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2141.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.2142.1" xmlns="http://www.w3.org/1999/xhtml"> project.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2143.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2144.1" xmlns="http://www.w3.org/1999/xhtml">Models</span></code><span class="koboSpan" id="kobo.2145.1" xmlns="http://www.w3.org/1999/xhtml"> folder, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2146.1" xmlns="http://www.w3.org/1999/xhtml">HomeSendMessageViewModel.cs</span></code><span class="koboSpan" id="kobo.2147.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2148.1" xmlns="http://www.w3.org/1999/xhtml">Define a class to represent the information that needs to be displayed in a view for sending a message including a couple of properties for showing message to the </span><a id="_idIndexMarker976"/><span class="koboSpan" id="kobo.2149.1" xmlns="http://www.w3.org/1999/xhtml">visitor when a message is successfully sent and when an error occurs, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2150.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2151.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Queue.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2152.1" xmlns="http://www.w3.org/1999/xhtml">// To use ProductQueueMessage.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2153.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2154.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc.Models</span></span><span class="koboSpan" id="kobo.2155.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2156.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2157.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2158.1" xmlns="http://www.w3.org/1999/xhtml">HomeSendMessageViewModel</span></span><span class="koboSpan" id="kobo.2159.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2160.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2161.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2162.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2162.2" xmlns="http://www.w3.org/1999/xhtml">Info { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2163.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2164.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2165.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2166.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2167.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.2168.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2169.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2169.2" xmlns="http://www.w3.org/1999/xhtml">Error { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2170.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2171.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2172.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2173.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2174.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="koboSpan" id="kobo.2175.1" xmlns="http://www.w3.org/1999/xhtml"> ProductQueueMessage? </span><span class="koboSpan" id="kobo.2175.2" xmlns="http://www.w3.org/1999/xhtml">Message { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2176.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.2177.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2178.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.2179.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2180.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2181.1" xmlns="http://www.w3.org/1999/xhtml">Views\Home</span></code><span class="koboSpan" id="kobo.2182.1" xmlns="http://www.w3.org/1999/xhtml">, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.2183.1" xmlns="http://www.w3.org/1999/xhtml">Index.cshtml</span></code><span class="koboSpan" id="kobo.2184.1" xmlns="http://www.w3.org/1999/xhtml">, add a link to a page that will let the visitor send a message to a queue, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-tag"><span class="koboSpan" id="kobo.2185.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2186.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2187.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2188.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2189.1" xmlns="http://www.w3.org/1999/xhtml">href</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2190.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2191.1" xmlns="http://www.w3.org/1999/xhtml">"home/sendmessage"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2192.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2193.1" xmlns="http://www.w3.org/1999/xhtml">Send a message</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2194.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2195.1" xmlns="http://www.w3.org/1999/xhtml">a</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2196.1" xmlns="http://www.w3.org/1999/xhtml">&gt;&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2197.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2198.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2199.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2200.1" xmlns="http://www.w3.org/1999/xhtml">HomeControllers.cs</span></code><span class="koboSpan" id="kobo.2201.1" xmlns="http://www.w3.org/1999/xhtml">, import namespaces to work with RabbitMQ and serialize JSON, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2202.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2203.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ.Client; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2204.1" xmlns="http://www.w3.org/1999/xhtml">// To use ConnectionFactory and so on.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2205.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2206.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text.Json; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2207.1" xmlns="http://www.w3.org/1999/xhtml">// To use JsonSerializer.</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2208.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2209.1" xmlns="http://www.w3.org/1999/xhtml">HomeControllers.cs</span></code><span class="koboSpan" id="kobo.2210.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define an action method that responds to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2211.1" xmlns="http://www.w3.org/1999/xhtml">GET</span></code><span class="koboSpan" id="kobo.2212.1" xmlns="http://www.w3.org/1999/xhtml"> request by showing a web form to send a message, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2213.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2214.1" xmlns="http://www.w3.org/1999/xhtml"> IActionResult </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2215.1" xmlns="http://www.w3.org/1999/xhtml">SendMessage</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2216.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.2217.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2218.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2219.1" xmlns="http://www.w3.org/1999/xhtml"> View();
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2220.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2221.1" xmlns="http://www.w3.org/1999/xhtml">HomeControllers.cs</span></code><span class="koboSpan" id="kobo.2222.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to define an action method that responds to a </span><code class="inlineCode"><span class="koboSpan" id="kobo.2223.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.2224.1" xmlns="http://www.w3.org/1999/xhtml"> request by sending a message from information in the form, as shown in the</span><a id="_idIndexMarker977"/><span class="koboSpan" id="kobo.2225.1" xmlns="http://www.w3.org/1999/xhtml"> following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.2226.1" xmlns="http://www.w3.org/1999/xhtml">// POST: home/sendmessage</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2227.1" xmlns="http://www.w3.org/1999/xhtml">// Body: message=Hello&amp;productId=1</span></span><span class="koboSpan" id="kobo.2228.1" xmlns="http://www.w3.org/1999/xhtml">
[</span><span class="hljs-meta"><span class="koboSpan" id="kobo.2229.1" xmlns="http://www.w3.org/1999/xhtml">HttpPost</span></span><span class="koboSpan" id="kobo.2230.1" xmlns="http://www.w3.org/1999/xhtml">]
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2231.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2232.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2233.1" xmlns="http://www.w3.org/1999/xhtml"> Task&lt;IActionResult&gt; </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2234.1" xmlns="http://www.w3.org/1999/xhtml">SendMessage</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2235.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"> </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2236.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2237.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2237.2" xmlns="http://www.w3.org/1999/xhtml">message, </span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2238.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2239.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.2239.2" xmlns="http://www.w3.org/1999/xhtml">productId</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2240.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2241.1" xmlns="http://www.w3.org/1999/xhtml">
{
  HomeSendMessageViewModel model = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2242.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2243.1" xmlns="http://www.w3.org/1999/xhtml">();
  model.Message = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2244.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2245.1" xmlns="http://www.w3.org/1999/xhtml">();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2246.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2247.1" xmlns="http://www.w3.org/1999/xhtml"> (message </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2248.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2249.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2250.1" xmlns="http://www.w3.org/1999/xhtml"> || productId </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2251.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2252.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2253.1" xmlns="http://www.w3.org/1999/xhtml">)
  {
    model.Error = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2254.1" xmlns="http://www.w3.org/1999/xhtml">"Please enter a message and a product ID."</span></span><span class="koboSpan" id="kobo.2255.1" xmlns="http://www.w3.org/1999/xhtml">;
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2256.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2257.1" xmlns="http://www.w3.org/1999/xhtml"> View(model);
  }
  model.Message.Text = message;
  model.Message.Product = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2258.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2259.1" xmlns="http://www.w3.org/1999/xhtml">() { ProductId = productId.Value };
  HttpClient client = _httpClientFactory.CreateClient(
    name: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2260.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind.WebApi.Service"</span></span><span class="koboSpan" id="kobo.2261.1" xmlns="http://www.w3.org/1999/xhtml">);
  HttpRequestMessage request = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2262.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2263.1" xmlns="http://www.w3.org/1999/xhtml">(
    method: HttpMethod.Get,
    requestUri: </span><span class="hljs-string"><span class="koboSpan" id="kobo.2264.1" xmlns="http://www.w3.org/1999/xhtml">$"api/products/</span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2265.1" xmlns="http://www.w3.org/1999/xhtml">{productId}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2266.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2267.1" xmlns="http://www.w3.org/1999/xhtml">);
  HttpResponseMessage response = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2268.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2269.1" xmlns="http://www.w3.org/1999/xhtml"> client.SendAsync(request);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2270.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2271.1" xmlns="http://www.w3.org/1999/xhtml"> (response.IsSuccessStatusCode)
  {
    Product? </span><span class="koboSpan" id="kobo.2271.2" xmlns="http://www.w3.org/1999/xhtml">product = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2272.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2273.1" xmlns="http://www.w3.org/1999/xhtml"> response.Content.ReadFromJsonAsync&lt;Product&gt;();
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2274.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2275.1" xmlns="http://www.w3.org/1999/xhtml"> (product </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2276.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2277.1" xmlns="http://www.w3.org/1999/xhtml">not</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2278.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2279.1" xmlns="http://www.w3.org/1999/xhtml">)
    {
      model.Message.Product = product;
    }
  }
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2280.1" xmlns="http://www.w3.org/1999/xhtml">// Create a RabbitMQ factory.</span></span><span class="koboSpan" id="kobo.2281.1" xmlns="http://www.w3.org/1999/xhtml">
  ConnectionFactory factory = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2282.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2283.1" xmlns="http://www.w3.org/1999/xhtml">() { HostName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2284.1" xmlns="http://www.w3.org/1999/xhtml">"localhost"</span></span><span class="koboSpan" id="kobo.2285.1" xmlns="http://www.w3.org/1999/xhtml"> };
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2286.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2287.1" xmlns="http://www.w3.org/1999/xhtml"> IConnection connection = factory.CreateConnection();
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2288.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2289.1" xmlns="http://www.w3.org/1999/xhtml"> IModel channel = connection.CreateModel();
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2290.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2291.1" xmlns="http://www.w3.org/1999/xhtml"> queueNameAndRoutingKey = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2292.1" xmlns="http://www.w3.org/1999/xhtml">"product"</span></span><span class="koboSpan" id="kobo.2293.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2294.1" xmlns="http://www.w3.org/1999/xhtml">// If the queue does not exist, it will be created.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2295.1" xmlns="http://www.w3.org/1999/xhtml">// If the Docker container is restarted, the queue will be lost.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2296.1" xmlns="http://www.w3.org/1999/xhtml">// The queue can be shared with multiple consumers.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.2297.1" xmlns="http://www.w3.org/1999/xhtml">// The queue will not be deleted when the last message is consumer.</span></span><span class="koboSpan" id="kobo.2298.1" xmlns="http://www.w3.org/1999/xhtml">
  channel.QueueDeclare(queue: queueNameAndRoutingKey, durable: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2299.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2300.1" xmlns="http://www.w3.org/1999/xhtml">, 
    exclusive: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2301.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2302.1" xmlns="http://www.w3.org/1999/xhtml">, autoDelete: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2303.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2304.1" xmlns="http://www.w3.org/1999/xhtml">, arguments: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2305.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2306.1" xmlns="http://www.w3.org/1999/xhtml">);
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2307.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></span><span class="koboSpan" id="kobo.2308.1" xmlns="http://www.w3.org/1999/xhtml">[] body = JsonSerializer.SerializeToUtf8Bytes(model.Message);
  </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2309.1" xmlns="http://www.w3.org/1999/xhtml">// The exchange is empty because we are using the default exchange.</span></span><span class="koboSpan" id="kobo.2310.1" xmlns="http://www.w3.org/1999/xhtml">
  channel.BasicPublish(exchange: </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2311.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2312.1" xmlns="http://www.w3.org/1999/xhtml">.Empty, 
    routingKey: queueNameAndRoutingKey, 
    basicProperties: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2313.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2314.1" xmlns="http://www.w3.org/1999/xhtml">, body: body);
  model.Info = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2315.1" xmlns="http://www.w3.org/1999/xhtml">"Message sent to queue successfully."</span></span><span class="koboSpan" id="kobo.2316.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2317.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.2318.1" xmlns="http://www.w3.org/1999/xhtml"> View(model);
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2319.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2320.1" xmlns="http://www.w3.org/1999/xhtml">Views\Home</span></code><span class="koboSpan" id="kobo.2321.1" xmlns="http://www.w3.org/1999/xhtml">, add a</span><a id="_idIndexMarker978"/><span class="koboSpan" id="kobo.2322.1" xmlns="http://www.w3.org/1999/xhtml"> new empty Razor View named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2323.1" xmlns="http://www.w3.org/1999/xhtml">SendMessage.cshtml</span></code><span class="koboSpan" id="kobo.2324.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2325.1" xmlns="http://www.w3.org/1999/xhtml">Define a web page with a form to send a message, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2326.1" xmlns="http://www.w3.org/1999/xhtml">@model HomeSendMessageViewModel
@{
  ViewData[</span><span class="hljs-string"><span class="koboSpan" id="kobo.2327.1" xmlns="http://www.w3.org/1999/xhtml">"Title"</span></span><span class="koboSpan" id="kobo.2328.1" xmlns="http://www.w3.org/1999/xhtml">] = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2329.1" xmlns="http://www.w3.org/1999/xhtml">"Send a Message"</span></span><span class="koboSpan" id="kobo.2330.1" xmlns="http://www.w3.org/1999/xhtml">;
}
</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2331.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2332.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2333.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2334.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2335.1" xmlns="http://www.w3.org/1999/xhtml">"text-center"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2336.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2337.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2338.1" xmlns="http://www.w3.org/1999/xhtml">h1</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2339.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2340.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2341.1" xmlns="http://www.w3.org/1999/xhtml">"display-4"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2342.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2343.1" xmlns="http://www.w3.org/1999/xhtml">@ViewData["Title"]</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2344.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2345.1" xmlns="http://www.w3.org/1999/xhtml">h1</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2346.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2347.1" xmlns="http://www.w3.org/1999/xhtml">
  @if (Model is not null)
  {
    if (Model.Error is not null)
    {
      </span><span class="hljs-tag"><span class="koboSpan" id="kobo.2348.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2349.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2350.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2351.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2352.1" xmlns="http://www.w3.org/1999/xhtml">"alert alert-danger"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2353.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2354.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2355.1" xmlns="http://www.w3.org/1999/xhtml">h2</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2356.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2357.1" xmlns="http://www.w3.org/1999/xhtml">Error</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2358.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2359.1" xmlns="http://www.w3.org/1999/xhtml">h2</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2360.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2361.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2362.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2363.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2364.1" xmlns="http://www.w3.org/1999/xhtml">@Model.Error</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2365.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2366.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2367.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2368.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2369.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2370.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2371.1" xmlns="http://www.w3.org/1999/xhtml">
    }
    if (Model.Info is not null)
    {
      </span><span class="hljs-tag"><span class="koboSpan" id="kobo.2372.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2373.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2374.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2375.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2376.1" xmlns="http://www.w3.org/1999/xhtml">"alert alert-info"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2377.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2378.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2379.1" xmlns="http://www.w3.org/1999/xhtml">h2</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2380.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2381.1" xmlns="http://www.w3.org/1999/xhtml">Information</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2382.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2383.1" xmlns="http://www.w3.org/1999/xhtml">h2</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2384.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2385.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2386.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2387.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2388.1" xmlns="http://www.w3.org/1999/xhtml">@Model.Info</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2389.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2390.1" xmlns="http://www.w3.org/1999/xhtml">p</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2391.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2392.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2393.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2394.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2395.1" xmlns="http://www.w3.org/1999/xhtml">
    }
  }
  </span><span class="hljs-tag"><span class="koboSpan" id="kobo.2396.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2397.1" xmlns="http://www.w3.org/1999/xhtml">form</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2398.1" xmlns="http://www.w3.org/1999/xhtml">asp-controller</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2399.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2400.1" xmlns="http://www.w3.org/1999/xhtml">"Home"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2401.1" xmlns="http://www.w3.org/1999/xhtml">asp-action</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2402.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2403.1" xmlns="http://www.w3.org/1999/xhtml">"SendMessage"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2404.1" xmlns="http://www.w3.org/1999/xhtml">method</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2405.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2406.1" xmlns="http://www.w3.org/1999/xhtml">"post"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2407.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2408.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2409.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2410.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2411.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2412.1" xmlns="http://www.w3.org/1999/xhtml">label</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2413.1" xmlns="http://www.w3.org/1999/xhtml">for</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2414.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2415.1" xmlns="http://www.w3.org/1999/xhtml">"message"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2416.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2417.1" xmlns="http://www.w3.org/1999/xhtml">Message</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2418.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2419.1" xmlns="http://www.w3.org/1999/xhtml">label</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2420.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2421.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2422.1" xmlns="http://www.w3.org/1999/xhtml">input</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2423.1" xmlns="http://www.w3.org/1999/xhtml">id</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2424.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2425.1" xmlns="http://www.w3.org/1999/xhtml">"message"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2426.1" xmlns="http://www.w3.org/1999/xhtml">name</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2427.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2428.1" xmlns="http://www.w3.org/1999/xhtml">"message"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2429.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2430.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2431.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2432.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2433.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2434.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2435.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2436.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2437.1" xmlns="http://www.w3.org/1999/xhtml">label</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2438.1" xmlns="http://www.w3.org/1999/xhtml">for</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2439.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2440.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2441.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span><span class="koboSpan" id="kobo.2442.1" xmlns="http://www.w3.org/1999/xhtml">Product ID</span><span class="hljs-tag"><span class="koboSpan" id="kobo.2443.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2444.1" xmlns="http://www.w3.org/1999/xhtml">label</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2445.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2446.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2447.1" xmlns="http://www.w3.org/1999/xhtml">input</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2448.1" xmlns="http://www.w3.org/1999/xhtml">id</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2449.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2450.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2451.1" xmlns="http://www.w3.org/1999/xhtml">name</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2452.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2453.1" xmlns="http://www.w3.org/1999/xhtml">"productId"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2454.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2455.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2456.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2457.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2458.1" xmlns="http://www.w3.org/1999/xhtml">&lt;</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2459.1" xmlns="http://www.w3.org/1999/xhtml">input</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2460.1" xmlns="http://www.w3.org/1999/xhtml">type</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2461.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2462.1" xmlns="http://www.w3.org/1999/xhtml">"submit"</span></span><span class="hljs-tag"> </span><span class="hljs-attr"><span class="koboSpan" id="kobo.2463.1" xmlns="http://www.w3.org/1999/xhtml">value</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2464.1" xmlns="http://www.w3.org/1999/xhtml">=</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2465.1" xmlns="http://www.w3.org/1999/xhtml">"Send"</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2466.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></span><span class="koboSpan" id="kobo.2467.1" xmlns="http://www.w3.org/1999/xhtml">"
  </span><span class="hljs-tag"><span class="koboSpan" id="kobo.2468.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2469.1" xmlns="http://www.w3.org/1999/xhtml">form</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2470.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
<span class="hljs-tag"><span class="koboSpan" id="kobo.2471.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/</span></span><span class="hljs-name"><span class="koboSpan" id="kobo.2472.1" xmlns="http://www.w3.org/1999/xhtml">div</span></span><span class="hljs-tag"><span class="koboSpan" id="kobo.2473.1" xmlns="http://www.w3.org/1999/xhtml">&gt;</span></span>
</code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-364"><span class="koboSpan" id="kobo.2474.1" xmlns="http://www.w3.org/1999/xhtml">Consuming message from a queue using a console app</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2475.1" xmlns="http://www.w3.org/1999/xhtml">Finally, we can create a </span><a id="_idIndexMarker979"/><span class="koboSpan" id="kobo.2476.1" xmlns="http://www.w3.org/1999/xhtml">console app that will process messages from the queue:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2477.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a new console app project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2478.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.2479.1" xmlns="http://www.w3.org/1999/xhtml">Console App</span></strong><span class="koboSpan" id="kobo.2480.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.2481.1" xmlns="http://www.w3.org/1999/xhtml">console</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2482.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2483.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2484.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2485.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Queue.Consumer</span></code></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2486.1" xmlns="http://www.w3.org/1999/xhtml">Treat warnings as errors, add a package reference for RabbitMQ, add project references to the Northwind entity models project and the queue message models</span><a id="_idIndexMarker980"/><span class="koboSpan" id="kobo.2487.1" xmlns="http://www.w3.org/1999/xhtml"> project, and statically and globally import the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2488.1" xmlns="http://www.w3.org/1999/xhtml">System.Console</span></code><span class="koboSpan" id="kobo.2489.1" xmlns="http://www.w3.org/1999/xhtml"> class, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2490.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2491.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.NET.Sdk"</span></span><span class="koboSpan" id="kobo.2492.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
  &lt;PropertyGroup&gt;
    &lt;OutputType&gt;Exe&lt;/OutputType&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.2493.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.2494.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2495.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2496.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2497.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.2498.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2499.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2500.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2501.1" xmlns="http://www.w3.org/1999/xhtml">"RabbitMQ.Client"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2502.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2503.1" xmlns="http://www.w3.org/1999/xhtml">"6.7.0"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2504.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2505.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2506.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2507.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;ProjectReference Include=</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2508.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.EntityModels.SqlServer\</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2509.1" xmlns="http://www.w3.org/1999/xhtml">      Northwind.Common.EntityModels.SqlServer.csproj"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2510.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2511.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;ProjectReference Include=</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2512.1" xmlns="http://www.w3.org/1999/xhtml">"..\Northwind.Queue.Models\Northwind.Queue.Models.csproj"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2513.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2514.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2515.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2516.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;Using Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2517.1" xmlns="http://www.w3.org/1999/xhtml">"System.Console"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2518.1" xmlns="http://www.w3.org/1999/xhtml"> Static=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2519.1" xmlns="http://www.w3.org/1999/xhtml">"true"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2520.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2521.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span><span class="koboSpan" id="kobo.2522.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;/Project&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2523.1" xmlns="http://www.w3.org/1999/xhtml">At the command prompt or terminal, build the project, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2524.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2525.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2526.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2527.1" xmlns="http://www.w3.org/1999/xhtml">, delete</span><a id="_idIndexMarker981"/><span class="koboSpan" id="kobo.2528.1" xmlns="http://www.w3.org/1999/xhtml"> any existing statements, and then add statements to read messages from the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2529.1" xmlns="http://www.w3.org/1999/xhtml">product</span></code><span class="koboSpan" id="kobo.2530.1" xmlns="http://www.w3.org/1999/xhtml"> queue, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2531.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2532.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Queue.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2533.1" xmlns="http://www.w3.org/1999/xhtml">// To use ProductQueueMessage.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2534.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2535.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ.Client; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2536.1" xmlns="http://www.w3.org/1999/xhtml">// To use ConnectionFactory.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2537.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2538.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ.Client.Events; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2539.1" xmlns="http://www.w3.org/1999/xhtml">// To use EventingBasicConsumer.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2540.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2541.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text.Json; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.2542.1" xmlns="http://www.w3.org/1999/xhtml">// To use JsonSerializer.</span></span>
<span class="hljs-built_in"><span class="koboSpan" id="kobo.2543.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.2544.1" xmlns="http://www.w3.org/1999/xhtml"> queueName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2545.1" xmlns="http://www.w3.org/1999/xhtml">"product"</span></span><span class="koboSpan" id="kobo.2546.1" xmlns="http://www.w3.org/1999/xhtml">;
ConnectionFactory factory = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2547.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2548.1" xmlns="http://www.w3.org/1999/xhtml"> () { HostName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.2549.1" xmlns="http://www.w3.org/1999/xhtml">"localhost"</span></span><span class="koboSpan" id="kobo.2550.1" xmlns="http://www.w3.org/1999/xhtml"> };
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2551.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2552.1" xmlns="http://www.w3.org/1999/xhtml"> IConnection connection = factory.CreateConnection();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2553.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2554.1" xmlns="http://www.w3.org/1999/xhtml"> IModel channel = connection.CreateModel();
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2555.1" xmlns="http://www.w3.org/1999/xhtml">"Declaring queue..."</span></span><span class="koboSpan" id="kobo.2556.1" xmlns="http://www.w3.org/1999/xhtml">);
QueueDeclareOk response = channel.QueueDeclare(
  queue: queueName,
  durable: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2557.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2558.1" xmlns="http://www.w3.org/1999/xhtml">,
  exclusive: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2559.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2560.1" xmlns="http://www.w3.org/1999/xhtml">,
  autoDelete: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2561.1" xmlns="http://www.w3.org/1999/xhtml">false</span></span><span class="koboSpan" id="kobo.2562.1" xmlns="http://www.w3.org/1999/xhtml">,
  arguments: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2563.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2564.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2565.1" xmlns="http://www.w3.org/1999/xhtml">"Queue name: {response.QueueName}, Message count: {</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2566.1" xmlns="http://www.w3.org/1999/xhtml">  response.MessageCount}, Consumer count: {response.ConsumerCount}."</span></span><span class="koboSpan" id="kobo.2567.1" xmlns="http://www.w3.org/1999/xhtml">);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2568.1" xmlns="http://www.w3.org/1999/xhtml">"Waiting for messages..."</span></span><span class="koboSpan" id="kobo.2569.1" xmlns="http://www.w3.org/1999/xhtml">);
EventingBasicConsumer consumer = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2570.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.2571.1" xmlns="http://www.w3.org/1999/xhtml">(channel);
consumer.Received += (model, args) =&gt;
{
  </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.2572.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></span><span class="koboSpan" id="kobo.2573.1" xmlns="http://www.w3.org/1999/xhtml">[] body = args.Body.ToArray();
  ProductQueueMessage? </span><span class="koboSpan" id="kobo.2573.2" xmlns="http://www.w3.org/1999/xhtml">message = JsonSerializer
    .Deserialize&lt;ProductQueueMessage&gt;(body);
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2574.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.2575.1" xmlns="http://www.w3.org/1999/xhtml"> (message </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2576.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2577.1" xmlns="http://www.w3.org/1999/xhtml">not</span></span> <span class="hljs-literal"><span class="koboSpan" id="kobo.2578.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.2579.1" xmlns="http://www.w3.org/1999/xhtml">)
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2580.1" xmlns="http://www.w3.org/1999/xhtml">"Received product. </span><span class="koboSpan" id="kobo.2580.2" xmlns="http://www.w3.org/1999/xhtml">Id: {message.Product.ProductId</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2581.1" xmlns="http://www.w3.org/1999/xhtml">      }, Name: { message.Product.ProductName}, Message: {</span></span>
<span class="hljs-string"><span class="koboSpan" id="kobo.2582.1" xmlns="http://www.w3.org/1999/xhtml">      message.Text}"</span></span><span class="koboSpan" id="kobo.2583.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2584.1" xmlns="http://www.w3.org/1999/xhtml">else</span></span><span class="koboSpan" id="kobo.2585.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2586.1" xmlns="http://www.w3.org/1999/xhtml">$"Received unknown: </span></span><span class="hljs-subst"><span class="koboSpan" id="kobo.2587.1" xmlns="http://www.w3.org/1999/xhtml">{args.Body.ToArray()}</span></span><span class="hljs-string"><span class="koboSpan" id="kobo.2588.1" xmlns="http://www.w3.org/1999/xhtml">."</span></span><span class="koboSpan" id="kobo.2589.1" xmlns="http://www.w3.org/1999/xhtml">);
  }
};
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.2590.1" xmlns="http://www.w3.org/1999/xhtml">// Start consuming as messages arrive in the queue.</span></span><span class="koboSpan" id="kobo.2591.1" xmlns="http://www.w3.org/1999/xhtml">
channel.BasicConsume(queue: queueName,
  autoAck: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.2592.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.2593.1" xmlns="http://www.w3.org/1999/xhtml">,
  consumer: consumer);
WriteLine(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2594.1" xmlns="http://www.w3.org/1999/xhtml">"&gt;&gt;&gt; Press Enter to stop consuming and quit. </span><span class="koboSpan" id="kobo.2594.2" xmlns="http://www.w3.org/1999/xhtml">&lt;&lt;&lt;"</span></span><span class="koboSpan" id="kobo.2595.1" xmlns="http://www.w3.org/1999/xhtml">);
ReadLine();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2596.1" xmlns="http://www.w3.org/1999/xhtml">If your database </span><a id="_idIndexMarker982"/><span class="koboSpan" id="kobo.2597.1" xmlns="http://www.w3.org/1999/xhtml">server is not running (for example, because you are hosting it in Docker, a virtual machine, or in the cloud), then make sure to start it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2598.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2599.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.2600.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2601.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.2602.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2603.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2604.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.2605.1" xmlns="http://www.w3.org/1999/xhtml"> project, using the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2606.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.2607.1" xmlns="http://www.w3.org/1999/xhtml"> profile without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2608.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2609.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Queue.Consumer</span></code><span class="koboSpan" id="kobo.2610.1" xmlns="http://www.w3.org/1999/xhtml"> console app project with or without debugging:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2611.1" xmlns="http://www.w3.org/1999/xhtml">Optionally, you can configure your solution to start up all three projects at once, as shown for Visual Studio 2022 in </span><em class="italic"><span class="koboSpan" id="kobo.2612.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.4</span></em><span class="koboSpan" id="kobo.2613.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ul>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2614.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_04.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2615.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.4: Configuring three startup projects to test message queues</span></p></li>
</ol>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="9"><span class="koboSpan" id="kobo.2616.1" xmlns="http://www.w3.org/1999/xhtml">Arrange the console app and the</span><a id="_idIndexMarker983"/><span class="koboSpan" id="kobo.2617.1" xmlns="http://www.w3.org/1999/xhtml"> MVC web page so that you can see both, then click </span><strong class="screenText"><span class="koboSpan" id="kobo.2618.1" xmlns="http://www.w3.org/1999/xhtml">Send a message</span></strong><span class="koboSpan" id="kobo.2619.1" xmlns="http://www.w3.org/1999/xhtml">, and enter a simple text message and a valid product ID (1 to 77), as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2620.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.5</span></em><span class="koboSpan" id="kobo.2621.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2622.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_05.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2623.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.5: An ASP.NET Core MVC website sending a message to a queue</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="10"><span class="koboSpan" id="kobo.2624.1" xmlns="http://www.w3.org/1999/xhtml">Click </span><strong class="screenText"><span class="koboSpan" id="kobo.2625.1" xmlns="http://www.w3.org/1999/xhtml">Send</span></strong><span class="koboSpan" id="kobo.2626.1" xmlns="http://www.w3.org/1999/xhtml">, and note</span><a id="_idIndexMarker984"/><span class="koboSpan" id="kobo.2627.1" xmlns="http://www.w3.org/1999/xhtml"> the message that appears in the console app, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.2628.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.6</span></em><span class="koboSpan" id="kobo.2629.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.2630.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_06.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.2631.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.6: A console app consuming a message from the queue</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="11"><span class="koboSpan" id="kobo.2632.1" xmlns="http://www.w3.org/1999/xhtml">In the command </span><a id="_idIndexMarker985"/><span class="koboSpan" id="kobo.2633.1" xmlns="http://www.w3.org/1999/xhtml">prompt or terminal for Docker, press </span><em class="keystroke"><span class="koboSpan" id="kobo.2634.1" xmlns="http://www.w3.org/1999/xhtml">Ctrl</span></em><span class="koboSpan" id="kobo.2635.1" xmlns="http://www.w3.org/1999/xhtml"> + </span><em class="keystroke"><span class="koboSpan" id="kobo.2636.1" xmlns="http://www.w3.org/1999/xhtml">C</span></em><span class="koboSpan" id="kobo.2637.1" xmlns="http://www.w3.org/1999/xhtml"> to shut down the container, and note the result, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2638.1" xmlns="http://www.w3.org/1999/xhtml">2023-06-11 17:42:31.006172+00:00 [info] &lt;0.744.0&gt; stopped TCP listener on [::]:5672
2023-06-11 17:42:31.008574+00:00 [info] &lt;0.1552.0&gt; Closing all connections in vhost '/' on node 'rabbit@e9014dbbe5f5' because the vhost is stopping
2023-06-11 17:42:31.017407+00:00 [info] &lt;0.557.0&gt; Stopping message store for directory '/var/lib/rabbitmq/mnesia/rabbit@e9014dbbe5f5/msg_stores/vhosts/628WB79CIFDYO9LJI6DKMI09L/msg_store_persistent'
2023-06-11 17:42:31.024661+00:00 [info] &lt;0.557.0&gt; Message store for directory '/var/lib/rabbitmq/mnesia/rabbit@e9014dbbe5f5/msg_stores/vhosts/628WB79CIFDYO9LJI6DKMI09L/msg_store_persistent' is stopped
2023-06-11 17:42:31.024937+00:00 [info] &lt;0.553.0&gt; Stopping message store for directory '/var/lib/rabbitmq/mnesia/rabbit@e9014dbbe5f5/msg_stores/vhosts/628WB79CIFDYO9LJI6DKMI09L/msg_store_transient'
2023-06-11 17:42:31.031218+00:00 [info] &lt;0.553.0&gt; Message store for directory '/var/lib/rabbitmq/mnesia/rabbit@e9014dbbe5f5/msg_stores/vhosts/628WB79CIFDYO9LJI6DKMI09L/msg_store_transient' is stopped
2023-06-11 17:42:31.037584+00:00 [info] &lt;0.489.0&gt; Management plugin: to stop collect_statistics.
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2639.1" xmlns="http://www.w3.org/1999/xhtml">In </span><strong class="screenText"><span class="koboSpan" id="kobo.2640.1" xmlns="http://www.w3.org/1999/xhtml">Docker Desktop</span></strong><span class="koboSpan" id="kobo.2641.1" xmlns="http://www.w3.org/1999/xhtml">, note the container is gone from the list, but the image remains for quicker use next time.</span></li>
</ol>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.2642.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.2643.1" xmlns="http://www.w3.org/1999/xhtml">: You can read more about using RabbitMQ with .NET at the following link: </span><a href="https://www.rabbitmq.com/dotnet-api-guide.html"><span class="url"><span class="koboSpan" id="kobo.2644.1" xmlns="http://www.w3.org/1999/xhtml">https://www.rabbitmq.com/dotnet-api-guide.html</span></span></a><span class="koboSpan" id="kobo.2645.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<p class="normal"><span class="koboSpan" id="kobo.2646.1" xmlns="http://www.w3.org/1999/xhtml">The combination of caching, queuing, and</span><a id="_idIndexMarker986"/><span class="koboSpan" id="kobo.2647.1" xmlns="http://www.w3.org/1999/xhtml"> handling transient faults goes a long way to making your services more resilient, scalable, and </span><a id="_idIndexMarker987"/><span class="koboSpan" id="kobo.2648.1" xmlns="http://www.w3.org/1999/xhtml">performant. </span><span class="koboSpan" id="kobo.2648.2" xmlns="http://www.w3.org/1999/xhtml">In the last section of this chapter, we will look at long-running background services.</span></p>
<h1 class="heading-1" id="_idParaDest-365"><span class="koboSpan" id="kobo.2649.1" xmlns="http://www.w3.org/1999/xhtml">Implementing long-running background services</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.2650.1" xmlns="http://www.w3.org/1999/xhtml">It is common to need long-running</span><a id="_idIndexMarker988"/><span class="koboSpan" id="kobo.2651.1" xmlns="http://www.w3.org/1999/xhtml"> background services to perform operations like:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2652.1" xmlns="http://www.w3.org/1999/xhtml">Performing a task on a regular timed schedule.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2653.1" xmlns="http://www.w3.org/1999/xhtml">Processing queued messages.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2654.1" xmlns="http://www.w3.org/1999/xhtml">Performing intense work like building AI and ML models or processing video and images.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.2655.1" xmlns="http://www.w3.org/1999/xhtml">In the distant past, on the Windows operating system, to have some code running in the background meant building a </span><strong class="keyWord"><span class="koboSpan" id="kobo.2656.1" xmlns="http://www.w3.org/1999/xhtml">Windows Service</span></strong><span class="koboSpan" id="kobo.2657.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.2657.2" xmlns="http://www.w3.org/1999/xhtml">For example, the database engine of SQL Server is implemented as a Windows Service. </span><span class="koboSpan" id="kobo.2657.3" xmlns="http://www.w3.org/1999/xhtml">With the move to cross-platform, .NET needs a cross-platform solution to run code in the background.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2658.1" xmlns="http://www.w3.org/1999/xhtml">Background services often do not have a user interface, although they might provide one for the configuration and</span><a id="_idIndexMarker989"/><span class="koboSpan" id="kobo.2659.1" xmlns="http://www.w3.org/1999/xhtml"> management of the service.</span></p>
<h2 class="heading-2" id="_idParaDest-366"><span class="koboSpan" id="kobo.2660.1" xmlns="http://www.w3.org/1999/xhtml">Building a worker service</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2661.1" xmlns="http://www.w3.org/1999/xhtml">Now, let’s build a worker </span><a id="_idIndexMarker990"/><span class="koboSpan" id="kobo.2662.1" xmlns="http://www.w3.org/1999/xhtml">service project </span><a id="_idIndexMarker991"/><span class="koboSpan" id="kobo.2663.1" xmlns="http://www.w3.org/1999/xhtml">so that we can see how we would host a long-running background service:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2664.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to add a new project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2665.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.2666.1" xmlns="http://www.w3.org/1999/xhtml">Worker Service </span></strong><span class="koboSpan" id="kobo.2667.1" xmlns="http://www.w3.org/1999/xhtml">/ </span><code class="inlineCode"><span class="koboSpan" id="kobo.2668.1" xmlns="http://www.w3.org/1999/xhtml">worker</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2669.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2670.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2671.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2672.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.2673.1" xmlns="http://www.w3.org/1999/xhtml">Enable Docker</span></strong><span class="koboSpan" id="kobo.2674.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.2675.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.2676.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.2677.1" xmlns="http://www.w3.org/1999/xhtml">Enable native AOT publish</span></strong><span class="koboSpan" id="kobo.2678.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2679.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2680.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code><span class="koboSpan" id="kobo.2681.1" xmlns="http://www.w3.org/1999/xhtml"> project file, note that the .NET SDK is </span><code class="inlineCode"><span class="koboSpan" id="kobo.2682.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.NET.Sdk.Worker</span></code><span class="koboSpan" id="kobo.2683.1" xmlns="http://www.w3.org/1999/xhtml">, and then make the following changes, as highlighted in the following markup:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.2684.1" xmlns="http://www.w3.org/1999/xhtml">Treat warnings as errors.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2685.1" xmlns="http://www.w3.org/1999/xhtml">Add a package reference for RabbitMQ.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.2686.1" xmlns="http://www.w3.org/1999/xhtml">Add references to the entity models and queue models projects:
            </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2687.1" xmlns="http://www.w3.org/1999/xhtml">&lt;Project Sdk=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2688.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2689.1" xmlns="http://www.w3.org/1999/xhtml">Microsoft.NET.Sdk.Worker</span></strong></span><span class="hljs-string"><span class="koboSpan" id="kobo.2690.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="koboSpan" id="kobo.2691.1" xmlns="http://www.w3.org/1999/xhtml">&gt;
  &lt;PropertyGroup&gt;
    &lt;TargetFramework&gt;net8</span><span class="hljs-number"><span class="koboSpan" id="kobo.2692.1" xmlns="http://www.w3.org/1999/xhtml">.0</span></span><span class="koboSpan" id="kobo.2693.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TargetFramework&gt;
    &lt;Nullable&gt;enable&lt;/Nullable&gt;
    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;
    &lt;UserSecretsId&gt;dotnet-Northwind.Background.Workers</span><span class="hljs-number"><span class="koboSpan" id="kobo.2694.1" xmlns="http://www.w3.org/1999/xhtml">-66434</span></span><span class="koboSpan" id="kobo.2695.1" xmlns="http://www.w3.org/1999/xhtml">cdf</span><span class="hljs-number"><span class="koboSpan" id="kobo.2696.1" xmlns="http://www.w3.org/1999/xhtml">-0f</span></span><span class="koboSpan" id="kobo.2697.1" xmlns="http://www.w3.org/1999/xhtml">dd</span><span class="hljs-number"><span class="koboSpan" id="kobo.2698.1" xmlns="http://www.w3.org/1999/xhtml">-4993</span></span><span class="koboSpan" id="kobo.2699.1" xmlns="http://www.w3.org/1999/xhtml">-a399-ec9581b4b914&lt;/UserSecretsId&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2700.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;TreatWarningsAsErrors&gt;</span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2701.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2702.1" xmlns="http://www.w3.org/1999/xhtml">&lt;/TreatWarningsAsErrors&gt;</span></strong></span><span class="koboSpan" id="kobo.2703.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/PropertyGroup&gt;
  &lt;ItemGroup&gt;
    &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2704.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.Extensions.Hosting"</span></span><span class="koboSpan" id="kobo.2705.1" xmlns="http://www.w3.org/1999/xhtml"> 
                      Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.2706.1" xmlns="http://www.w3.org/1999/xhtml">"8.0.0"</span></span><span class="koboSpan" id="kobo.2707.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2708.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;PackageReference Include=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2709.1" xmlns="http://www.w3.org/1999/xhtml">"RabbitMQ.Client"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2710.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2711.1" xmlns="http://www.w3.org/1999/xhtml">"6.7.0"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2712.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span><span class="koboSpan" id="kobo.2713.1" xmlns="http://www.w3.org/1999/xhtml">
  &lt;/ItemGroup&gt;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2714.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;ItemGroup&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2715.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;ProjectReference Include=</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2716.1" xmlns="http://www.w3.org/1999/xhtml">"..\..\Chapter03\Northwind.Common.EntityModels</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2717.1" xmlns="http://www.w3.org/1999/xhtml">.SqlServer\Northwind.Common.EntityModels.SqlServer.csproj"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2718.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2719.1" xmlns="http://www.w3.org/1999/xhtml">    &lt;ProjectReference Include=</span></strong></span>
<span class="code-highlight"><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2720.1" xmlns="http://www.w3.org/1999/xhtml">"..\Northwind.Queue.Models\Northwind.Queue.Models.csproj"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2721.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2722.1" xmlns="http://www.w3.org/1999/xhtml">  &lt;/ItemGroup&gt;</span></strong></span><span class="koboSpan" id="kobo.2723.1" xmlns="http://www.w3.org/1999/xhtml">
&lt;/Project&gt;
</span></code></pre>
</li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2724.1" xmlns="http://www.w3.org/1999/xhtml">Build the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2725.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code><span class="koboSpan" id="kobo.2726.1" xmlns="http://www.w3.org/1999/xhtml"> project at the command prompt or terminal by entering the following command: </span><code class="inlineCode"><span class="koboSpan" id="kobo.2727.1" xmlns="http://www.w3.org/1999/xhtml">dotnet build</span></code><span class="koboSpan" id="kobo.2728.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2729.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2730.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2731.1" xmlns="http://www.w3.org/1999/xhtml">, note</span><a id="_idIndexMarker992"/><span class="koboSpan" id="kobo.2732.1" xmlns="http://www.w3.org/1999/xhtml"> that the initialization statements are like an ASP.NET Core project, and that it registers a hosted service named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2733.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></code><span class="koboSpan" id="kobo.2734.1" xmlns="http://www.w3.org/1999/xhtml"> and then runs the host, as shown in</span><a id="_idIndexMarker993"/><span class="koboSpan" id="kobo.2735.1" xmlns="http://www.w3.org/1999/xhtml"> the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2736.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.2737.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Background.Workers;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2738.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.2739.1" xmlns="http://www.w3.org/1999/xhtml"> builder = Host.CreateApplicationBuilder(args);
builder.Services.AddHostedService&lt;Worker&gt;();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2740.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.2741.1" xmlns="http://www.w3.org/1999/xhtml"> host = builder.Build();
host.Run();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2742.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2743.1" xmlns="http://www.w3.org/1999/xhtml">Worker.cs</span></code><span class="koboSpan" id="kobo.2744.1" xmlns="http://www.w3.org/1999/xhtml">, note that the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2745.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></code><span class="koboSpan" id="kobo.2746.1" xmlns="http://www.w3.org/1999/xhtml"> class inherits from </span><code class="inlineCode"><span class="koboSpan" id="kobo.2747.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundService</span></code><span class="koboSpan" id="kobo.2748.1" xmlns="http://www.w3.org/1999/xhtml"> and implements its </span><code class="inlineCode"><span class="koboSpan" id="kobo.2749.1" xmlns="http://www.w3.org/1999/xhtml">ExecuteAsync</span></code><span class="koboSpan" id="kobo.2750.1" xmlns="http://www.w3.org/1999/xhtml"> method by looping until a cancellation is requested, logging the current date/time, and then pausing for one second, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2751.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2752.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></span><span class="koboSpan" id="kobo.2753.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2754.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2755.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2756.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></span><span class="koboSpan" id="kobo.2757.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2758.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundService</span></span><span class="koboSpan" id="kobo.2759.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2760.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2761.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.2762.1" xmlns="http://www.w3.org/1999/xhtml"> ILogger&lt;Worker&gt; _logger;
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2763.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2764.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2765.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2766.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;Worker&gt; logger</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2767.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2768.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      _logger = logger;
    }
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2769.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2770.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2771.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2772.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2773.1" xmlns="http://www.w3.org/1999/xhtml">ExecuteAsync</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2774.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.2775.1" xmlns="http://www.w3.org/1999/xhtml">      CancellationToken stoppingToken</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2776.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2777.1" xmlns="http://www.w3.org/1999/xhtml">
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2778.1" xmlns="http://www.w3.org/1999/xhtml">while</span></span><span class="koboSpan" id="kobo.2779.1" xmlns="http://www.w3.org/1999/xhtml"> (!stoppingToken.IsCancellationRequested)
      {
        _logger.LogInformation(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2780.1" xmlns="http://www.w3.org/1999/xhtml">"Worker running at: {time}"</span></span><span class="koboSpan" id="kobo.2781.1" xmlns="http://www.w3.org/1999/xhtml">, 
          DateTimeOffset.Now);
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2782.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2783.1" xmlns="http://www.w3.org/1999/xhtml"> Task.Delay(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2784.1" xmlns="http://www.w3.org/1999/xhtml">1000</span></span><span class="koboSpan" id="kobo.2785.1" xmlns="http://www.w3.org/1999/xhtml">, stoppingToken);
      }
    }
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2786.1" xmlns="http://www.w3.org/1999/xhtml">Start the project </span><a id="_idIndexMarker994"/><span class="koboSpan" id="kobo.2787.1" xmlns="http://www.w3.org/1999/xhtml">without debugging, note</span><a id="_idIndexMarker995"/><span class="koboSpan" id="kobo.2788.1" xmlns="http://www.w3.org/1999/xhtml"> the current time is output once per second, and then press </span><em class="keystroke"><span class="koboSpan" id="kobo.2789.1" xmlns="http://www.w3.org/1999/xhtml">Ctrl</span></em><span class="koboSpan" id="kobo.2790.1" xmlns="http://www.w3.org/1999/xhtml"> + </span><em class="keystroke"><span class="koboSpan" id="kobo.2791.1" xmlns="http://www.w3.org/1999/xhtml">C</span></em><span class="koboSpan" id="kobo.2792.1" xmlns="http://www.w3.org/1999/xhtml"> to shut down the worker service, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2793.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Queue.Worker.Worker[0]
      Worker running at: 06/12/2023 08:25:02 +01:00
info: Microsoft.Hosting.Lifetime[0]
      Application started. </span><span class="koboSpan" id="kobo.2793.2" xmlns="http://www.w3.org/1999/xhtml">Press Ctrl+C to shut down.
</span><span class="koboSpan" id="kobo.2793.3" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Hosting environment: Development
info: Microsoft.Hosting.Lifetime[0]
      Content root path: C:\apps-services-net8\Chapter09\Northwind.Queue.Worker
info: Northwind.Queue.Worker.Worker[0]
      Worker running at: 06/12/2023 08:25:03 +01:00
info: Northwind.Queue.Worker.Worker[0]
      Worker running at: 06/12/2023 08:25:04 +01:00
info: Northwind.Queue.Worker.Worker[0]
      Worker running at: 06/12/2023 08:25:05 +01:00
info: Microsoft.Hosting.Lifetime[0]
      Application is shutting down...
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-367"><span class="koboSpan" id="kobo.2794.1" xmlns="http://www.w3.org/1999/xhtml">Processing queued message using a worker service</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2795.1" xmlns="http://www.w3.org/1999/xhtml">Now, we can do some useful </span><a id="_idIndexMarker996"/><span class="koboSpan" id="kobo.2796.1" xmlns="http://www.w3.org/1999/xhtml">work, like reading messages from a RabbitMQ queue:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2797.1" xmlns="http://www.w3.org/1999/xhtml">Rename </span><code class="inlineCode"><span class="koboSpan" id="kobo.2798.1" xmlns="http://www.w3.org/1999/xhtml">Worker.cs</span></code><span class="koboSpan" id="kobo.2799.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2800.1" xmlns="http://www.w3.org/1999/xhtml">QueueWorker.cs</span></code><span class="koboSpan" id="kobo.2801.1" xmlns="http://www.w3.org/1999/xhtml"> and the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2802.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></code><span class="koboSpan" id="kobo.2803.1" xmlns="http://www.w3.org/1999/xhtml"> class to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2804.1" xmlns="http://www.w3.org/1999/xhtml">QueueWorker</span></code><span class="koboSpan" id="kobo.2805.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2806.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2807.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.2808.1" xmlns="http://www.w3.org/1999/xhtml">, change the</span><a id="_idIndexMarker997"/><span class="koboSpan" id="kobo.2809.1" xmlns="http://www.w3.org/1999/xhtml"> hosted service class name from </span><code class="inlineCode"><span class="koboSpan" id="kobo.2810.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></code><span class="koboSpan" id="kobo.2811.1" xmlns="http://www.w3.org/1999/xhtml"> to </span><code class="inlineCode"><span class="koboSpan" id="kobo.2812.1" xmlns="http://www.w3.org/1999/xhtml">QueueWorker</span></code><span class="koboSpan" id="kobo.2813.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.2814.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddHostedService&lt;QueueWorker&gt;();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2815.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.2816.1" xmlns="http://www.w3.org/1999/xhtml">QueueWorker.cs</span></code><span class="koboSpan" id="kobo.2817.1" xmlns="http://www.w3.org/1999/xhtml">, import namespaces to work with RabbitMQ queues and implement a queue processor, as highlighted in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2818.1" xmlns="http://www.w3.org/1999/xhtml">using</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2819.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Queue.Models; </span></strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2820.1" xmlns="http://www.w3.org/1999/xhtml">// To use ProductQueueMessage.</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2821.1" xmlns="http://www.w3.org/1999/xhtml">using</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2822.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ.Client; </span></strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2823.1" xmlns="http://www.w3.org/1999/xhtml">// To use ConnectionFactory.</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2824.1" xmlns="http://www.w3.org/1999/xhtml">using</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2825.1" xmlns="http://www.w3.org/1999/xhtml"> RabbitMQ.Client.Events; </span></strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2826.1" xmlns="http://www.w3.org/1999/xhtml">// To use EventingBasicConsumer.</span></strong></span>
<span class="code-highlight"><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2827.1" xmlns="http://www.w3.org/1999/xhtml">using</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2828.1" xmlns="http://www.w3.org/1999/xhtml"> System.Text.Json; </span></strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2829.1" xmlns="http://www.w3.org/1999/xhtml">// To use JsonSerializer.</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2830.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2831.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></span><span class="koboSpan" id="kobo.2832.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2833.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2834.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="code-highlight"><strong class="hljs-title-slc"><span class="koboSpan" id="kobo.2835.1" xmlns="http://www.w3.org/1999/xhtml">Queue</span></strong></span><span class="hljs-title"><span class="koboSpan" id="kobo.2836.1" xmlns="http://www.w3.org/1999/xhtml">Worker</span></span><span class="koboSpan" id="kobo.2837.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.2838.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundService</span></span><span class="koboSpan" id="kobo.2839.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2840.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.2841.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.2842.1" xmlns="http://www.w3.org/1999/xhtml"> ILogger&lt;QueueWorker&gt; _logger;
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2843.1" xmlns="http://www.w3.org/1999/xhtml">// RabbitMQ objects.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2844.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2845.1" xmlns="http://www.w3.org/1999/xhtml">const</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.2846.1" xmlns="http://www.w3.org/1999/xhtml">string</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2847.1" xmlns="http://www.w3.org/1999/xhtml"> queueNameAndRoutingKey = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2848.1" xmlns="http://www.w3.org/1999/xhtml">"product"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2849.1" xmlns="http://www.w3.org/1999/xhtml">;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2850.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2851.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2852.1" xmlns="http://www.w3.org/1999/xhtml"> ConnectionFactory _factory;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2853.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2854.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2855.1" xmlns="http://www.w3.org/1999/xhtml"> IConnection _connection;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2856.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2857.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2858.1" xmlns="http://www.w3.org/1999/xhtml"> IModel _channel;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2859.1" xmlns="http://www.w3.org/1999/xhtml">private</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2860.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2861.1" xmlns="http://www.w3.org/1999/xhtml"> EventingBasicConsumer _consumer;</span></strong></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.2862.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.2863.1" xmlns="http://www.w3.org/1999/xhtml">QueueWorker</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2864.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.2865.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;QueueWorker&gt; logger</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2866.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2867.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _logger = logger;
</span><span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2868.1" xmlns="http://www.w3.org/1999/xhtml">    _factory = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2869.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2870.1" xmlns="http://www.w3.org/1999/xhtml">() { HostName = </span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2871.1" xmlns="http://www.w3.org/1999/xhtml">"localhost"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2872.1" xmlns="http://www.w3.org/1999/xhtml"> };</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2873.1" xmlns="http://www.w3.org/1999/xhtml">    _connection = _factory.CreateConnection();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2874.1" xmlns="http://www.w3.org/1999/xhtml">    _channel = _connection.CreateModel();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2875.1" xmlns="http://www.w3.org/1999/xhtml">    _consumer = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2876.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2877.1" xmlns="http://www.w3.org/1999/xhtml">(_channel);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2878.1" xmlns="http://www.w3.org/1999/xhtml">    _channel.QueueDeclare(queue: queueNameAndRoutingKey, durable: </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2879.1" xmlns="http://www.w3.org/1999/xhtml">false</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2880.1" xmlns="http://www.w3.org/1999/xhtml">, </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2881.1" xmlns="http://www.w3.org/1999/xhtml">      exclusive: </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2882.1" xmlns="http://www.w3.org/1999/xhtml">false</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2883.1" xmlns="http://www.w3.org/1999/xhtml">, autoDelete: </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2884.1" xmlns="http://www.w3.org/1999/xhtml">false</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2885.1" xmlns="http://www.w3.org/1999/xhtml">, arguments: </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2886.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2887.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2888.1" xmlns="http://www.w3.org/1999/xhtml">    _consumer = </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2889.1" xmlns="http://www.w3.org/1999/xhtml">new</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2890.1" xmlns="http://www.w3.org/1999/xhtml">(_channel);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2891.1" xmlns="http://www.w3.org/1999/xhtml">    _consumer.Received += (model, args) =&gt;</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2892.1" xmlns="http://www.w3.org/1999/xhtml">    {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-built_in-slc"><span class="koboSpan" id="kobo.2893.1" xmlns="http://www.w3.org/1999/xhtml">byte</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2894.1" xmlns="http://www.w3.org/1999/xhtml">[] body = args.Body.ToArray();</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2895.1" xmlns="http://www.w3.org/1999/xhtml">      ProductQueueMessage? </span><span class="koboSpan" id="kobo.2895.2" xmlns="http://www.w3.org/1999/xhtml">message = JsonSerializer</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2896.1" xmlns="http://www.w3.org/1999/xhtml">        .Deserialize&lt;ProductQueueMessage&gt;(body);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2897.1" xmlns="http://www.w3.org/1999/xhtml">if</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2898.1" xmlns="http://www.w3.org/1999/xhtml"> (message </span></strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2899.1" xmlns="http://www.w3.org/1999/xhtml">is</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2900.1" xmlns="http://www.w3.org/1999/xhtml">not</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2901.1" xmlns="http://www.w3.org/1999/xhtml">null</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2902.1" xmlns="http://www.w3.org/1999/xhtml">)</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2903.1" xmlns="http://www.w3.org/1999/xhtml">      {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2904.1" xmlns="http://www.w3.org/1999/xhtml">        _logger.LogInformation(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2905.1" xmlns="http://www.w3.org/1999/xhtml">$"Received product. </span><span class="koboSpan" id="kobo.2905.2" xmlns="http://www.w3.org/1999/xhtml">Id: </span></strong><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.2906.1" xmlns="http://www.w3.org/1999/xhtml">{</span></strong></span>
<span class="code-highlight"><strong class="hljs-subst-slc"> </strong></span><span class="hljs-subst"> </span><span class="code-highlight"><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.2907.1" xmlns="http://www.w3.org/1999/xhtml">message.Product.ProductId}</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2908.1" xmlns="http://www.w3.org/1999/xhtml">, Name: </span></strong><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.2909.1" xmlns="http://www.w3.org/1999/xhtml">{message.Product</span></strong></span>
<span class="code-highlight"><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.2910.1" xmlns="http://www.w3.org/1999/xhtml">          .ProductName}</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2911.1" xmlns="http://www.w3.org/1999/xhtml">, Message: </span></strong><strong class="hljs-subst-slc"><span class="koboSpan" id="kobo.2912.1" xmlns="http://www.w3.org/1999/xhtml">{message.Text}</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2913.1" xmlns="http://www.w3.org/1999/xhtml">"</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2914.1" xmlns="http://www.w3.org/1999/xhtml">);</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2915.1" xmlns="http://www.w3.org/1999/xhtml">      }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-keyword-slc"><span class="koboSpan" id="kobo.2916.1" xmlns="http://www.w3.org/1999/xhtml">else</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2917.1" xmlns="http://www.w3.org/1999/xhtml">      {</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2918.1" xmlns="http://www.w3.org/1999/xhtml">        _logger.LogInformation(</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.2919.1" xmlns="http://www.w3.org/1999/xhtml">"Received unknown: {0}."</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2920.1" xmlns="http://www.w3.org/1999/xhtml">, </span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2921.1" xmlns="http://www.w3.org/1999/xhtml">          args.Body.ToArray());</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2922.1" xmlns="http://www.w3.org/1999/xhtml">      }</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2923.1" xmlns="http://www.w3.org/1999/xhtml">    };</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-comment-slc"><span class="koboSpan" id="kobo.2924.1" xmlns="http://www.w3.org/1999/xhtml">// Start consuming as messages arrive in the queue.</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2925.1" xmlns="http://www.w3.org/1999/xhtml">    _channel.BasicConsume(queue: queueNameAndRoutingKey,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"><span class="koboSpan" id="kobo.2926.1" xmlns="http://www.w3.org/1999/xhtml">      autoAck: </span></strong><strong class="hljs-literal-slc"><span class="koboSpan" id="kobo.2927.1" xmlns="http://www.w3.org/1999/xhtml">true</span></strong><strong class="hljs-slc"><span class="koboSpan" id="kobo.2928.1" xmlns="http://www.w3.org/1999/xhtml">, consumer: _consumer);</span></strong></span><span class="koboSpan" id="kobo.2929.1" xmlns="http://www.w3.org/1999/xhtml">
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2930.1" xmlns="http://www.w3.org/1999/xhtml">protected</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2931.1" xmlns="http://www.w3.org/1999/xhtml">override</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2932.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2933.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.2934.1" xmlns="http://www.w3.org/1999/xhtml">ExecuteAsync</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2935.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span>
<span class="hljs-params"><span class="koboSpan" id="kobo.2936.1" xmlns="http://www.w3.org/1999/xhtml">    CancellationToken stoppingToken</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.2937.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.2938.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2939.1" xmlns="http://www.w3.org/1999/xhtml">while</span></span><span class="koboSpan" id="kobo.2940.1" xmlns="http://www.w3.org/1999/xhtml"> (!stoppingToken.IsCancellationRequested)
    {
      _logger.LogInformation(</span><span class="hljs-string"><span class="koboSpan" id="kobo.2941.1" xmlns="http://www.w3.org/1999/xhtml">"Worker running at: {time}"</span></span><span class="koboSpan" id="kobo.2942.1" xmlns="http://www.w3.org/1999/xhtml">, 
        DateTimeOffset.Now);
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.2943.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.2944.1" xmlns="http://www.w3.org/1999/xhtml"> Task.Delay(</span><span class="hljs-number"><span class="koboSpan" id="kobo.2945.1" xmlns="http://www.w3.org/1999/xhtml">3000</span></span><span class="koboSpan" id="kobo.2946.1" xmlns="http://www.w3.org/1999/xhtml">, stoppingToken);
    }
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2947.1" xmlns="http://www.w3.org/1999/xhtml">Start the RabbitMQ container, as shown in the following command:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2948.1" xmlns="http://www.w3.org/1999/xhtml">docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.12-management
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2949.1" xmlns="http://www.w3.org/1999/xhtml">Wait for the messages to say it is ready for clients to connect on port </span><code class="inlineCode"><span class="koboSpan" id="kobo.2950.1" xmlns="http://www.w3.org/1999/xhtml">5672</span></code><span class="koboSpan" id="kobo.2951.1" xmlns="http://www.w3.org/1999/xhtml">, as shown in the following </span><a id="_idIndexMarker998"/><span class="koboSpan" id="kobo.2952.1" xmlns="http://www.w3.org/1999/xhtml">output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2953.1" xmlns="http://www.w3.org/1999/xhtml">2023-06-12 08:50:16.591574+00:00 [info] &lt;0.599.0&gt; Ready to start client connection listeners
2023-06-12 08:50:16.593090+00:00 [info] &lt;0.744.0&gt; started TCP listener on [::]:5672
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.2954.1" xmlns="http://www.w3.org/1999/xhtml">Leave the command prompt or terminal running.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2955.1" xmlns="http://www.w3.org/1999/xhtml">If your database server is not running (for example, because you are hosting it in Docker, a</span><a id="_idIndexMarker999"/><span class="koboSpan" id="kobo.2956.1" xmlns="http://www.w3.org/1999/xhtml"> virtual machine, or in the cloud), then make sure to start it.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2957.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2958.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.2959.1" xmlns="http://www.w3.org/1999/xhtml"> project without debugging so that we can query for products in the Northwind database.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2960.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2961.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Client.Mvc</span></code><span class="koboSpan" id="kobo.2962.1" xmlns="http://www.w3.org/1999/xhtml"> project without debugging so that we can send messages to the RabbitMQ queue.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2963.1" xmlns="http://www.w3.org/1999/xhtml">In the MVC website, click </span><strong class="screenText"><span class="koboSpan" id="kobo.2964.1" xmlns="http://www.w3.org/1999/xhtml">Send a message</span></strong><span class="koboSpan" id="kobo.2965.1" xmlns="http://www.w3.org/1999/xhtml">, and then enter a message of </span><code class="inlineCode"><span class="koboSpan" id="kobo.2966.1" xmlns="http://www.w3.org/1999/xhtml">apples</span></code><span class="koboSpan" id="kobo.2967.1" xmlns="http://www.w3.org/1999/xhtml"> and a product ID of </span><code class="inlineCode"><span class="koboSpan" id="kobo.2968.1" xmlns="http://www.w3.org/1999/xhtml">1</span></code><span class="koboSpan" id="kobo.2969.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2970.1" xmlns="http://www.w3.org/1999/xhtml">Repeat for </span><code class="inlineCode"><span class="koboSpan" id="kobo.2971.1" xmlns="http://www.w3.org/1999/xhtml">bananas</span></code><span class="koboSpan" id="kobo.2972.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2973.1" xmlns="http://www.w3.org/1999/xhtml">2</span></code><span class="koboSpan" id="kobo.2974.1" xmlns="http://www.w3.org/1999/xhtml">, and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2975.1" xmlns="http://www.w3.org/1999/xhtml">cherries</span></code><span class="koboSpan" id="kobo.2976.1" xmlns="http://www.w3.org/1999/xhtml"> and </span><code class="inlineCode"><span class="koboSpan" id="kobo.2977.1" xmlns="http://www.w3.org/1999/xhtml">3</span></code><span class="koboSpan" id="kobo.2978.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2979.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2980.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code><span class="koboSpan" id="kobo.2981.1" xmlns="http://www.w3.org/1999/xhtml"> project without debugging, and note the three messages are processed from the queue, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.2982.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Background.Workers.QueueWorker[0]
      Queue product is waiting for messages.
</span><span class="koboSpan" id="kobo.2982.2" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 09:58:59 +01:00
info: Microsoft.Hosting.Lifetime[0]
      Application started. </span><span class="koboSpan" id="kobo.2982.3" xmlns="http://www.w3.org/1999/xhtml">Press Ctrl+C to shut down.
</span><span class="koboSpan" id="kobo.2982.4" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Hosting environment: Development
info: Microsoft.Hosting.Lifetime[0]
      Content root path: C:\apps-services-net8\Chapter09\Northwind.Queue.Worker
info: Northwind.Background.Workers.QueueWorker[0]
      Received product. </span><span class="koboSpan" id="kobo.2982.5" xmlns="http://www.w3.org/1999/xhtml">Id: 1, Name: Chai, Message: apples
info: Northwind.Background.Workers.QueueWorker[0]
      Received product. </span><span class="koboSpan" id="kobo.2982.6" xmlns="http://www.w3.org/1999/xhtml">Id: 2, Name: Chang, Message: bananas
info: Northwind.Background.Workers.QueueWorker [0]
      Received product. </span><span class="koboSpan" id="kobo.2982.7" xmlns="http://www.w3.org/1999/xhtml">Id: 3, Name: Aniseed Syrup, Message: cherries
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-368"><span class="koboSpan" id="kobo.2983.1" xmlns="http://www.w3.org/1999/xhtml">Executing code on a timed schedule</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.2984.1" xmlns="http://www.w3.org/1999/xhtml">Another common use of </span><a id="_idIndexMarker1000"/><span class="koboSpan" id="kobo.2985.1" xmlns="http://www.w3.org/1999/xhtml">worker services is to implement timed events. </span><span class="koboSpan" id="kobo.2985.2" xmlns="http://www.w3.org/1999/xhtml">A timer-based background service can use the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2986.1" xmlns="http://www.w3.org/1999/xhtml">System.Threading.Timer</span></code><span class="koboSpan" id="kobo.2987.1" xmlns="http://www.w3.org/1999/xhtml"> class that triggers the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2988.1" xmlns="http://www.w3.org/1999/xhtml">DoWork</span></code><span class="koboSpan" id="kobo.2989.1" xmlns="http://www.w3.org/1999/xhtml"> method.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.2990.1" xmlns="http://www.w3.org/1999/xhtml">Let’s add another service to the background worker project:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.2991.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.2992.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code><span class="koboSpan" id="kobo.2993.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class named </span><code class="inlineCode"><span class="koboSpan" id="kobo.2994.1" xmlns="http://www.w3.org/1999/xhtml">TimerWorker.cs</span></code><span class="koboSpan" id="kobo.2995.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.2996.1" xmlns="http://www.w3.org/1999/xhtml">Modify the class, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.2997.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.2998.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></span><span class="koboSpan" id="kobo.2999.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3000.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3001.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.3002.1" xmlns="http://www.w3.org/1999/xhtml">TimerWorker</span></span><span class="koboSpan" id="kobo.3003.1" xmlns="http://www.w3.org/1999/xhtml"> : </span><span class="hljs-title"><span class="koboSpan" id="kobo.3004.1" xmlns="http://www.w3.org/1999/xhtml">IHostedService</span></span><span class="koboSpan" id="kobo.3005.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-title"><span class="koboSpan" id="kobo.3006.1" xmlns="http://www.w3.org/1999/xhtml">IAsyncDisposable</span></span><span class="koboSpan" id="kobo.3007.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3008.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3009.1" xmlns="http://www.w3.org/1999/xhtml">readonly</span></span><span class="koboSpan" id="kobo.3010.1" xmlns="http://www.w3.org/1999/xhtml"> ILogger&lt;TimerWorker&gt; _logger;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3011.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.3012.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.3013.1" xmlns="http://www.w3.org/1999/xhtml"> _executionCount = </span><span class="hljs-number"><span class="koboSpan" id="kobo.3014.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.3015.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3016.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="koboSpan" id="kobo.3017.1" xmlns="http://www.w3.org/1999/xhtml"> Timer? </span><span class="koboSpan" id="kobo.3017.2" xmlns="http://www.w3.org/1999/xhtml">_timer;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3018.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.3019.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.3020.1" xmlns="http://www.w3.org/1999/xhtml"> _seconds = </span><span class="hljs-number"><span class="koboSpan" id="kobo.3021.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.3022.1" xmlns="http://www.w3.org/1999/xhtml">;
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3023.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.3024.1" xmlns="http://www.w3.org/1999/xhtml">TimerWorker</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3025.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.3026.1" xmlns="http://www.w3.org/1999/xhtml">ILogger&lt;TimerWorker&gt; logger</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3027.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.3028.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _logger = logger;
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3029.1" xmlns="http://www.w3.org/1999/xhtml">private</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3030.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.3031.1" xmlns="http://www.w3.org/1999/xhtml">DoWork</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3032.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.3033.1" xmlns="http://www.w3.org/1999/xhtml">object</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.3034.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.3034.2" xmlns="http://www.w3.org/1999/xhtml">state</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3035.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.3036.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-built_in"><span class="koboSpan" id="kobo.3037.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.3038.1" xmlns="http://www.w3.org/1999/xhtml"> count = Interlocked.Increment(</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3039.1" xmlns="http://www.w3.org/1999/xhtml">ref</span></span><span class="koboSpan" id="kobo.3040.1" xmlns="http://www.w3.org/1999/xhtml"> _executionCount);
    _logger.LogInformation(
        </span><span class="hljs-string"><span class="koboSpan" id="kobo.3041.1" xmlns="http://www.w3.org/1999/xhtml">"{0} is working, execution count: {1:#,0}"</span></span><span class="koboSpan" id="kobo.3042.1" xmlns="http://www.w3.org/1999/xhtml">,
        </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3043.1" xmlns="http://www.w3.org/1999/xhtml">nameof</span></span><span class="koboSpan" id="kobo.3044.1" xmlns="http://www.w3.org/1999/xhtml">(TimerWorker), count);
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3045.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3046.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.3047.1" xmlns="http://www.w3.org/1999/xhtml">StartAsync</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3048.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.3049.1" xmlns="http://www.w3.org/1999/xhtml">CancellationToken cancellationToken</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3050.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.3051.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _logger.LogInformation(</span><span class="hljs-string"><span class="koboSpan" id="kobo.3052.1" xmlns="http://www.w3.org/1999/xhtml">"{0} is running."</span></span><span class="koboSpan" id="kobo.3053.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3054.1" xmlns="http://www.w3.org/1999/xhtml">nameof</span></span><span class="koboSpan" id="kobo.3055.1" xmlns="http://www.w3.org/1999/xhtml">(TimerWorker));
    _timer = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3056.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.3057.1" xmlns="http://www.w3.org/1999/xhtml"> Timer(callback: DoWork, state: </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3058.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.3059.1" xmlns="http://www.w3.org/1999/xhtml">, 
      dueTime: TimeSpan.Zero, 
      period: TimeSpan.FromSeconds(_seconds));
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3060.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.3061.1" xmlns="http://www.w3.org/1999/xhtml"> Task.CompletedTask;
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3062.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3063.1" xmlns="http://www.w3.org/1999/xhtml"> Task </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.3064.1" xmlns="http://www.w3.org/1999/xhtml">StopAsync</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3065.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.3066.1" xmlns="http://www.w3.org/1999/xhtml">CancellationToken cancellationToken</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3067.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.3068.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    _logger.LogInformation(</span><span class="hljs-string"><span class="koboSpan" id="kobo.3069.1" xmlns="http://www.w3.org/1999/xhtml">"{0} is stopping."</span></span><span class="koboSpan" id="kobo.3070.1" xmlns="http://www.w3.org/1999/xhtml">, </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3071.1" xmlns="http://www.w3.org/1999/xhtml">nameof</span></span><span class="koboSpan" id="kobo.3072.1" xmlns="http://www.w3.org/1999/xhtml">(TimerWorker));
    _timer?.Change(dueTime: Timeout.Infinite, period: </span><span class="hljs-number"><span class="koboSpan" id="kobo.3073.1" xmlns="http://www.w3.org/1999/xhtml">0</span></span><span class="koboSpan" id="kobo.3074.1" xmlns="http://www.w3.org/1999/xhtml">);
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3075.1" xmlns="http://www.w3.org/1999/xhtml">return</span></span><span class="koboSpan" id="kobo.3076.1" xmlns="http://www.w3.org/1999/xhtml"> Task.CompletedTask;
  }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3077.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3078.1" xmlns="http://www.w3.org/1999/xhtml">async</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3079.1" xmlns="http://www.w3.org/1999/xhtml"> ValueTask </span></span><span class="hljs-title"><span class="koboSpan" id="kobo.3080.1" xmlns="http://www.w3.org/1999/xhtml">DisposeAsync</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3081.1" xmlns="http://www.w3.org/1999/xhtml">()</span></span><span class="koboSpan" id="kobo.3082.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3083.1" xmlns="http://www.w3.org/1999/xhtml">if</span></span><span class="koboSpan" id="kobo.3084.1" xmlns="http://www.w3.org/1999/xhtml"> (_timer </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3085.1" xmlns="http://www.w3.org/1999/xhtml">is</span></span><span class="koboSpan" id="kobo.3086.1" xmlns="http://www.w3.org/1999/xhtml"> IAsyncDisposable asyncTimer)
    {
      </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3087.1" xmlns="http://www.w3.org/1999/xhtml">await</span></span><span class="koboSpan" id="kobo.3088.1" xmlns="http://www.w3.org/1999/xhtml"> asyncTimer.DisposeAsync();
    }
    _timer = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3089.1" xmlns="http://www.w3.org/1999/xhtml">null</span></span><span class="koboSpan" id="kobo.3090.1" xmlns="http://www.w3.org/1999/xhtml">;
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3091.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3092.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.3093.1" xmlns="http://www.w3.org/1999/xhtml">, add a statement to register</span><a id="_idIndexMarker1001"/><span class="koboSpan" id="kobo.3094.1" xmlns="http://www.w3.org/1999/xhtml"> the timer worker service, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3095.1" xmlns="http://www.w3.org/1999/xhtml">builder.Services.AddHostedService&lt;TimerWorker&gt;();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3096.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3097.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Workers</span></code><span class="koboSpan" id="kobo.3098.1" xmlns="http://www.w3.org/1999/xhtml"> project without debugging, and note the initialization</span><a id="_idIndexMarker1002"/><span class="koboSpan" id="kobo.3099.1" xmlns="http://www.w3.org/1999/xhtml"> of both workers, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3100.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 12:58:25 +01:00
info: Northwind.Background.Workers.TimerWorker[0]
      TimerWorker is running.
</span><span class="koboSpan" id="kobo.3100.2" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Application started. </span><span class="koboSpan" id="kobo.3100.3" xmlns="http://www.w3.org/1999/xhtml">Press Ctrl+C to shut down.
</span><span class="koboSpan" id="kobo.3100.4" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Hosting environment: Development
info: Microsoft.Hosting.Lifetime[0]
      Content root path: C:\apps-services-net8\Chapter09\Northwind.Background.Workers
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3101.1" xmlns="http://www.w3.org/1999/xhtml">Leave the background workers running for at least 10 seconds, and note the queue worker writes to the log every second and the timer worker writes to the log every five seconds, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3102.1" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Background.Workers.TimerWorker[0]
      TimerWorker is working, execution count: 1
info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 12:58:26 +01:00
info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 12:58:27 +01:00
info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 12:58:28 +01:00
info: Northwind.Background.Workers.QueueWorker[0]
      Worker running at: 06/12/2023 12:58:29 +01:00
info: Northwind.Background.Workers.TimerWorker[0]
      TimerWorker is working, execution count: 2
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3103.1" xmlns="http://www.w3.org/1999/xhtml">Press </span><em class="keystroke"><span class="koboSpan" id="kobo.3104.1" xmlns="http://www.w3.org/1999/xhtml">Ctrl</span></em><span class="koboSpan" id="kobo.3105.1" xmlns="http://www.w3.org/1999/xhtml"> + </span><em class="keystroke"><span class="koboSpan" id="kobo.3106.1" xmlns="http://www.w3.org/1999/xhtml">C</span></em><span class="koboSpan" id="kobo.3107.1" xmlns="http://www.w3.org/1999/xhtml"> to shut down the background workers, and note the clean shutdown of the timer worker, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3108.1" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Application is shutting down...
</span><span class="koboSpan" id="kobo.3108.2" xmlns="http://www.w3.org/1999/xhtml">info: Northwind.Background.Workers.TimerWorker[0]
      TimerWorker is stopping.
</span></code></pre>
</li>
</ol>
<p class="normal"><span class="koboSpan" id="kobo.3109.1" xmlns="http://www.w3.org/1999/xhtml">If we wanted to use the timer background service to have more flexibility, instead of running it at a regular interval like five seconds, we could have it run a scheduled task check every second, and only if a task has reached its scheduled time does it then run that task. </span><span class="koboSpan" id="kobo.3109.2" xmlns="http://www.w3.org/1999/xhtml">We need somewhere</span><a id="_idIndexMarker1003"/><span class="koboSpan" id="kobo.3110.1" xmlns="http://www.w3.org/1999/xhtml"> to define tasks and when they are scheduled to run. </span><span class="koboSpan" id="kobo.3110.2" xmlns="http://www.w3.org/1999/xhtml">Although you can build this infrastructure yourself, it is easier to use a third-party library like </span><strong class="keyWord"><span class="koboSpan" id="kobo.3111.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire</span></strong><span class="koboSpan" id="kobo.3112.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
<h2 class="heading-2" id="_idParaDest-369"><span class="koboSpan" id="kobo.3113.1" xmlns="http://www.w3.org/1999/xhtml">Building a website to host Hangfire</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3114.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire is open source </span><a id="_idIndexMarker1004"/><span class="koboSpan" id="kobo.3115.1" xmlns="http://www.w3.org/1999/xhtml">and free for commercial</span><a id="_idIndexMarker1005"/><span class="koboSpan" id="kobo.3116.1" xmlns="http://www.w3.org/1999/xhtml"> use. </span><span class="koboSpan" id="kobo.3116.2" xmlns="http://www.w3.org/1999/xhtml">It supports the following patterns of use:</span></p>
<ul>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.3117.1" xmlns="http://www.w3.org/1999/xhtml">Fire-and-forget</span></strong><span class="koboSpan" id="kobo.3118.1" xmlns="http://www.w3.org/1999/xhtml">: Jobs that are </span><a id="_idIndexMarker1006"/><span class="koboSpan" id="kobo.3119.1" xmlns="http://www.w3.org/1999/xhtml">executed once and started immediately.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.3120.1" xmlns="http://www.w3.org/1999/xhtml">Delayed</span></strong><span class="koboSpan" id="kobo.3121.1" xmlns="http://www.w3.org/1999/xhtml">: Jobs that are</span><a id="_idIndexMarker1007"/><span class="koboSpan" id="kobo.3122.1" xmlns="http://www.w3.org/1999/xhtml"> executed once but at a date and time in the future.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.3123.1" xmlns="http://www.w3.org/1999/xhtml">Recurring</span></strong><span class="koboSpan" id="kobo.3124.1" xmlns="http://www.w3.org/1999/xhtml">: Jobs that</span><a id="_idIndexMarker1008"/><span class="koboSpan" id="kobo.3125.1" xmlns="http://www.w3.org/1999/xhtml"> are executed repeatedly at a regular CRON schedule.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.3126.1" xmlns="http://www.w3.org/1999/xhtml">Continuation</span></strong><span class="koboSpan" id="kobo.3127.1" xmlns="http://www.w3.org/1999/xhtml">: Jobs that </span><a id="_idIndexMarker1009"/><span class="koboSpan" id="kobo.3128.1" xmlns="http://www.w3.org/1999/xhtml">are executed on completion of a parent job.</span></li>
<li class="bulletList"><strong class="keyWord"><span class="koboSpan" id="kobo.3129.1" xmlns="http://www.w3.org/1999/xhtml">Batches</span></strong><span class="koboSpan" id="kobo.3130.1" xmlns="http://www.w3.org/1999/xhtml">: Jobs that</span><a id="_idIndexMarker1010"/><span class="koboSpan" id="kobo.3131.1" xmlns="http://www.w3.org/1999/xhtml"> are transactional. </span><span class="koboSpan" id="kobo.3131.2" xmlns="http://www.w3.org/1999/xhtml">These are only available in the paid version.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.3132.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire has persistent storage and can be configured to use:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.3133.1" xmlns="http://www.w3.org/1999/xhtml">SQL Server</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3134.1" xmlns="http://www.w3.org/1999/xhtml">Redis</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3135.1" xmlns="http://www.w3.org/1999/xhtml">In-memory</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3136.1" xmlns="http://www.w3.org/1999/xhtml">Community-developed storage</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.3137.1" xmlns="http://www.w3.org/1999/xhtml">Let’s set up an empty ASP.NET Core project to host Hangfire:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.3138.1" xmlns="http://www.w3.org/1999/xhtml">Use your preferred code editor to create a new Web API controller-based project, as defined in the following list:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.3139.1" xmlns="http://www.w3.org/1999/xhtml">Project template: </span><strong class="screenText"><span class="koboSpan" id="kobo.3140.1" xmlns="http://www.w3.org/1999/xhtml">ASP.NET Core Empty</span></strong><span class="koboSpan" id="kobo.3141.1" xmlns="http://www.w3.org/1999/xhtml"> / </span><code class="inlineCode"><span class="koboSpan" id="kobo.3142.1" xmlns="http://www.w3.org/1999/xhtml">web</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3143.1" xmlns="http://www.w3.org/1999/xhtml">Solution file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.3144.1" xmlns="http://www.w3.org/1999/xhtml">Chapter09</span></code></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3145.1" xmlns="http://www.w3.org/1999/xhtml">Project file and folder: </span><code class="inlineCode"><span class="koboSpan" id="kobo.3146.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.3147.1" xmlns="http://www.w3.org/1999/xhtml">Configure for HTTPS</span></strong><span class="koboSpan" id="kobo.3148.1" xmlns="http://www.w3.org/1999/xhtml">: Selected.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.3149.1" xmlns="http://www.w3.org/1999/xhtml">Enable Docker</span></strong><span class="koboSpan" id="kobo.3150.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
<li class="bulletList"><strong class="screenText"><span class="koboSpan" id="kobo.3151.1" xmlns="http://www.w3.org/1999/xhtml">Do not use top-level statements</span></strong><span class="koboSpan" id="kobo.3152.1" xmlns="http://www.w3.org/1999/xhtml">: Cleared.</span></li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3153.1" xmlns="http://www.w3.org/1999/xhtml">In the project file, treat warnings as errors, and add package references to work with Hangfire and persist its data to SQL Server, as shown in the following markup:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3154.1" xmlns="http://www.w3.org/1999/xhtml">&lt;ItemGroup&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3155.1" xmlns="http://www.w3.org/1999/xhtml">"Hangfire.Core"</span></span><span class="koboSpan" id="kobo.3156.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3157.1" xmlns="http://www.w3.org/1999/xhtml">"1.8.6"</span></span><span class="koboSpan" id="kobo.3158.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3159.1" xmlns="http://www.w3.org/1999/xhtml">"Hangfire.SqlServer"</span></span><span class="koboSpan" id="kobo.3160.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3161.1" xmlns="http://www.w3.org/1999/xhtml">"1.8.6"</span></span><span class="koboSpan" id="kobo.3162.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3163.1" xmlns="http://www.w3.org/1999/xhtml">"Hangfire.AspNetCore"</span></span><span class="koboSpan" id="kobo.3164.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3165.1" xmlns="http://www.w3.org/1999/xhtml">"1.8.6"</span></span><span class="koboSpan" id="kobo.3166.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
  &lt;PackageReference Include=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3167.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.Data.SqlClient"</span></span><span class="koboSpan" id="kobo.3168.1" xmlns="http://www.w3.org/1999/xhtml"> Version=</span><span class="hljs-string"><span class="koboSpan" id="kobo.3169.1" xmlns="http://www.w3.org/1999/xhtml">"5.1.2"</span></span><span class="koboSpan" id="kobo.3170.1" xmlns="http://www.w3.org/1999/xhtml"> /&gt;
&lt;/ItemGroup&gt;
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3171.1" xmlns="http://www.w3.org/1999/xhtml">Build the project to</span><a id="_idIndexMarker1011"/><span class="koboSpan" id="kobo.3172.1" xmlns="http://www.w3.org/1999/xhtml"> restore packages.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3173.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3174.1" xmlns="http://www.w3.org/1999/xhtml">Properties</span></code><span class="koboSpan" id="kobo.3175.1" xmlns="http://www.w3.org/1999/xhtml"> folder, in </span><code class="inlineCode"><span class="koboSpan" id="kobo.3176.1" xmlns="http://www.w3.org/1999/xhtml">launchSettings.json</span></code><span class="koboSpan" id="kobo.3177.1" xmlns="http://www.w3.org/1999/xhtml">, modify the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3178.1" xmlns="http://www.w3.org/1999/xhtml">applicationUrl</span></code><span class="koboSpan" id="kobo.3179.1" xmlns="http://www.w3.org/1999/xhtml"> of the </span><a id="_idIndexMarker1012"/><span class="koboSpan" id="kobo.3180.1" xmlns="http://www.w3.org/1999/xhtml">profile named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3181.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.3182.1" xmlns="http://www.w3.org/1999/xhtml"> to use port </span><code class="inlineCode"><span class="koboSpan" id="kobo.3183.1" xmlns="http://www.w3.org/1999/xhtml">5095</span></code><span class="koboSpan" id="kobo.3184.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.3185.1" xmlns="http://www.w3.org/1999/xhtml">https</span></code><span class="koboSpan" id="kobo.3186.1" xmlns="http://www.w3.org/1999/xhtml"> and port </span><code class="inlineCode"><span class="koboSpan" id="kobo.3187.1" xmlns="http://www.w3.org/1999/xhtml">5096</span></code><span class="koboSpan" id="kobo.3188.1" xmlns="http://www.w3.org/1999/xhtml"> for </span><code class="inlineCode"><span class="koboSpan" id="kobo.3189.1" xmlns="http://www.w3.org/1999/xhtml">http</span></code><span class="koboSpan" id="kobo.3190.1" xmlns="http://www.w3.org/1999/xhtml">, as highlighted in the following configuration:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-attr"><span class="koboSpan" id="kobo.3191.1" xmlns="http://www.w3.org/1999/xhtml">"profiles"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3192.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.3193.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span><span class="koboSpan" id="kobo.3194.1" xmlns="http://www.w3.org/1999/xhtml">
  ...
</span><span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.3195.1" xmlns="http://www.w3.org/1999/xhtml">"https"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3196.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3197.1" xmlns="http://www.w3.org/1999/xhtml">{</span></strong></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3198.1" xmlns="http://www.w3.org/1999/xhtml">"commandName"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3199.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.3200.1" xmlns="http://www.w3.org/1999/xhtml">"Project"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3201.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3202.1" xmlns="http://www.w3.org/1999/xhtml">"dotnetRunMessages"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3203.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3204.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3205.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3206.1" xmlns="http://www.w3.org/1999/xhtml">"launchBrowser"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3207.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3208.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3209.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3210.1" xmlns="http://www.w3.org/1999/xhtml">"launchUrl"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3211.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.3212.1" xmlns="http://www.w3.org/1999/xhtml">"swagger"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3213.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.3214.1" xmlns="http://www.w3.org/1999/xhtml">"applicationUrl"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3215.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.3216.1" xmlns="http://www.w3.org/1999/xhtml">"https://localhost:5095;http://localhost:5096"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3217.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3218.1" xmlns="http://www.w3.org/1999/xhtml">"environmentVariables"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3219.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.3220.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3221.1" xmlns="http://www.w3.org/1999/xhtml">"ASPNETCORE_ENVIRONMENT"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3222.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.3223.1" xmlns="http://www.w3.org/1999/xhtml">"Development"</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.3224.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3225.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3226.1" xmlns="http://www.w3.org/1999/xhtml">appsettings.Development.json</span></code><span class="koboSpan" id="kobo.3227.1" xmlns="http://www.w3.org/1999/xhtml">, add an entry to set the Hangfire log level to </span><code class="inlineCode"><span class="koboSpan" id="kobo.3228.1" xmlns="http://www.w3.org/1999/xhtml">Information</span></code><span class="koboSpan" id="kobo.3229.1" xmlns="http://www.w3.org/1999/xhtml">, as highlighted in the following JSON:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3230.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3231.1" xmlns="http://www.w3.org/1999/xhtml">"Logging"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3232.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.3233.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3234.1" xmlns="http://www.w3.org/1999/xhtml">"</span></span><span class="hljs-attr"><span class="koboSpan" id="kobo.3235.1" xmlns="http://www.w3.org/1999/xhtml">LogLevel"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3236.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-punctuation"><span class="koboSpan" id="kobo.3237.1" xmlns="http://www.w3.org/1999/xhtml">{</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3238.1" xmlns="http://www.w3.org/1999/xhtml">"Default"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3239.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.3240.1" xmlns="http://www.w3.org/1999/xhtml">"Information"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3241.1" xmlns="http://www.w3.org/1999/xhtml">,</span></span>
<span class="hljs-attr"><span class="koboSpan" id="kobo.3242.1" xmlns="http://www.w3.org/1999/xhtml">"Microsoft.AspNetCore"</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3243.1" xmlns="http://www.w3.org/1999/xhtml">:</span></span> <span class="hljs-string"><span class="koboSpan" id="kobo.3244.1" xmlns="http://www.w3.org/1999/xhtml">"Warning"</span></span><span class="code-highlight"><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3245.1" xmlns="http://www.w3.org/1999/xhtml">,</span></strong></span>
<span class="code-highlight"><strong class="hljs-slc"> </strong><strong class="hljs-attr-slc"><span class="koboSpan" id="kobo.3246.1" xmlns="http://www.w3.org/1999/xhtml">"Hangfire"</span></strong><strong class="hljs-punctuation-slc"><span class="koboSpan" id="kobo.3247.1" xmlns="http://www.w3.org/1999/xhtml">:</span></strong><strong class="hljs-slc"> </strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.3248.1" xmlns="http://www.w3.org/1999/xhtml">"</span></strong><strong class="hljs-string-slc"><span class="koboSpan" id="kobo.3249.1" xmlns="http://www.w3.org/1999/xhtml">Information"</span></strong></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.3250.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.3251.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
<span class="hljs-punctuation"><span class="koboSpan" id="kobo.3252.1" xmlns="http://www.w3.org/1999/xhtml">}</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3253.1" xmlns="http://www.w3.org/1999/xhtml">Create a SQL Server database named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3254.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.HangfireDb</span></code><span class="koboSpan" id="kobo.3255.1" xmlns="http://www.w3.org/1999/xhtml">:</span><ul>
<li class="bulletList"><span class="koboSpan" id="kobo.3256.1" xmlns="http://www.w3.org/1999/xhtml">If you are using </span><a id="_idIndexMarker1013"/><span class="koboSpan" id="kobo.3257.1" xmlns="http://www.w3.org/1999/xhtml">Visual Studio 2022, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.3258.1" xmlns="http://www.w3.org/1999/xhtml">View</span></strong><span class="koboSpan" id="kobo.3259.1" xmlns="http://www.w3.org/1999/xhtml"> | </span><strong class="screenText"><span class="koboSpan" id="kobo.3260.1" xmlns="http://www.w3.org/1999/xhtml">Server Explorer</span></strong><span class="koboSpan" id="kobo.3261.1" xmlns="http://www.w3.org/1999/xhtml">, right-click </span><strong class="screenText"><span class="koboSpan" id="kobo.3262.1" xmlns="http://www.w3.org/1999/xhtml">Data Connections</span></strong><span class="koboSpan" id="kobo.3263.1" xmlns="http://www.w3.org/1999/xhtml">, choose </span><strong class="screenText"><span class="koboSpan" id="kobo.3264.1" xmlns="http://www.w3.org/1999/xhtml">Create New SQL Server database…</span></strong><span class="koboSpan" id="kobo.3265.1" xmlns="http://www.w3.org/1999/xhtml">, enter connection information and the database name, and then click </span><strong class="screenText"><span class="koboSpan" id="kobo.3266.1" xmlns="http://www.w3.org/1999/xhtml">OK</span></strong><span class="koboSpan" id="kobo.3267.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3268.1" xmlns="http://www.w3.org/1999/xhtml">If you are using Visual Studio Code, navigate to </span><strong class="screenText"><span class="koboSpan" id="kobo.3269.1" xmlns="http://www.w3.org/1999/xhtml">SQL</span></strong> <strong class="screenText"><span class="koboSpan" id="kobo.3270.1" xmlns="http://www.w3.org/1999/xhtml">Server</span></strong><span class="koboSpan" id="kobo.3271.1" xmlns="http://www.w3.org/1999/xhtml">, right-click and choose </span><strong class="screenText"><span class="koboSpan" id="kobo.3272.1" xmlns="http://www.w3.org/1999/xhtml">New Query</span></strong><span class="koboSpan" id="kobo.3273.1" xmlns="http://www.w3.org/1999/xhtml">, enter connection information, and then in the query window, enter the following SQL command and execute it:
            </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3274.1" xmlns="http://www.w3.org/1999/xhtml">USE master
GO
CREATE DATABASE [Northwind.HangfireDb]
GO
</span></code></pre>
</li>
</ul>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3275.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3276.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.3277.1" xmlns="http://www.w3.org/1999/xhtml">, delete the existing statements, and then add statements to configure Hangfire to</span><a id="_idIndexMarker1014"/><span class="koboSpan" id="kobo.3278.1" xmlns="http://www.w3.org/1999/xhtml"> use SQL Server and to enable Hangfire Dashboard, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.3279.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.3280.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.Data.SqlClient; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3281.1" xmlns="http://www.w3.org/1999/xhtml">// To use SqlConnectionStringBuilder.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.3282.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.3283.1" xmlns="http://www.w3.org/1999/xhtml"> Hangfire; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3284.1" xmlns="http://www.w3.org/1999/xhtml">// To use GlobalConfiguration.</span></span><span class="koboSpan" id="kobo.3285.1" xmlns="http://www.w3.org/1999/xhtml">
SqlConnectionStringBuilder connection = </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3286.1" xmlns="http://www.w3.org/1999/xhtml">new</span></span><span class="koboSpan" id="kobo.3287.1" xmlns="http://www.w3.org/1999/xhtml">();
connection.InitialCatalog = </span><span class="hljs-string"><span class="koboSpan" id="kobo.3288.1" xmlns="http://www.w3.org/1999/xhtml">"Northwind.HangfireDb"</span></span><span class="koboSpan" id="kobo.3289.1" xmlns="http://www.w3.org/1999/xhtml">;
connection.MultipleActiveResultSets = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3290.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.3291.1" xmlns="http://www.w3.org/1999/xhtml">;
connection.Encrypt = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3292.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.3293.1" xmlns="http://www.w3.org/1999/xhtml">;
connection.TrustServerCertificate = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3294.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.3295.1" xmlns="http://www.w3.org/1999/xhtml">;
connection.ConnectTimeout = </span><span class="hljs-number"><span class="koboSpan" id="kobo.3296.1" xmlns="http://www.w3.org/1999/xhtml">5</span></span><span class="koboSpan" id="kobo.3297.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3298.1" xmlns="http://www.w3.org/1999/xhtml">// Default is 30 seconds.</span></span><span class="koboSpan" id="kobo.3299.1" xmlns="http://www.w3.org/1999/xhtml">
connection.DataSource = </span><span class="hljs-string"><span class="koboSpan" id="kobo.3300.1" xmlns="http://www.w3.org/1999/xhtml">"."</span></span><span class="koboSpan" id="kobo.3301.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3302.1" xmlns="http://www.w3.org/1999/xhtml">// To use local SQL Server.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3303.1" xmlns="http://www.w3.org/1999/xhtml">// To use Windows Integrated authentication.</span></span><span class="koboSpan" id="kobo.3304.1" xmlns="http://www.w3.org/1999/xhtml">
connection.IntegratedSecurity = </span><span class="hljs-literal"><span class="koboSpan" id="kobo.3305.1" xmlns="http://www.w3.org/1999/xhtml">true</span></span><span class="koboSpan" id="kobo.3306.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-comment"><span class="koboSpan" id="kobo.3307.1" xmlns="http://www.w3.org/1999/xhtml">/*</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3308.1" xmlns="http://www.w3.org/1999/xhtml">// To use SQL Server authentication.</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3309.1" xmlns="http://www.w3.org/1999/xhtml">builder.UserID = "sa";</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3310.1" xmlns="http://www.w3.org/1999/xhtml">builder.Password = "123456";</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3311.1" xmlns="http://www.w3.org/1999/xhtml">builder.PersistSecurityInfo = false;</span></span>
<span class="hljs-comment"><span class="koboSpan" id="kobo.3312.1" xmlns="http://www.w3.org/1999/xhtml">*/</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.3313.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.3314.1" xmlns="http://www.w3.org/1999/xhtml"> builder = WebApplication.CreateBuilder(args);
builder.Services.AddHangfire(config =&gt; config
  .SetDataCompatibilityLevel(CompatibilityLevel.Version_180)
  .UseSimpleAssemblyNameTypeSerializer()
  .UseRecommendedSerializerSettings()
  .UseSqlServerStorage(connection.ConnectionString));
builder.Services.AddHangfireServer();
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3315.1" xmlns="http://www.w3.org/1999/xhtml">var</span></span><span class="koboSpan" id="kobo.3316.1" xmlns="http://www.w3.org/1999/xhtml"> app = builder.Build();
app.UseHangfireDashboard();
app.MapGet(</span><span class="hljs-string"><span class="koboSpan" id="kobo.3317.1" xmlns="http://www.w3.org/1999/xhtml">"/"</span></span><span class="koboSpan" id="kobo.3318.1" xmlns="http://www.w3.org/1999/xhtml">, () =&gt; 
  </span><span class="hljs-string"><span class="koboSpan" id="kobo.3319.1" xmlns="http://www.w3.org/1999/xhtml">"Navigate to /hangfire to see the Hangfire Dashboard."</span></span><span class="koboSpan" id="kobo.3320.1" xmlns="http://www.w3.org/1999/xhtml">);
app.MapHangfireDashboard();
app.Run();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3321.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3322.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code><span class="koboSpan" id="kobo.3323.1" xmlns="http://www.w3.org/1999/xhtml"> project </span><a id="_idIndexMarker1015"/><span class="koboSpan" id="kobo.3324.1" xmlns="http://www.w3.org/1999/xhtml">without debugging, and note the messages </span><a id="_idIndexMarker1016"/><span class="koboSpan" id="kobo.3325.1" xmlns="http://www.w3.org/1999/xhtml">written to the console, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3326.1" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.SqlServer.SqlServerObjectsInstaller[0]
      Start installing Hangfire SQL objects...
</span><span class="koboSpan" id="kobo.3326.2" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.SqlServer.SqlServerObjectsInstaller[0]
      Hangfire SQL objects installed.
</span><span class="koboSpan" id="kobo.3326.3" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[14]
      Now listening on: https://localhost:5095
info: Microsoft.Hosting.Lifetime[14]
      Now listening on: http://localhost:5096
info: Hangfire.BackgroundJobServer[0]
      Starting Hangfire Server using job storage: 'SQL Server: .@Northwind.HangfireDb'
info: Hangfire.BackgroundJobServer[0]
      Using the following options for SQL Server job storage: Queue poll interval: 00:00:00.
</span><span class="koboSpan" id="kobo.3326.4" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.BackgroundJobServer[0]
      Using the following options for Hangfire Server:
          Worker count: 20
          Listening queues: 'default'
          Shutdown timeout: 00:00:15
          Schedule polling interval: 00:00:15
info: Microsoft.Hosting.Lifetime[0]
      Application started. </span><span class="koboSpan" id="kobo.3326.5" xmlns="http://www.w3.org/1999/xhtml">Press Ctrl+C to shut down.
</span><span class="koboSpan" id="kobo.3326.6" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Hosting environment: Development
info: Microsoft.Hosting.Lifetime[0]
      Content root path: C:\apps-services-net8\Chapter09\Northwind.Background.Hangfire
info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b successfully announced in 140.4628 ms
info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b is starting the registered dispatchers: ServerWatchdog, ServerJobCancellationWatcher, ExpirationManager, CountersAggregator, SqlServerHeartbeatProcess, Worker, DelayedJobScheduler, RecurringJobScheduler...
</span><span class="koboSpan" id="kobo.3326.7" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b all the dispatchers started
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3327.1" xmlns="http://www.w3.org/1999/xhtml">In the browser, note</span><a id="_idIndexMarker1017"/><span class="koboSpan" id="kobo.3328.1" xmlns="http://www.w3.org/1999/xhtml"> the plain</span><a id="_idIndexMarker1018"/><span class="koboSpan" id="kobo.3329.1" xmlns="http://www.w3.org/1999/xhtml"> text message, and then in the address bar, append </span><code class="inlineCode"><span class="koboSpan" id="kobo.3330.1" xmlns="http://www.w3.org/1999/xhtml">hangfire</span></code><span class="koboSpan" id="kobo.3331.1" xmlns="http://www.w3.org/1999/xhtml">, and note the </span><strong class="screenText"><span class="koboSpan" id="kobo.3332.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire Dashboard</span></strong><span class="koboSpan" id="kobo.3333.1" xmlns="http://www.w3.org/1999/xhtml"> user interface, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.3334.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.7</span></em><span class="koboSpan" id="kobo.3335.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.3336.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_07.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.3337.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.7: Hangfire Dashboard user interface</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="10"><span class="koboSpan" id="kobo.3338.1" xmlns="http://www.w3.org/1999/xhtml">Close the browser window, and</span><a id="_idIndexMarker1019"/><span class="koboSpan" id="kobo.3339.1" xmlns="http://www.w3.org/1999/xhtml"> at the command prompt or terminal for the Hangfire service, press </span><em class="keystroke"><span class="koboSpan" id="kobo.3340.1" xmlns="http://www.w3.org/1999/xhtml">Ctrl</span></em><span class="koboSpan" id="kobo.3341.1" xmlns="http://www.w3.org/1999/xhtml"> + </span><em class="keystroke"><span class="koboSpan" id="kobo.3342.1" xmlns="http://www.w3.org/1999/xhtml">C</span></em><span class="koboSpan" id="kobo.3343.1" xmlns="http://www.w3.org/1999/xhtml"> to cleanly shut down the server, and note the</span><a id="_idIndexMarker1020"/><span class="koboSpan" id="kobo.3344.1" xmlns="http://www.w3.org/1999/xhtml"> messages, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3345.1" xmlns="http://www.w3.org/1999/xhtml">info: Microsoft.Hosting.Lifetime[0]
      Application is shutting down...
</span><span class="koboSpan" id="kobo.3345.2" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b caught stopping signal...
</span><span class="koboSpan" id="kobo.3345.3" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b All dispatchers stopped
info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b successfully reported itself as stopped in 2.8874 ms
info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:14120:c8ea792b has been stopped in total 19.6204 ms
</span></code></pre>
</li>
</ol>
<h2 class="heading-2" id="_idParaDest-370"><span class="koboSpan" id="kobo.3346.1" xmlns="http://www.w3.org/1999/xhtml">Scheduling jobs using Hangfire</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3347.1" xmlns="http://www.w3.org/1999/xhtml">Next, we will allow a</span><a id="_idIndexMarker1021"/><span class="koboSpan" id="kobo.3348.1" xmlns="http://www.w3.org/1999/xhtml"> client to schedule a job (in this case, just writing a message to the console a specified number of seconds in the future) by </span><code class="inlineCode"><span class="koboSpan" id="kobo.3349.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.3350.1" xmlns="http://www.w3.org/1999/xhtml">ing to the web service:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.3351.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3352.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code><span class="koboSpan" id="kobo.3353.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3354.1" xmlns="http://www.w3.org/1999/xhtml">WriteMessageJobDetail.cs</span></code><span class="koboSpan" id="kobo.3355.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3356.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3357.1" xmlns="http://www.w3.org/1999/xhtml">WriteMessageJobDetail.cs</span></code><span class="koboSpan" id="kobo.3358.1" xmlns="http://www.w3.org/1999/xhtml">, define a class to represent a scheduled job, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.3359.1" xmlns="http://www.w3.org/1999/xhtml">namespace</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.3360.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Models</span></span><span class="koboSpan" id="kobo.3361.1" xmlns="http://www.w3.org/1999/xhtml">;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3362.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3363.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.3364.1" xmlns="http://www.w3.org/1999/xhtml">WriteMessageJobDetail</span></span><span class="koboSpan" id="kobo.3365.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3366.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.3367.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="koboSpan" id="kobo.3368.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.3368.2" xmlns="http://www.w3.org/1999/xhtml">Message { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3369.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.3370.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3371.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.3372.1" xmlns="http://www.w3.org/1999/xhtml">; }
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3373.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span> <span class="hljs-built_in"><span class="koboSpan" id="kobo.3374.1" xmlns="http://www.w3.org/1999/xhtml">int</span></span><span class="koboSpan" id="kobo.3375.1" xmlns="http://www.w3.org/1999/xhtml"> Seconds { </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3376.1" xmlns="http://www.w3.org/1999/xhtml">get</span></span><span class="koboSpan" id="kobo.3377.1" xmlns="http://www.w3.org/1999/xhtml">; </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3378.1" xmlns="http://www.w3.org/1999/xhtml">set</span></span><span class="koboSpan" id="kobo.3379.1" xmlns="http://www.w3.org/1999/xhtml">; }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3380.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3381.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code><span class="koboSpan" id="kobo.3382.1" xmlns="http://www.w3.org/1999/xhtml"> project, add a new class file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3383.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.3384.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3385.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3386.1" xmlns="http://www.w3.org/1999/xhtml">Program.Methods.cs</span></code><span class="koboSpan" id="kobo.3387.1" xmlns="http://www.w3.org/1999/xhtml">, extend the partial </span><code class="inlineCode"><span class="koboSpan" id="kobo.3388.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></code><span class="koboSpan" id="kobo.3389.1" xmlns="http://www.w3.org/1999/xhtml"> class with a method to write a message to the console in green color, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.3390.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3391.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="koboSpan" id="kobo.3392.1" xmlns="http://www.w3.org/1999/xhtml"> System.Console;
</span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3393.1" xmlns="http://www.w3.org/1999/xhtml">partial</span></span> <span class="hljs-keyword"><span class="koboSpan" id="kobo.3394.1" xmlns="http://www.w3.org/1999/xhtml">class</span></span> <span class="hljs-title"><span class="koboSpan" id="kobo.3395.1" xmlns="http://www.w3.org/1999/xhtml">Program</span></span><span class="koboSpan" id="kobo.3396.1" xmlns="http://www.w3.org/1999/xhtml">
{
  </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3397.1" xmlns="http://www.w3.org/1999/xhtml">public</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3398.1" xmlns="http://www.w3.org/1999/xhtml">static</span></span><span class="hljs-function"> </span><span class="hljs-keyword"><span class="koboSpan" id="kobo.3399.1" xmlns="http://www.w3.org/1999/xhtml">void</span></span><span class="hljs-function"> </span><span class="hljs-title"><span class="koboSpan" id="kobo.3400.1" xmlns="http://www.w3.org/1999/xhtml">WriteMessage</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3401.1" xmlns="http://www.w3.org/1999/xhtml">(</span></span><span class="hljs-built_in"><span class="koboSpan" id="kobo.3402.1" xmlns="http://www.w3.org/1999/xhtml">string</span></span><span class="hljs-params"><span class="koboSpan" id="kobo.3403.1" xmlns="http://www.w3.org/1999/xhtml">? </span><span class="koboSpan" id="kobo.3403.2" xmlns="http://www.w3.org/1999/xhtml">message</span></span><span class="hljs-function"><span class="koboSpan" id="kobo.3404.1" xmlns="http://www.w3.org/1999/xhtml">)</span></span><span class="koboSpan" id="kobo.3405.1" xmlns="http://www.w3.org/1999/xhtml">
  {
    ConsoleColor previousColor = ForegroundColor;
    ForegroundColor = ConsoleColor.Green;
    WriteLine(message);
    ForegroundColor = previousColor;
  }
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3406.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3407.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.3408.1" xmlns="http://www.w3.org/1999/xhtml">, import namespaces to work with the job, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="hljs-keyword"><span class="koboSpan" id="kobo.3409.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.3410.1" xmlns="http://www.w3.org/1999/xhtml"> Northwind.Background.Models; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3411.1" xmlns="http://www.w3.org/1999/xhtml">// To use WriteMessageJobDetail.</span></span>
<span class="hljs-keyword"><span class="koboSpan" id="kobo.3412.1" xmlns="http://www.w3.org/1999/xhtml">using</span></span><span class="koboSpan" id="kobo.3413.1" xmlns="http://www.w3.org/1999/xhtml"> Microsoft.AspNetCore.Mvc; </span><span class="hljs-comment"><span class="koboSpan" id="kobo.3414.1" xmlns="http://www.w3.org/1999/xhtml">// To use [FromBody].</span></span>
</code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3415.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3416.1" xmlns="http://www.w3.org/1999/xhtml">Program.cs</span></code><span class="koboSpan" id="kobo.3417.1" xmlns="http://www.w3.org/1999/xhtml">, after the statement to map a </span><code class="inlineCode"><span class="koboSpan" id="kobo.3418.1" xmlns="http://www.w3.org/1999/xhtml">GET</span></code><span class="koboSpan" id="kobo.3419.1" xmlns="http://www.w3.org/1999/xhtml"> request, map a </span><code class="inlineCode"><span class="koboSpan" id="kobo.3420.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.3421.1" xmlns="http://www.w3.org/1999/xhtml"> request to the relative path </span><code class="inlineCode"><span class="koboSpan" id="kobo.3422.1" xmlns="http://www.w3.org/1999/xhtml">/schedulejob</span></code><span class="koboSpan" id="kobo.3423.1" xmlns="http://www.w3.org/1999/xhtml">, get the job details from the body of the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3424.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.3425.1" xmlns="http://www.w3.org/1999/xhtml"> request, and use it to schedule a background job, using Hangfire to run at the specified</span><a id="_idIndexMarker1022"/><span class="koboSpan" id="kobo.3426.1" xmlns="http://www.w3.org/1999/xhtml"> time in seconds in the future, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3427.1" xmlns="http://www.w3.org/1999/xhtml">app.MapPost(</span><span class="hljs-string"><span class="koboSpan" id="kobo.3428.1" xmlns="http://www.w3.org/1999/xhtml">"/schedulejob"</span></span><span class="koboSpan" id="kobo.3429.1" xmlns="http://www.w3.org/1999/xhtml">, ([FromBody] WriteMessageJobDetail job) =&gt;
  {
    BackgroundJob.Schedule(
      methodCall: () =&gt; WriteMessage(job.Message),
      enqueueAt: DateTimeOffset.UtcNow + 
        TimeSpan.FromSeconds(job.Seconds));
  });
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3430.1" xmlns="http://www.w3.org/1999/xhtml">Start the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3431.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code><span class="koboSpan" id="kobo.3432.1" xmlns="http://www.w3.org/1999/xhtml"> project without debugging.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3433.1" xmlns="http://www.w3.org/1999/xhtml">In the command prompt or terminal, confirm that all the dispatchers started, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3434.1" xmlns="http://www.w3.org/1999/xhtml">info: Hangfire.Server.BackgroundServerProcess[0]
      Server desktop-j1pqhr7:13916:9f1851b5 all the dispatchers started
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3435.1" xmlns="http://www.w3.org/1999/xhtml">In the browser, navigate to </span><code class="inlineCode"><span class="koboSpan" id="kobo.3436.1" xmlns="http://www.w3.org/1999/xhtml">/hangfire </span></code><span class="koboSpan" id="kobo.3437.1" xmlns="http://www.w3.org/1999/xhtml">to view Hangfire Dashboard.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3438.1" xmlns="http://www.w3.org/1999/xhtml">In your code editor, in the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3439.1" xmlns="http://www.w3.org/1999/xhtml">HttpRequests</span></code><span class="koboSpan" id="kobo.3440.1" xmlns="http://www.w3.org/1999/xhtml"> folder, create a file named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3441.1" xmlns="http://www.w3.org/1999/xhtml">hangfire-schedule-job.http</span></code><span class="koboSpan" id="kobo.3442.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3443.1" xmlns="http://www.w3.org/1999/xhtml">In </span><code class="inlineCode"><span class="koboSpan" id="kobo.3444.1" xmlns="http://www.w3.org/1999/xhtml">hangfire-schedule-job.http</span></code><span class="koboSpan" id="kobo.3445.1" xmlns="http://www.w3.org/1999/xhtml">, add statements to make a </span><code class="inlineCode"><span class="koboSpan" id="kobo.3446.1" xmlns="http://www.w3.org/1999/xhtml">POST</span></code><span class="koboSpan" id="kobo.3447.1" xmlns="http://www.w3.org/1999/xhtml"> request to the Hangfire service, as shown in the following code:
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3448.1" xmlns="http://www.w3.org/1999/xhtml">### Configure a variable for the Hangfire web service base address.
</span><span class="koboSpan" id="kobo.3448.2" xmlns="http://www.w3.org/1999/xhtml">@base_address = https://localhost:5095/
POST {{base_address}}schedulejob
</span><span class="hljs-attribute"><span class="koboSpan" id="kobo.3449.1" xmlns="http://www.w3.org/1999/xhtml">Content-Type</span></span><span class="hljs-punctuation"><span class="koboSpan" id="kobo.3450.1" xmlns="http://www.w3.org/1999/xhtml">: </span></span><span class="koboSpan" id="kobo.3451.1" xmlns="http://www.w3.org/1999/xhtml">application/json
{
  "message": "Hangfire is awesome!",
  "seconds": 30
}
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3452.1" xmlns="http://www.w3.org/1999/xhtml">Send the request, and</span><a id="_idIndexMarker1023"/><span class="koboSpan" id="kobo.3453.1" xmlns="http://www.w3.org/1999/xhtml"> note the successful response, as shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3454.1" xmlns="http://www.w3.org/1999/xhtml">HTTP/1.1 200 OK
Content-Length: 0
Connection: close
Date: Mon, 12 Jun 2023 16:04:20 GMT
Server: Kestrel
Alt-Svc: h3=":5095"; ma=86400
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3455.1" xmlns="http://www.w3.org/1999/xhtml">In the browser, in </span><strong class="screenText"><span class="koboSpan" id="kobo.3456.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire Dashboard</span></strong><span class="koboSpan" id="kobo.3457.1" xmlns="http://www.w3.org/1999/xhtml">, click </span><strong class="screenText"><span class="koboSpan" id="kobo.3458.1" xmlns="http://www.w3.org/1999/xhtml">Jobs</span></strong><span class="koboSpan" id="kobo.3459.1" xmlns="http://www.w3.org/1999/xhtml"> in the top menu click </span><strong class="screenText"><span class="koboSpan" id="kobo.3460.1" xmlns="http://www.w3.org/1999/xhtml">Jobs</span></strong><span class="koboSpan" id="kobo.3461.1" xmlns="http://www.w3.org/1999/xhtml">, in the left side menu, and then note there is one scheduled job, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.3462.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.8</span></em><span class="koboSpan" id="kobo.3463.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.3464.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_08.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.3465.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.8: Scheduled jobs in Hangfire</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="14"><span class="koboSpan" id="kobo.3466.1" xmlns="http://www.w3.org/1999/xhtml">Wait until 30</span><a id="_idIndexMarker1024"/><span class="koboSpan" id="kobo.3467.1" xmlns="http://www.w3.org/1999/xhtml"> seconds have passed, and then in the left -side menu, click </span><strong class="screenText"><span class="koboSpan" id="kobo.3468.1" xmlns="http://www.w3.org/1999/xhtml">Succeeded</span></strong><span class="koboSpan" id="kobo.3469.1" xmlns="http://www.w3.org/1999/xhtml">, and note the job has succeeded, as shown in </span><em class="italic"><span class="koboSpan" id="kobo.3470.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.9</span></em><span class="koboSpan" id="kobo.3471.1" xmlns="http://www.w3.org/1999/xhtml">:</span></li>
</ol>
<figure class="mediaobject"><span class="koboSpan" id="kobo.3472.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/B19587_09_09.png"/></span></figure>
<p class="packt_figref"><span class="koboSpan" id="kobo.3473.1" xmlns="http://www.w3.org/1999/xhtml">Figure 9.9: Succeeded jobs in Hangfire</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="15"><span class="koboSpan" id="kobo.3474.1" xmlns="http://www.w3.org/1999/xhtml">At the command prompt or terminal, note the message that was written to the console, as</span><a id="_idIndexMarker1025"/><span class="koboSpan" id="kobo.3475.1" xmlns="http://www.w3.org/1999/xhtml"> shown in the following output:
        </span><pre class="programlisting con"><code class="hljs-con"><span class="koboSpan" id="kobo.3476.1" xmlns="http://www.w3.org/1999/xhtml">Hangfire is awesome!
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3477.1" xmlns="http://www.w3.org/1999/xhtml">Close the browser and shut down the server.</span></li>
</ol>
<div class="note">
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.3478.1" xmlns="http://www.w3.org/1999/xhtml">More Information</span></strong><span class="koboSpan" id="kobo.3479.1" xmlns="http://www.w3.org/1999/xhtml">: You can</span><a id="_idIndexMarker1026"/><span class="koboSpan" id="kobo.3480.1" xmlns="http://www.w3.org/1999/xhtml"> read more about Hangfire at the following link: </span><a href="https://www.hangfire.io/"><span class="url"><span class="koboSpan" id="kobo.3481.1" xmlns="http://www.w3.org/1999/xhtml">https://www.hangfire.io/</span></span></a><span class="koboSpan" id="kobo.3482.1" xmlns="http://www.w3.org/1999/xhtml">.</span></p>
</div>
<h1 class="heading-1" id="_idParaDest-371"><span class="koboSpan" id="kobo.3483.1" xmlns="http://www.w3.org/1999/xhtml">Practicing and exploring</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3484.1" xmlns="http://www.w3.org/1999/xhtml">Test your knowledge and understanding by answering some questions, getting some hands-on practice, and exploring this chapter’s topics with deeper research.</span></p>
<h2 class="heading-2" id="_idParaDest-372"><span class="koboSpan" id="kobo.3485.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 9.1 – Test your knowledge</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3486.1" xmlns="http://www.w3.org/1999/xhtml">Answer the following questions:</span></p>
<ol class="numberedList" style="list-style-type: decimal;">
<li class="numberedList" value="1"><span class="koboSpan" id="kobo.3487.1" xmlns="http://www.w3.org/1999/xhtml">How much longer does it take to read 1 MB of data from SSD compared to memory?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3488.1" xmlns="http://www.w3.org/1999/xhtml">What is the difference between absolute and sliding expirations?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3489.1" xmlns="http://www.w3.org/1999/xhtml">What unit of measurement is used by </span><code class="inlineCode"><span class="koboSpan" id="kobo.3490.1" xmlns="http://www.w3.org/1999/xhtml">Size</span></code><span class="koboSpan" id="kobo.3491.1" xmlns="http://www.w3.org/1999/xhtml"> for the in-memory cache?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3492.1" xmlns="http://www.w3.org/1999/xhtml">You have written the following statement to get information about in-memory caching but </span><code class="inlineCode"><span class="koboSpan" id="kobo.3493.1" xmlns="http://www.w3.org/1999/xhtml">stats</span></code><span class="koboSpan" id="kobo.3494.1" xmlns="http://www.w3.org/1999/xhtml"> is </span><code class="inlineCode"><span class="koboSpan" id="kobo.3495.1" xmlns="http://www.w3.org/1999/xhtml">null</span></code><span class="koboSpan" id="kobo.3496.1" xmlns="http://www.w3.org/1999/xhtml">. </span><span class="koboSpan" id="kobo.3496.2" xmlns="http://www.w3.org/1999/xhtml">What must you do to fix this issue?
        </span><pre class="programlisting code"><code class="hljs-code"><span class="koboSpan" id="kobo.3497.1" xmlns="http://www.w3.org/1999/xhtml">MemoryCacheStatistics? </span><span class="koboSpan" id="kobo.3497.2" xmlns="http://www.w3.org/1999/xhtml">stats = _memoryCache.GetCurrentStatistics();
</span></code></pre>
</li>
<li class="numberedList"><span class="koboSpan" id="kobo.3498.1" xmlns="http://www.w3.org/1999/xhtml">What data types can be stored in (a) an in-memory cache, and (b) a distributed cache?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3499.1" xmlns="http://www.w3.org/1999/xhtml">What are the differences between the Retry and Circuit Breaker patterns?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3500.1" xmlns="http://www.w3.org/1999/xhtml">When using the RabbitMQ default direct exchange, what must the routing key be for a queue named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3501.1" xmlns="http://www.w3.org/1999/xhtml">product</span></code><span class="koboSpan" id="kobo.3502.1" xmlns="http://www.w3.org/1999/xhtml">?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3503.1" xmlns="http://www.w3.org/1999/xhtml">What is the difference between a fanout and a topic exchange?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3504.1" xmlns="http://www.w3.org/1999/xhtml">What port does RabbitMQ listen on by default?</span></li>
<li class="numberedList"><span class="koboSpan" id="kobo.3505.1" xmlns="http://www.w3.org/1999/xhtml">When inheriting from the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3506.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundService</span></code><span class="koboSpan" id="kobo.3507.1" xmlns="http://www.w3.org/1999/xhtml"> class, what method must you override that is called automatically by the host to run your service?</span></li>
</ol>
<h2 class="heading-2" id="_idParaDest-373"><span class="koboSpan" id="kobo.3508.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 9.2 – Explore topics</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3509.1" xmlns="http://www.w3.org/1999/xhtml">Use the links on the following page to learn more details about the topics covered in this chapter:</span></p>
<p class="normal"><a href="https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-9---caching-queuing-and-resilient-background-services"><span class="url"><span class="koboSpan" id="kobo.3510.1" xmlns="http://www.w3.org/1999/xhtml">https://github.com/markjprice/apps-services-net8/blob/main/docs/book-links.md#chapter-9---caching-queuing-and-resilient-background-services</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-374"><span class="koboSpan" id="kobo.3511.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 9.3 – Replace the Distributed Memory Cache with another distributed cache implementation</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3512.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, we used the Distributed Memory Cache implementation to explore how to use a distributed cache. </span></p>
<p class="normal"><span class="koboSpan" id="kobo.3513.1" xmlns="http://www.w3.org/1999/xhtml">As an optional exercise, register for an Azure account if you have not already, create an </span><strong class="screenText"><span class="koboSpan" id="kobo.3514.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cache for Redis</span></strong><span class="koboSpan" id="kobo.3515.1" xmlns="http://www.w3.org/1999/xhtml"> resource, and change your web service project configuration to use it.</span></p>
<p class="normal"><span class="koboSpan" id="kobo.3516.1" xmlns="http://www.w3.org/1999/xhtml">In the </span><code class="inlineCode"><span class="koboSpan" id="kobo.3517.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.WebApi.Service</span></code><span class="koboSpan" id="kobo.3518.1" xmlns="http://www.w3.org/1999/xhtml">, you will need to reference the Redis package, comment out the previously registered distributed cache implementation, and then call the extension method to register Redis as the distributed cache implementation:</span></p>
<pre class="programlisting code"><code class="hljs-code"><span class="hljs-comment"><span class="koboSpan" id="kobo.3519.1" xmlns="http://www.w3.org/1999/xhtml">// builder.Services.AddDistributedMemoryCache();</span></span><span class="koboSpan" id="kobo.3520.1" xmlns="http://www.w3.org/1999/xhtml">
builder.Services.AddStackExchangeRedisCache(options =&gt;
{
  options.Configuration = builder.Configuration
    .GetConnectionString(</span><span class="hljs-string"><span class="koboSpan" id="kobo.3521.1" xmlns="http://www.w3.org/1999/xhtml">"MyRedisConStr"</span></span><span class="koboSpan" id="kobo.3522.1" xmlns="http://www.w3.org/1999/xhtml">);
  options.InstanceName = </span><span class="hljs-string"><span class="koboSpan" id="kobo.3523.1" xmlns="http://www.w3.org/1999/xhtml">"SampleInstance"</span></span><span class="koboSpan" id="kobo.3524.1" xmlns="http://www.w3.org/1999/xhtml">;
});
</span></code></pre>
<p class="normal"><span class="koboSpan" id="kobo.3525.1" xmlns="http://www.w3.org/1999/xhtml">Read more at the following links:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.3526.1" xmlns="http://www.w3.org/1999/xhtml">Azure Cache for Redis: </span><a href="https://azure.microsoft.com/en-us/products/cache/"><span class="url"><span class="koboSpan" id="kobo.3527.1" xmlns="http://www.w3.org/1999/xhtml">https://azure.microsoft.com/en-us/products/cache/</span></span></a><span class="koboSpan" id="kobo.3528.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3529.1" xmlns="http://www.w3.org/1999/xhtml">Redis NuGet package: </span><a href="https://www.nuget.org/packages/Microsoft.Extensions.Caching.StackExchangeRedis"><span class="url"><span class="koboSpan" id="kobo.3530.1" xmlns="http://www.w3.org/1999/xhtml">https://www.nuget.org/packages/Microsoft.Extensions.Caching.StackExchangeRedis</span></span></a><span class="koboSpan" id="kobo.3531.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3532.1" xmlns="http://www.w3.org/1999/xhtml">Redis with .NET: </span><a href="https://docs.redis.com/latest/rs/references/client_references/client_csharp"><span class="url"><span class="koboSpan" id="kobo.3533.1" xmlns="http://www.w3.org/1999/xhtml">https://docs.redis.com/latest/rs/references/client_references/client_csharp</span></span></a><span class="koboSpan" id="kobo.3534.1" xmlns="http://www.w3.org/1999/xhtml">.</span></li>
</ul>
<h2 class="heading-2" id="_idParaDest-375"><span class="koboSpan" id="kobo.3535.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 9.4 – Replace Hangfire with Quartz.NET</span></h2>
<p class="normal"><strong class="keyWord"><span class="koboSpan" id="kobo.3536.1" xmlns="http://www.w3.org/1999/xhtml">Quartz.NET</span></strong><span class="koboSpan" id="kobo.3537.1" xmlns="http://www.w3.org/1999/xhtml"> is a similar library to Hangfire. </span><span class="koboSpan" id="kobo.3537.2" xmlns="http://www.w3.org/1999/xhtml">Read the official documentation, and then create a project named </span><code class="inlineCode"><span class="koboSpan" id="kobo.3538.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Quartz</span></code><span class="koboSpan" id="kobo.3539.1" xmlns="http://www.w3.org/1999/xhtml"> that implements the same functionality as </span><code class="inlineCode"><span class="koboSpan" id="kobo.3540.1" xmlns="http://www.w3.org/1999/xhtml">Northwind.Background.Hangfire</span></code><span class="koboSpan" id="kobo.3541.1" xmlns="http://www.w3.org/1999/xhtml">:</span></p>
<p class="normal"><a href="https://www.quartz-scheduler.net/"><span class="url"><span class="koboSpan" id="kobo.3542.1" xmlns="http://www.w3.org/1999/xhtml">https://www.quartz-scheduler.net/</span></span></a></p>
<h2 class="heading-2" id="_idParaDest-376"><span class="koboSpan" id="kobo.3543.1" xmlns="http://www.w3.org/1999/xhtml">Exercise 9.5 – Review the Reliable Web App pattern</span></h2>
<p class="normal"><span class="koboSpan" id="kobo.3544.1" xmlns="http://www.w3.org/1999/xhtml">The </span><strong class="keyWord"><span class="koboSpan" id="kobo.3545.1" xmlns="http://www.w3.org/1999/xhtml">Reliable Web App</span></strong><span class="koboSpan" id="kobo.3546.1" xmlns="http://www.w3.org/1999/xhtml"> (</span><strong class="keyWord"><span class="koboSpan" id="kobo.3547.1" xmlns="http://www.w3.org/1999/xhtml">RWA</span></strong><span class="koboSpan" id="kobo.3548.1" xmlns="http://www.w3.org/1999/xhtml">) pattern is a set of best practices with prescriptive guidance that helps developers successfully migrate an on-premises web project to the cloud. </span><span class="koboSpan" id="kobo.3548.2" xmlns="http://www.w3.org/1999/xhtml">It includes a reference implementation and shows how to make the most of Azure cloud services to modernize mission-critical workloads in a reliable, secure, high-performance, cost-efficient manner using modern design, development, and operational practices:</span></p>
<p class="normal"><a href="https://learn.microsoft.com/en-us/azure/architecture/web-apps/guides/reliable-web-app/dotnet/plan-implementation"><span class="url"><span class="koboSpan" id="kobo.3549.1" xmlns="http://www.w3.org/1999/xhtml">https://learn.microsoft.com/en-us/azure/architecture/web-apps/guides/reliable-web-app/dotnet/plan-implementation</span></span></a></p>
<p class="normal"><span class="koboSpan" id="kobo.3550.1" xmlns="http://www.w3.org/1999/xhtml">A collection of videos about the RWA pattern for .NET are at the following link:</span></p>
<p class="normal"><a href="https://www.youtube.com/playlist?list=PLI7iePan8aH54gIDJquV61dE3ENyaDi3Q"><span class="url"><span class="koboSpan" id="kobo.3551.1" xmlns="http://www.w3.org/1999/xhtml">https://www.youtube.com/playlist?list=PLI7iePan8aH54gIDJquV61dE3ENyaDi3Q</span></span></a></p>
<h1 class="heading-1" id="_idParaDest-377"><span class="koboSpan" id="kobo.3552.1" xmlns="http://www.w3.org/1999/xhtml">Summary</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3553.1" xmlns="http://www.w3.org/1999/xhtml">In this chapter, you learned:</span></p>
<ul>
<li class="bulletList"><span class="koboSpan" id="kobo.3554.1" xmlns="http://www.w3.org/1999/xhtml">About service architecture and how different parts of a system can affect performance.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3555.1" xmlns="http://www.w3.org/1999/xhtml">How to cache data closer to the action, using in-memory and distributed caching.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3556.1" xmlns="http://www.w3.org/1999/xhtml">How to control HTTP caching for clients and intermediaries.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3557.1" xmlns="http://www.w3.org/1999/xhtml">How to implement fault tolerance using Polly.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3558.1" xmlns="http://www.w3.org/1999/xhtml">How to implement queuing using RabbitMQ.</span></li>
<li class="bulletList"><span class="koboSpan" id="kobo.3559.1" xmlns="http://www.w3.org/1999/xhtml">How to implement long-running background services using </span><code class="inlineCode"><span class="koboSpan" id="kobo.3560.1" xmlns="http://www.w3.org/1999/xhtml">BackgroundService</span></code><span class="koboSpan" id="kobo.3561.1" xmlns="http://www.w3.org/1999/xhtml"> and Hangfire.</span></li>
</ul>
<p class="normal"><span class="koboSpan" id="kobo.3562.1" xmlns="http://www.w3.org/1999/xhtml">In the next chapter, you will learn how to use Azure Functions to implement nano services, aka serverless services.</span></p>
<h1 class="heading-1" id="_idParaDest-378"><span class="koboSpan" id="kobo.3563.1" xmlns="http://www.w3.org/1999/xhtml">Learn more on Discord</span></h1>
<p class="normal"><span class="koboSpan" id="kobo.3564.1" xmlns="http://www.w3.org/1999/xhtml">To join the Discord community for this book – where you can share feedback, ask questions to the author, and learn about new releases – follow the QR code below:</span></p>
<p class="normal"><a href="https://packt.link/apps_and_services_dotnet8"><span class="url"><span class="koboSpan" id="kobo.3565.1" xmlns="http://www.w3.org/1999/xhtml">https://packt.link/apps_and_services_dotnet8</span></span></a></p>
<p class="normal"><span class="koboSpan" id="kobo.3566.1" xmlns="http://www.w3.org/1999/xhtml"><img alt="" src="../Images/QR_Code3048220001028652625.png"/></span></p>
</div>
</body>
</html>
